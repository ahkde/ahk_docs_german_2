<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Überschreiben oder Deaktivieren von Hotkeys | AutoHotkey v2</title>
<meta name="description" content="Erfahren Sie, wie man interne Windows-Hotkeys überschreiben oder deaktivieren kann." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Überschreiben oder Deaktivieren von Hotkeys</h1>

<p>Man kann alle systeminternen Hotkeys außer <kbd>Win</kbd>+<kbd>L</kbd> und <kbd>Win</kbd>+<kbd>U</kbd> deaktivieren, wenn folgende Änderung an der Registry vorgenommen werden (diese Änderung sollte bei allen Betriebssystemen funktionieren und erfordert möglicherweise ein Neustart):</p>
<pre>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer
NoWinKeys REG_DWORD 0x00000001 (1)</pre>
<p>Aber lesen Sie weiter, wenn Sie mehr tun wollen, als sie nur zu deaktivieren.</p>
<p>Hotkeys, die zu anderen Anwendungen gehören, können überschrieben oder deaktiviert werden, wenn man ihnen im Skript eine Aktion zuweist. Am häufigsten wird dieses Feature dazu verwendet, Hotkeys zu ändern, die von Windows selbst vorgegeben sind. Das folgende Beispiel zeigt, wie man <kbd>Win</kbd>+<kbd>E</kbd> (der Tastaturkurzbefehl zum Starten des Windows Explorers) dazu bringen kann, eine andere Aktion durchzuführen:</p>
<pre>#e::MsgBox "Dieser Hotkey gehört nun zum Skript."</pre>
<p>Das nächste Beispiel zeigt, wie man den Hotkey <kbd>Win</kbd>+<kbd>R</kbd>, der zum Öffnen des Ausführen-Fensters gedacht ist, vollständig deaktivieren kann:</p>
<pre>#r::Return</pre>
<p>Mit einem ähnlichen Beispiel könnten auch die beiden <kbd>Win</kbd>-Tasten deaktiviert werden:</p>
<pre>LWin::return
RWin::return</pre>
<p>Es ist möglich, einen nicht-globalen Hotkey von einer Anwendung (also ein Tastaturkurzbefehl, der nur funktioniert, wenn die Anwendung das aktive Fenster ist) zu deaktivieren oder zu ändern. Das folgende Beispiel zeigt, wie <kbd>Strg</kbd>+<kbd>P</kbd> (Drucken) nur für den Texteditor deaktiviert wird, aber für andere Fenster bestehen bleibt:</p>
<pre>$^p::
{
	if WinActive("ahk_class Notepad")
		return  <em>; also nichts tun, so dass STRG+P im Texteditor nichts bewirkt.</em>
	Send "^p"
}</pre>
<p>Das $-Präfix im obigen Beispiel ist notwendig, damit der Hotkey sich "selbst senden" kann, ohne sich selbst zu aktivieren (ansonsten würde ein Warndialogfenster aufgrund einer Endlosschleife erscheinen). Siehe auch: <a href="../Hotkeys.htm#Context">Kontextabhängige Hotkeys</a>.</p>
<p>Um die obigen Beispiele zu testen, kopieren Sie sie in eine neue Textdatei, z. B. "Override.ahk", und starten Sie die Datei.</p>
</body>
</html>
