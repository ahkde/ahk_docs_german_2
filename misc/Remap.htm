<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Neubelegung von Tasten (Tastatur, Maus und Joystick) | AutoHotkey v2</title>
<meta name="description" content="Freier Tastatur-Remapper, der auch Maus- und Joystick-Tasten neubelegen kann. Zudem kann er sich wiederholende Aufgaben durch Senden von Tastendrücken &amp; Mausklicks automatisieren.">
<meta name="keywords" content="tastatur,remapper,neubelegen,neubelegung,taste,tastendrücke,klicks,maus,tasten,joystick,hotkeys,hotkey">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Neubelegung von Tasten <span class="headnote">(Tastatur, Maus und Joystick)</span></h1>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#intro">Einführung</a></li>
  <li><a href="#Remap">Neubelegung von Tastatur und Maus</a></li>
  <li><a href="#remarks">Bemerkungen</a></li>
  <li><a href="#moving-the-mouse-cursor">Bewegung des Mauszeigers per Tastatur</a></li>
  <li><a href="#registry">Neubelegung via Registry's "Scancode Map"</a></li>
  <li><a href="#related">Siehe auch</a></li>
</ul>

<h2 id="intro">Einführung</h2>
<p><strong>Einschränkung</strong>: Das unten beschriebene Neubelegungs-Feature von AutoHotkey ist in der Regel nicht so eindeutig und effektiv wie das direkte Neubelegen mit der Windows-Registry. Die Vor- und Nachteile der einzelnen Methoden finden Sie unter <a href="#registry">Neubelegung mit der Registry</a>.</p>
<h2 id="Remap">Neubelegung von Tastatur und Maus</h2>
<p>Die Syntax zum Neubelegen einer Taste ist <code>Originaltaste::Zieltaste</code>. Enthält ein <a href="../Scripts.htm">Skript</a> beispielsweise nur die folgende Zeile, würde sie <kbd>A</kbd> dazu bringen, sich wie <kbd>B</kbd> zu verhalten:</p>
<pre>a::b</pre>
<p>Im oberen Beispiel wird <kbd>B</kbd> selbst nicht geändert. <kbd>B</kbd> würde weiter "b" senden, es sei denn, Sie belegen die Taste wie im folgenden Beispiel mit etwas anderem:</p>
<pre>a::b
b::a</pre>
<p>Es reicht vollkommen aus, bei den meisten Neubelegungen Kleinbuchstaben zu verwenden, weil deren Großbuchstaben auch mit neubelegt werden (das heißt: Drückt man die neubelegte Taste bei aktivierter <kbd>Feststell</kbd>-Taste oder beim Drücken von <kbd>Umschalt</kbd>, würde automatisch ein Großbuchstabe gesendet werden). Ein Großbuchstabe als Zieltaste würde hingegen die Großschreibung erzwingen. Das folgende Beispiel würde ein großgeschriebenes B erzeugen, wenn Sie entweder "a" oder "A" eingeben (sofern <kbd>Feststell</kbd> ausgeschaltet ist):</p>
<pre>a::B</pre>
<p>Umgekehrt werden alle Modifikatoren, die auf der linken Seite enthalten sind, aber nicht auf der rechten Seite, automatisch losgelassen, wenn die Taste gesendet wird. Die folgenden zwei Zeilen beispielsweise würden ein kleines "b" erzeugen, wenn Sie entweder UMSCHALT+A oder STRG+A drücken:</p>
<pre>A::b
^a::b</pre>

<h3 id="RemapMouse">Neubelegung der Maus</h3>
<p>Die Tasten der Maus neu zu belegen, erfolgt auf dieselbe Weise wie mit den Tasten der Tastatur. Zum Beispiel:</p>
<table class="info">
  <tr>
    <th style="min-width: 11em;">Beispiel</th>
    <th abbr="Beschr">Beschreibung</th>
  </tr>
  <tr>
    <td><code>MButton::Shift</code></td>
    <td>Bringt die mittlere Maustaste dazu, sich wie <kbd>Umschalt</kbd> zu verhalten.</td>
  </tr>
  <tr>
    <td><code>XButton1::LButton</code></td>
    <td>Bringt die vierte Maustaste dazu, sich wie die linke Maustaste zu verhalten.</td>
  </tr>
  <tr>
    <td><code>RAlt::RButton</code></td>
    <td>Bringt die rechte <kbd>Alt</kbd>-Taste dazu, sich wie die rechte Maustaste zu verhalten.</td>
  </tr>
</table>

<h3 id="other-useful-remappings">Weitere nützliche Neubelegungen</h3>
<table class="info">
  <tr>
    <th style="min-width: 11em;">Beispiel</th>
    <th abbr="Beschr">Beschreibung</th>
  </tr>
  <tr>
    <td><code>CapsLock::Ctrl</code></td>
    <td>Bringt <kbd>Feststell</kbd> dazu, sich wie <kbd>Strg</kbd> zu verhalten. Um <kbd>Feststell</kbd> weiterhin ein- oder ausschalten zu können, fügen Sie zunächst die Tastenneubelegung <code>+CapsLock::CapsLock</code> hinzu. Diese Neubelegung schaltet <kbd>Feststell</kbd> ein oder aus, wenn Sie <kbd>Umschalt</kbd> gedrückt halten und <kbd>Feststell</kbd> drücken. Da bei beiden Neubelegungen zusätzliche Modifikatortasten gedrückt gehalten werden können, muss die spezifischere Neubelegung <code>+CapsLock::CapsLock</code> an erster Stelle gesetzt werden, bevor es funktionieren kann.</td>
  </tr>
  <tr>
    <td><code>XButton2::^LButton</code></td>
    <td>Bringt die fünfte Maustaste (XButton2) dazu, einen via STRG modifizierten Klick zu erzeugen.</td>
  </tr>
  <tr>
    <td><code>RAlt::AppsKey</code></td>
    <td>Bringt die rechte <kbd>Alt</kbd>-Taste dazu, sich wie <kbd>Menü</kbd> zu verhalten (das ist die Taste zum Öffnen des Kontextmenüs).</td>
  </tr>
  <tr>
    <td><code>RCtrl::RWin</code></td>
    <td>Bringt die rechte <kbd>Strg</kbd>-Taste dazu, sich wie die rechte <kbd>Win</kbd>-Taste zu verhalten.</td>
  </tr>
  <tr>
    <td><code>Ctrl::Alt</code></td>
    <td>Bringt beide <kbd>Strg</kbd>-Tasten dazu, sich wie <kbd>Alt</kbd> zu verhalten. Siehe jedoch <a href="#AltTab">Alt-Tab-Probleme</a>.</td>
  </tr>
  <tr>
    <td><code>^x::^c</code></td>
    <td>Bringt <kbd>Strg</kbd>+<kbd>X</kbd> dazu, <kbd>Strg</kbd>+<kbd>C</kbd> zu erzeugen. Sie würde auch <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>X</kbd> dazu bringen, <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>C</kbd> zu erzeugen, usw.</td>
  </tr>
  <tr>
    <td><code>RWin::Return</code></td>
    <td>Bringt die rechte <kbd>Win</kbd>-Taste dazu, nichts zu tun (siehe <a href="../commands/Return.htm">Return</a>).</td>
  </tr>
</table>
<p>Sie können die hier genannten Beispiele ausprobieren, indem Sie sie in eine neue Textdatei (z. B. "Remap.ahk") kopieren und anschließend starten.</p>
<p>In der <a href="../KeyList.htm">Tastenliste</a> finden Sie alle möglichen Namen der Tastatur- und Maustasten.</p>
<h2 id="remarks">Bemerkungen</h2>
<p>Mit der <a href="../commands/_HotIf.htm">#HotIf</a>-Direktive können Neubelegungen bestimmt werden, die nur für das angegebene Fenster (oder für die angegebene Bedingung) gültig sein sollen. Zum Beispiel:</p>
<pre>#HotIf WinActive("ahk_class Notepad")
a::b  <em>; Bringt 'a' dazu, sich im Texteditor wie 'b' zu verhalten.</em>
#HotIf  <em>; Macht nachfolgende Neubelegungen und Hotkeys für alle Fenster geltend.</em></pre>
<p>Das Neubelegen einer Taste wird bei folgenden Punkten als "vollständig" angesehen:</p>
<ul>
  <li>Hält man eine Modifikatortaste wie <kbd>Strg</kbd> oder <kbd>Umschalt</kbd> gedrückt, während man die Originaltaste eingibt, wird diese Modifikatortaste auch für die Zieltaste wirksam. <code>b::a</code> würde beispielsweise <kbd>Strg</kbd>+<kbd>A</kbd> erzeugen, wenn Sie <kbd>Strg</kbd>+<kbd>B</kbd> drücken.</li>
  <li>Die <kbd>Feststell</kbd>-Taste beeinflusst neubelegte Tasten auf die gleiche Weise wie normale Tasten.</li>
  <li>Beim Gedrückthalten der Zieltaste wird solange die Originaltaste gesendet, bis Sie die Zieltaste wieder loslassen. Es ist möglich, dass einige Videospiele Neubelegungen dieser Art nicht unterstützen; in solchen Fällen verhalten sich die Tastatur und Maus so, als wären sie noch unbelegt.</li>
  <li>Neubelegte Tasten werden automatisch wiederholt, während sie gedrückt gehalten werden (außer Tasten, die zu Maustasten gemacht worden sind).</li>
</ul>
<p id="HookHotkeys">Eine neubelegte Taste kann normale Hotkeys auslösen, aber standardmäßig keine Maus- oder <a href="../commands/_UseHook.htm">Hook-Hotkeys</a> (mit <a href="../commands/ListHotkeys.htm">ListHotkeys</a> können Sie herausfinden, welche Hotkeys das Hook-Feature haben). Bei dem Beispiel <code>a::b</code> würde durch Drücken von <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>A</kbd> der Hotkey <code>^!b</code> ausgelöst werden, sofern <code>^!b</code> kein Hook-Hotkey ist. Wenn <code>^!b</code> ein Hook-Hotkey ist, können Sie <code>^!a</code> als Hotkey definieren, wenn <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>A</kbd> die gleiche Aktion ausführen soll wie <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>B</kbd>. Zum Beispiel:</p>
<pre>a::b
^!a::
^!b::ToolTip "Sie haben " ThisHotkey " gedrückt."
</pre>
<p>Alternativ kann man <a href="../commands/_InputLevel.htm">#InputLevel</a> verwenden, um das Standardverhalten zu überschreiben. Zum Beispiel:</p>
<pre>#InputLevel 1
a::b

#InputLevel 0
^!b::ToolTip "Sie haben " ThisHotkey " gedrückt."
</pre>
<p id="SendPlay">Verwendet man <a href="../commands/SendMode.htm">SendMode</a> während der <a href="../Scripts.htm#auto">Startphase des Skripts</a>, hat es Einfluss auf alle Neubelegungen. Da beim Neubelegen <a href="../commands/Send.htm#blind">Send "{Blind}"</a> gilt und der <a href="../commands/SendMode.htm">SendPlay-Modus</a> {Blind} nicht richtig unterstützt, kann es passieren, dass einige Neubelegungen nicht korrekt im SendPlay-Modus laufen (besonders <kbd>Strg</kbd>, <kbd>Umschalt</kbd>, <kbd>Alt</kbd> und <kbd>Win</kbd>). Um das zu umgehen, verzichten Sie auf <code>SendMode "Play"</code> während der <a href="../Scripts.htm#auto">Startphase des Skripts</a>, wenn Neubelegungen vorhanden sind; ersetzen Sie stattdessen Send mit <a href="../commands/Send.htm#SendPlay">SendPlay</a> an anderen Stellen des Skripts. Alternativ können Sie Ihre Neubelegungen in Hotkeys umwandeln (wie unten beschrieben), die explizit SendEvent statt Send aufrufen.</p>
<p id="EscapeBrace">Wenn <em>Zieltaste</em> <code>{</code> sein soll, muss es mit einem <a href="EscapeChar.htm">Escapezeichen</a> versehen werden, zum Beispiel <code>x::`{</code>. Ansonsten wird sie als geschweifte Startklammer für die Funktion des <a href="../Hotkeys.htm">Hotkeys</a> interpretiert.</p>
<p id="actually">Beim Starten eines Skripts wird jede Neubelegung in ein <a href="../Hotkeys.htm">Hotkey</a>-Paar umgewandelt. Zum Beispiel würde ein Skript, das <code>a::b</code> enthält, eigentlich folgende zwei Hotkeys enthalten:</p>
<pre>*<strong>a</strong>::
{
    SetKeyDelay -1   <em>; Ist die Zieltaste eine Maustaste, dann stattdessen SetMouseDelay.</em>
    Send "<a href="../commands/Send.htm#blind">{Blind}</a>{<strong>b</strong> DownR}"  <em>; <a href="../commands/Send.htm#DownR">DownR</a> ist wie Down, außer dass andere Send-Funktionen im Skript nicht davon ausgehen, dass "b" beim Senden unten bleiben soll.</em>
}

*<strong>a up</strong>::
{
    SetKeyDelay -1  <em>; Siehe den Hinweis unten, warum die Druckdauer bei beiden SetKeyDelays fehlt.</em>
    Send "{Blind}{<strong>b</strong> Up}"
}</pre>
<p>Allerdings unterscheiden sich die obigen Hotkeys unter folgenden Umständen:</p>
<ol>
  <li>Wenn die Originaltaste die linke <kbd>Strg</kbd>-Taste und die Zieltaste eine <kbd>Alt</kbd>-Taste ist, wird die Zeile <code>Send "{Blind}{LAlt DownR}"</code> durch <code>Send "{Blind}<strong>{LCtrl up}</strong>{LAlt DownR}"</code> ersetzt. Das Gleiche gilt, wenn die Originaltaste die rechte <kbd>Strg</kbd>-Taste ist, aber dann stattdessen <code>{RCtrl up}</code>.</li>
  <li>Wenn eine Tastatur-Taste dazu gebracht wird, eine Maustaste zu sein (z. B. <code>RCtrl::RButton</code>), verwenden die obigen Hotkeys SetMouseDelay statt SetKeyDelay. Darüber hinaus wird der erste Hotkey oben mit dem folgenden Hotkey ersetzt, um die Autowiederholungsfunktion der Tastatur daran zu hindern, wiederholende Mausklicks zu generieren:
    <pre>*RCtrl::
{
    SetMouseDelay -1
    if not GetKeyState("RButton")  <em>; wenn die rechte Maustaste noch nicht unten ist ...</em>
        Send "{Blind}{RButton DownR}"
}</pre>
  </li>
  <li>Wenn die Originaltaste eine <a href="../Hotkeys.htm#combo">benutzerdefinierte Kombination</a> ist, wird der Platzhalter-Modifikator (*) weggelassen, damit der Hotkey ordnungsgemäß funktionieren kann.</li>
</ol>
<p>Beachten Sie, dass SetKeyDelay's zweiter Parameter (<a href="../commands/SetKeyDelay.htm#dur">Druckdauer</a>) bei den Hotkeys oben weggelassen wurde. Das liegt daran, dass die Druckdauer nicht auf Nur-Unten- oder Nur-Oben-Ereignisse angewendet wird, wie z. B. <code>{b down}</code> und <code>{b up}</code>. Allerdings wird sie auf Änderungen in Bezug auf den Zustand der Modifikatortasten (Umschalt, Strg, Alt und Win) angewendet, was Neubelegungen wie z. B. <code>a::B</code> oder <code>a::^b</code> beeinflusst. Folglich würde jede Druckdauer, die während der <a href="../Scripts.htm#auto">Startphase des Skripts</a> in Kraft gesetzt wird, für alle Neubelegungen gelten.</p>
<p>Da Neubelegungen in Hotkeys umgewandelt werden, wie oben beschrieben, können sie von der <a href="../commands/Suspend.htm">Suspend</a>-Funktion beeinflusst werden. Ebenso könnte die <a href="../commands/Hotkey.htm">Hotkey</a>-Funktion eine Neubelegung deaktivieren oder ändern. Zum Beispiel würden die zwei folgenden Funktionen die Neubelegung <code>a::b</code> deaktivieren.</p>
<pre>Hotkey "*a", "Off"
Hotkey "*a up", "Off"</pre>
<p id="AltTab">Alt-Tab-Probleme: Wenn Sie eine Taste oder Maustaste zu <kbd>Alt</kbd> umbelegen, wird diese Taste wahrscheinlich nicht in der Lage sein, ein Alt-Tab richtig durchzuführen. Eine mögliche Übergangslösung ist es, den Hotkey <code>*Tab::Send "{Blind}{Tab}"</code> einzufügen. Aber beachten Sie, dass dieser Hotkey Probleme verursachen kann, wenn die echte <kbd>Alt</kbd>-Taste zum Alt-Tabbing verwendet wird. Er sollte daher nur verwendet werden, wenn Sie ausschließlich mit neubelegten Tasten und/oder <a href="../Hotkeys.htm#alttab">Alt-Tab-Hotkeys</a> Alt-Tabbing durchführen.</p>
<p>Zusätzlich zu den Tasten und Maustasten in der <a href="../KeyList.htm">Tastenliste</a> kann die Originaltaste auch eine virtuelle Taste (VKnn) oder ein Scancode (SCnnn) sein (siehe <a href="../KeyList.htm#SpecialKeys">Sondertasten</a>). Das gleiche gilt für die Zieltaste, außer dass nach der virtuellen Taste optional auch ein Scancode angegeben werden kann. Bei den meisten Tastaturbelegungen wäre beispielsweise <code>sc01e::vk42sc030</code> das gleiche wie <code>a::b</code>.</p>
<p>Um eine Taste zu deaktivieren statt neu zu belegen, erstellen Sie einfach einen einzeiligen Hotkey, der ein <a href="../commands/Return.htm">Return</a> auslöst. <code>F1::Return</code> beispielsweise würde <kbd>F1</kbd> deaktivieren.</p>
<p>Folgende Tasten werden nicht von der internen Neubelegungsmethode unterstützt:</p>
<ul>
  <li>Das Mausrad (WheelUp/Down/Left/Right).</li>
  <li>"Pause" als Zieltastenname (da es mit einer gleichnamigen internen Funktion übereinstimmt). Verwenden Sie stattdessen <code>vk13</code> oder den entsprechenden Scancode.</li>
  <li>Geschweifte Klammern {} als Zieltasten. Verwenden Sie stattdessen die <a href="../commands/Send.htm#vk">VK/SC-Methode</a>; z. B. <code>x::+sc01A</code> und <code>y::+sc01B</code>.</li>
</ul>
<h2 id="moving-the-mouse-cursor">Bewegung des Mauszeigers per Tastatur</h2>
<p>Im vollausgestatteten <a href="../scripts/index.htm#NumpadMouse">Tastatur-zu-Maus-Skript</a> wird gezeigt, wie der Mauszeiger mit der Tastatur bewegt werden kann. Da dieses Skript eine reibungslose Mausbewegung, -beschleunigung und andere Features bietet, sollten Sie es verwenden, wenn Sie vorhaben, die Mausaktivitäten häufig mit der Tastatur durchzuführen. Das folgende Beispiel ist eine vereinfachte Version davon:</p>
<pre>*#up::MouseMove 0, -10, 0, "R"  <em>; WIN + NACH-OBEN =&gt; Zeiger nach oben bewegen</em>
*#Down::MouseMove 0, 10, 0, "R"  <em>; WIN + NACH-UNTEN =&gt; Zeiger nach unten bewegen</em>
*#Left::MouseMove -10, 0, 0, "R"  <em>; WIN + NACH-LINKS =&gt; Zeiger nach links bewegen</em>
*#Right::MouseMove 10, 0, 0, "R"  <em>; WIN + NACH-RECHTS =&gt; Zeiger nach rechts bewegen</em>

*&lt;#RCtrl::  <em>; WIN-LINKS + STRG-RECHTS =&gt; Linksklick (halten Sie STRG/UMSCHALT gedrückt, um einen via STRG oder UMSCHALT modifizierten Klick zu erzeugen).</em>
{
    SendEvent "{Blind}{LButton down}"
    KeyWait "RCtrl"  <em>; Hindert die Tastatur-Auto-Wiederholung daran, den Mausklick zu wiederholen.</em>
    SendEvent "{Blind}{LButton up}"
}

*&lt;#AppsKey::  <em>; WIN-LINKS + MENU =&gt; Rechter Mausklick</em>
{
    SendEvent "{Blind}{RButton down}"
    KeyWait "AppsKey"  <em>; Hindert die Tastatur-Auto-Wiederholung daran, den Mausklick zu wiederholen.</em>
    SendEvent "{Blind}{RButton up}"
}</pre>
<h2 id="registry">Neubelegung via Registry's "Scancode Map"</h2>
<p><strong>Vorteile:</strong></p>
<ul>
  <li>Die Neubelegung via Registry ist in der Regel eindeutiger und effektiver als die <a href="#Remap">Neubelegung via AutoHotkey</a>. Sie unterstützt zum Beispiel eine breitere Auswahl von Videospielen, sie hat keine bekannten <a href="#AltTab">Alt-Tab-Probleme</a>, und kann Hook-Hotkeys von AutoHotkey auslösen (während die Neubelegung via AutoHotkey einen <a href="#HookHotkeys">Workaround</a> erfordert).</li>
  <li>Wenn Sie sich dafür entscheiden, die Registry-Einträge manuell anzulegen (wie unten beschrieben), benötigen Sie keine externe Software, um Ihre Tastatur neu zu belegen. Und selbst wenn Sie über <a href="https://www.bleepingcomputer.com/download/keytweak/">KeyTweak</a> die Registry-Einträge anlegen... Es muss es nicht die ganze Zeit laufen (im Gegensatz zu AutoHotkey).</li>
</ul>
<p><strong>Nachteile:</strong></p>
<ul>
  <li>Die Neubelegung via Registry ist unflexibel... Es wird ein Neustart benötigt, um Änderungen rückgängig zu machen oder um neue Änderungen in Kraft zu setzen.</li>
  <li>Ihre Auswirkung ist global... Sie kann keine Neubelegungen für bestimmte Benutzer, Anwendungen oder Sprachen/Regionen erstellen.</li>
  <li>Sie kann keine Tastendrücke in Verbindung mit <kbd>Umschalt</kbd>, <kbd>Strg</kbd>, <kbd>Alt</kbd> oder <kbd>AltGr</kbd> senden. Zum Beispiel kann sie keinen Kleinbuchstaben zu einem Großbuchstaben neu belegen.</li>
  <li>Sie unterstützt nur die Tastatur (AutoHotkey beherrscht <a href="#RemapMouse">Maus-Neubelegung</a> und <a href="RemapJoystick.htm">limitierte Joystick-Neubelegung</a>).</li>
</ul>
<p><strong>Wie man Änderungen an der Registry vornimmt:</strong> Es gibt mindestens zwei Methoden, um Tasten via Registry neu zu belegen:</p>
<ol>
  <li>Verwenden Sie ein Programm wie <a href="https://www.bleepingcomputer.com/download/keytweak/">KeyTweak</a> (Freeware), um Tasten visuell neu zu belegen. Es ändert die Registry für Sie.</li>
  <li>Belegen Sie Tasten manuell neu, indem Sie eine .reg-Datei (Klartext) erstellen und diese in die Registry laden. Siehe dazu <a href="https://www.autohotkey.com/forum/post-56216.html#56216">www.autohotkey.com/forum/post-56216.html#56216</a>.</li>
</ol>
<h2 id="related">Siehe auch</h2>
<ul>
  <li><a href="../KeyList.htm#Joystick">Liste mit Tasten</a></li>
  <li><a href="../commands/GetKeyState.htm">GetKeyState</a></li>
  <li><a href="RemapJoystick.htm">Neubelegung eines Joysticks</a></li>
</ul>
</body>
</html>
