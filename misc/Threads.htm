<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Threads - Verhalten &amp; Priorität | AutoHotkey v2</title>
<meta name="description" content='Der "aktuelle Thread" ist laut Definition der Ausführungsablauf, den das jüngste Ereignis indirekt aufgerufen hat; dies können zum Beispiel Hotkeys, SetTimer-Subroutinen, benutzerdefinierte Menüpunkte und GUI-Ereignisse sein.' />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Threads</h1>

<p>Der <em>aktuelle Thread</em> ist laut Definition der Ausführungsablauf, den das jüngste Ereignis indirekt aufgerufen hat; dies können zum Beispiel <a href="../Hotkeys.htm">Hotkeys</a>, <a href="../commands/SetTimer.htm">SetTimer-Subroutinen</a>, <a href="../objects/Menu.htm">benutzerdefinierte Menüpunkte</a> und <a href="../objects/Gui.htm#Events">GUI-Ereignisse</a> sein. Der <em>aktuelle Thread</em> kann Funktionen innerhalb seiner eigenen Subroutine ausführen, oder innerhalb von anderen Subroutinen, die durch diese Subroutine aufgerufen wurden.</p>
<p>AutoHotkey ist eigentlich nicht in der Lage, mehrere Threads gleichzeitig auszuführen. Trotzdem kann es dieses Verhalten teilweise nachahmen: Beim Starten eines zweiten Threads -- z. B. durch Drücken eines weiteren Hotkeys, während der vorherige Hotkey noch läuft -- wird der <em>aktuelle Thread</em> unterbrochen (vorübergehend angehalten), so dass der neue Thread zum <em>aktuellen Thread</em> werden kann. Beim Starten eines dritten Threads, während der zweite Thread noch läuft, werden sowohl der zweite als auch der erste Thread in den Ruhezustand versetzt, und so weiter.</p>
<p>Sobald der <em>aktuelle Thread</em> endet, wird der vor kurzem unterbrochene Thread fortgesetzt, und so weiter, bis alle Threads letztendlich fertig sind. Wenn ein Thread fortgesetzt wird, werden seine Einstellungen wie <a href="../commands/SendMode.htm">SendMode</a> und <a href="../commands/SetKeyDelay.htm">SetKeyDelay</a> automatisch auf den Stand unmittelbar vor der Unterbrechung zurückgesetzt; das heißt, dass ein Thread keine unerwünschten Nebeneffekte durch eine Unterbrechung erfahren wird (außer bei einer möglichen Änderung des <a href="../commands/WinActivate.htm">aktiven Fensters</a>).</p>
<p class="note"><strong>Hinweis</strong>: Die Funktion bzw. der Menüpunkt <a href="../commands/KeyHistory.htm">KeyHistory</a> zeigt an, wie viele Threads im unterbrochenen Zustand sind, und die Funktion bzw. der Menüpunkt <a href="../commands/ListHotkeys.htm">ListHotkeys</a> zeigt an, welche Hotkeys über Threads verfügen.</p>
<p>Ein einzelnes Skript kann mehrere Dialogfenster wie <a href="../commands/MsgBox.htm">MsgBox</a>, <a href="../commands/InputBox.htm">InputBox</a>, <a href="../commands/FileSelect.htm">FileSelect</a> und <a href="../commands/DirSelect.htm">DirSelect</a> zur gleichen Zeit anzeigen. Starten Sie hierfür einfach einen neuen Thread (via <a href="../Hotkeys.htm">Hotkey</a>, <a href="../commands/SetTimer.htm">zeitgesteuerte Subroutine</a>, <a href="../objects/Menu.htm">benutzerdefinierter Menüpunkt</a> und so weiter), während bereits ein Dialogfenster angezeigt wird.</p>
<p>Standardmäßig kann eine bereits laufende <a href="../Hotkeys.htm">Hotkey</a>- oder <a href="../Hotstrings.htm">Hotstring</a>-Subroutine nicht zum zweiten Mal ausgeführt werden. Mit <a href="../commands/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> kann dieses Verhalten geändert werden.</p>
<p><strong>Siehe auch:</strong> Die <a href="../commands/Thread.htm">Thread</a>-Funktion bestimmt die Priorität oder Unterbrechbarkeit von Threads.</p>

<h2 id="Priority">Thread-Priorität</h2>
<p>Ein Thread (<a href="../Hotkeys.htm">Hotkey</a>, <a href="../commands/SetTimer.htm">zeitgesteuerte Subroutine</a>, <a href="../objects/Menu.htm">benutzerdefinierter Menüpunkt</a> und so weiter) mit einer niedrigeren Priorität als die des <em>aktuellen Threads</em> kann diesen nicht unterbrechen. In dieser Zeit werden derartige Timer nicht laufen, und jeder Versuch des Benutzers, einen Thread zu erstellen (z. B. durch Drücken eines <a href="../Hotkeys.htm">Hotkeys</a> oder einer <a href="../commands/GuiControls.htm#Button">GUI-Schaltfläche</a>), wird weder funktionieren noch wird der Thread gepuffert. Aus diesem Grund ist es für gewöhnlich am besten, hochpriorisierte Threads so zu gestalten, dass sie schnell zum Ende kommen, oder verwenden Sie <a href="../commands/Critical.htm">Critical</a>, anstatt sie mit hoher Priorität zu versehen.</p>
<p>Die Standardpriorität ist 0. Alle Threads verwenden die Standardpriorität, es sei denn, ihre Priorität wurden durch eine der folgenden Methoden geändert:</p>
<ul>
  <li>Eine zeitgesteuerte Subroutine kann von <a href="../commands/SetTimer.htm">SetTimer</a> eine bestimmte Priorität erhalten.</li>
  <li>Ein Hotkey kann von der <a href="../commands/Hotkey.htm">Hotkey</a>-Funktion eine bestimmte Priorität erhalten.</li>
  <li>Ein <a href="../Hotstrings.htm">Hotstring</a> kann beim Definieren oder von der <a href="../commands/_Hotstring.htm">#Hotstring</a>-Direktive eine bestimmte Priorität erhalten.</li>
  <li>Ein benutzerdefinierter Menüpunkt kann von der <a href="../objects/Menu.htm#Add">Menu.Add</a>-Methode eine bestimmte Priorität erhalten.</li>
  <li>Der <em>aktuelle Thread</em> kann seine eigene Priorität über die <a href="../commands/Thread.htm">Thread</a>-Funktion setzen.</li>
</ul>
<p>Die <a href="../commands/OnExit.htm">OnExit</a>-Callback-Funktion (falls vorhanden) wird bei Aufruf immer laufen, egal welche Priorität der <em>aktuelle Thread</em> hat.</p>

<h2 id="Interrupt">Thread-Unterbrechbarkeit</h2>
<p>Bei den meisten Ereignissen dürfen neue Threads nur dann gestartet werden, wenn der aktuelle Thread <em>unterbrechbar</em> ist. Ein Thread kann zum Beispiel aufgrund folgender Fälle <em>unterbrechungsfrei</em> sein:</p>
<ul>
  <li>Der Thread wurde als <em>kritisch</em> eingestuft. <a href="../commands/Critical.htm">Critical</a> könnte durch den Thread selbst oder via <a href="../Scripts.htm#auto">Auto-Execute-Thread</a> aufgerufen worden sein.</li>
  <li>Der Thread läuft noch nicht lange genug, um die Bedingungen zu erfüllen, um unterbrechbar zu werden, wie durch <a href="../commands/Thread.htm#Interrupt">Thread "Interrupt"</a> festgelegt.</li>
  <li>Eines der Menüs des Skripts wird gerade angezeigt (wie z. B. das Tray-Menü oder eine Menüleiste).</li>
  <li>Eine Verzögerung wird gerade durchgeführt, die von <a href="../commands/Send.htm">Send</a> (meistens durch <a href="../commands/SetKeyDelay.htm">SetKeyDelay</a>), <a href="../commands/WinActivate.htm">WinActivate</a> oder einer <a href="A_Clipboard.htm">Clipboard</a>-Operation eingeleitet wurde.</li>
  <li>Ein <a href="../commands/OnExit.htm">OnExit</a>-Thread wird ausgeführt.</li>
  <li>Ein Warndialogfenster wird gerade angezeigt, weil das <a href="A_MaxHotkeysPerInterval.htm">A_MaxHotkeysPerInterval</a>-Limit erreicht wurde oder weil ein Problem bei der Aktivierung des Tastatur- oder Maus-Hooks aufgetreten ist (sehr selten).</li>
</ul>
<h3 id="Behave">Verhalten von unterbrechungsfreien Threads</h3>
<p>Im Gegensatz zu hochpriorisierten Threads werden Ereignisse, die während der unterbrechungsfreien Phase des Threads auftreten, nicht verworfen. Drückt der Benutzer beispielsweise einen <a href="../Hotkeys.htm">Hotkey</a>, während der aktuelle Thread unterbrechungsfrei ist, wird dieser Hotkey solange gepuffert, bis der aktuelle Thread endet oder unterbrechbar wird, erst dann wird der Hotkey als neuer Thread gestartet.</p>
<p>Jeder Thread kann im Notfall unterbrochen werden. Notfälle sind:</p>
<ul>
  <li>Ein <a href="../commands/OnExit.htm">OnExit</a>-Callback.</li>
  <li>Eine <a href="../commands/OnMessage.htm">OnMessage</a>-Funktion, die eine nicht <a href="../commands/OnMessage.htm#buffering">gepufferte</a> Meldung überwacht.</li>
  <li>Ein <a href="../commands/CallbackCreate.htm">Callback</a>, der indirekt durch den Thread selbst ausgelöst wird (z. B. über <a href="../commands/PostMessage.htm">SendMessage</a> oder <a href="../commands/DllCall.htm">DllCall</a>).</li>
</ul>
<p>Um diese Unterbrechungen zu vermeiden, können solche Funktionen vorübergehend deaktiviert werden.</p>
<p>Ein <a href="../commands/Critical.htm">kritischer</a> Thread wird unterbrechbar, wenn ein <a href="../commands/MsgBox.htm">Mitteilungsfenster</a> oder ein anderes Dialogfenster angezeigt wird. Im Gegensatz zu <a href="../commands/Thread.htm">Thread Interrupt</a> wird der Thread allerdings wieder kritisch (und demzufolge unterbrechungsfrei), wenn der Benutzer das Dialogfenster schließt.</p>

</body>
</html>
