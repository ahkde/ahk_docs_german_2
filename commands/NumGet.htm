<!DOCTYPE HTML>
<html lang="de">
<head>
<title>NumGet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die NumGet-Funktion gibt eine binäre Nummer zurück, die auf einer bestimmten Adresse + Offset zu finden ist." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>NumGet</h1>
<p>Gibt eine binäre Nummer zurück, die auf einer bestimmten Adresse + Offset zu finden ist.</p>
<pre class="Syntax">Nummer := <span class="func">NumGet</span>(Quelle, <span class="optional">Offset,</span> Typ)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Quelle</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
		<p>Ein <a href="../objects/Buffer.htm">Buffer</a>-ähnliches Objekt oder eine Speicheradresse.</p>
    <p>Obwohl ein beliebiges Objekt mit einer <a href="../objects/Buffer.htm#Ptr">Ptr</a>- und <a href="../objects/Buffer.htm#Size">Size</a>-Eigenschaft verwendet werden kann, ist diese Funktion für das native <a href="../objects/Buffer.htm">Buffer</a>-Objekt optimiert. Das Übergeben eines Objekts mit diesen Eigenschaften stellt sicher, dass die Funktion keinen Speicher aus einem ungültigen Bereich liest, was zu Abstürzen oder anderem unvorhersehbaren Verhalten führen kann.</p>
	</dd>

  <dt>Offset</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Eine Zahl (in Bytes), die mit <em>Quelle</em> addiert wird, um die Quelladresse zu bestimmen. Lässt man diesen Parameter weg, wird standardmäßig 0 verwendet.</p>
  </dd>

  <dt>Typ</dt>
  <dd>
      <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
      <p>Eine der folgenden Zeichenketten: UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr oder UPtr.</p>
    <p><em>Vorzeichenlose</em> 64-Bit-Integer werden nicht unterstützt, da der native Integer-Typ von AutoHotkey "Int64" ist. Um mit Zahlen größer gleich 0x8000000000000000 umzugehen, sollten Sie auf das U-Präfix verzichten und negative Werte als große Integer (Int64) behandeln. Ein als UInt64 gedachter Int64-Wert von -1 ist in Wirklichkeit 0xFFFFFFFFFFFFFFFF. Bei 64-Bit-Versionen ist UPtr äquivalent zu Int64.</p>
      <p>Diese Typen müssen in Anführungszeichen gesetzt werden, wenn sie als direkt geschriebene Zeichenketten verwendet werden.</p>
      <p>Um mehr darüber zu erfahren, siehe <a href="DllCall.htm#types">DllCall-Typen</a>.</p>
    </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
<p>Diese Funktion gibt die binäre Nummer auf der angegebenen Adresse + Offset zurück.</p>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Sind nur zwei Parameter vorhanden, muss der zweite Parameter <em>Typ</em> sein. Zum Beispiel wäre <code>NumGet(var, "int")</code> zulässig.</p>
<p>Es wird eventuell eine Ausnahme ausgelöst, wenn die Quelladresse ungültig ist. Allerdings ist es möglich, dass einige ungültige Adressen nicht als solches erkannt werden, was zu unvorhersehbaren Verhalten führen könnte. Die Übergabe eines <a href="../objects/Buffer.htm">Buffer</a>-Objekts anstelle einer Adresse stellt sicher, dass die Quelladresse immer validiert werden kann.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="NumPut.htm">NumPut</a>, <a href="DllCall.htm">DllCall</a>, <a href="../objects/Buffer.htm">Buffer-Objekt</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>


</body>
</html>
