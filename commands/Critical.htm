<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Critical - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Critical-Anweisung verhindert, dass der aktuelle Thread von anderen Threads unterbrochen werden kann, oder macht ihn unterbrechbar." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Critical</h1>

<p>Verhindert, dass der <a href="../misc/Threads.htm">aktuelle Thread</a> von anderen Threads unterbrochen werden kann, oder macht ihn unterbrechbar.</p>

<pre class="Syntax">
<span class="func">Critical</span> <span class="optional">OnOffNumerisch</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>OnOffNumerisch</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn dieser Parameter weggelassen wird oder leer ist, wird standardmäßig On verwendet. Ansonsten kann eines der folgenden Dinge angegeben werden:</p>
    <p><strong>On</strong>: Der <a href="../misc/Threads.htm">aktuelle Thread</a> wird als kritisch eingestuft; das heißt, dass dieser Thread nicht von anderen Threads unterbrochen werden kann.</p>
    <p><strong>Off</strong>: Der aktuelle Thread wird sofort unterbrechbar gemacht, unabhängig von den Einstellungen von <a href="Thread.htm">Thread Interrupt</a>. Weitere Informationen finden Sie unter <a href="#Off">Critical Off</a>.</p>
    <p><strong>(Numerisch)</strong>: Geben Sie eine positive Zahl an, um Critical einzuschalten und die Anzahl der zu wartenden Millisekunden zwischen den Überprüfungen der internen Meldungswarteschlange zu ändern. Weitere Informationen finden Sie unter <a href="#Interval">Meldungsüberprüfungsintervall</a>. Die Angabe einer 0 schaltet Critical aus.</p>
  </dd>
</dl>

<h2 id="Behave">Verhalten von kritischen Threads</h2>
<p>Kritische Threads sind <em>unterbrechungsfrei</em>; Einzelheiten finden Sie unter <a href="../misc/Threads.htm#Behave">Threads</a>.</p>
<p>Ein kritischer Thread wird unterbrechbar, wenn ein <a href="MsgBox.htm">Mitteilungsfenster</a> oder ein anderes Dialogfenster angezeigt wird. Im Gegensatz zu <a href="Thread.htm">Thread Interrupt</a> wird der Thread allerdings wieder kritisch, wenn der Benutzer das Dialogfenster schließt.</p>

<h2 id="Off">Critical Off</h2>
<p>Während gepufferte Ereignisse darauf warten, neue Threads zu starten, ist es nicht möglich, <code>Critical "Off"</code> zu nutzen, um eine sofortige Unterbrechung des aktuellen Threads zu bewirken. Stattdessen vergehen durchschnittlich 5 Millisekunden, bevor eine Unterbrechung erfolgt. Dadurch wird zu 99,999 % sichergestellt, dass mindestens eine Zeile nach <code>Critical "Off"</code> ausgeführt wird, bevor eine Unterbrechung erfolgt. Mit Mitteln wie <code><a href="Sleep.htm">Sleep</a> -1</code> oder <a href="WinWait.htm">WinWait</a> in Verbindung mit einem noch nicht existierenden Fenster können sofortige Unterbrechungen erzwungen werden.</p>
<p><code>Critical "Off"</code> beendet die unterbrechungsfreie Phase des aktuellen Threads, auch wenn der Thread nicht kritisch war, so dass Ereignisse wie <a href="../objects/GuiOnEvent.htm#Size">Size</a> früher bzw. vorhersehbarer abgearbeitet werden können.</p>

<h2 id="Settings">Thread-Einstellungen</h2>
<p>Schauen Sie sich <a href="../Variables.htm#IsCritical">A_IsCritical</a> an, wie die aktuelle Einstellung von Critical gespeichert und wiederhergestellt werden kann. Beachten Sie, dass Critical eine threadspezifische Einstellung ist, deshalb wird, wenn ein kritischer Thread endet, der darunterliegende/fortgesetzte Thread (sofern vorhanden) automatisch unkritisch sein. Somit ist es nicht notwendig, <code>Critical "Off"</code> kurz vor dem Beenden eines Threads durchzuführen.</p>
<p>Wenn Critical nicht via <a href="../Scripts.htm#auto">Auto-Execute-Thread</a> gesetzt ist, sind alle Threads vorerst unkritisch (es sei denn, <code><a href="Thread.htm">Thread</a> "Interrupt"</code> wurde verwendet). Wird hingegen Critical via Auto-Execute-Thread eingeschaltet, aber nie ausgeschaltet, ist jeder neu gestartete <a href="../misc/Threads.htm">Thread</a> (z. B. <a href="../Hotkeys.htm">Hotkey</a>, <a href="../objects/Menu.htm">benutzerdefinierter Menüpunkt</a> oder <a href="SetTimer.htm">zeitgesteuerte</a> Subroutine) vorerst kritisch.</p>
<p>Die Funktion <a href="Thread.htm">Thread "NoTimers"</a> ist quasi dasselbe wie Critical, aber sie verhindert nur, dass <a href="SetTimer.htm">Timer</a> den aktuellen Thread unterbrechen können.</p>

<h2 id="Interval">Meldungsüberprüfungsintervall</h2>
<p>Die Angabe einer positiven Zahl im ersten Parameter (z.B. <code>Critical 30</code>) schaltet Critical ein und ändert die Anzahl der zu wartenden Millisekunden zwischen den Überprüfungen der internen Meldungswarteschlange. Wenn keine Zahl angegeben ist, werden die Meldungen bei eingeschaltetem Critical alle 16 ms und bei ausgeschaltetem Critical alle 5 ms überprüft. Die Erhöhung des Intervalls verzögert das Eintreffen von Meldungen/Ereignissen, so dass der <a href="../misc/Threads.htm">aktuelle Thread</a> mehr Zeit für seine Beendigung hat. Dies verringert die Chance, dass einzelne <a href="OnMessage.htm">OnMessage-Threads</a> und <a href="../objects/GuiOnEvent.htm">GUI-Ereignisse</a> aufgrund von "Thread wird bereits ausgeführt" verloren gehen. Wartende Funktionen wie <a href="Sleep.htm">Sleep</a> und <a href="WinWait.htm">WinWait</a> werden Meldungen unabhängig von dieser Einstellung überprüfen (um das umgehen, können Sie z. B. <code>DllCall("Sleep", "UInt", 500)</code> nutzen).</p>
  <p class="note"><strong>Hinweis</strong>: Eine zu starke Erhöhung des Meldungsüberprüfungsintervalls kann die Reaktionsfähigkeit verschiedener Ereignisse wie z. B. <a href="../objects/Gui.htm">GUI</a>-Fenster-Neuzeichnungen verringern.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Thread.htm">Thread (Funktion)</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="OnMessage.htm">OnMessage</a>, <a href="CallbackCreate.htm">CallbackCreate</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="../objects/Menu.htm">Menu-Objekt</a>, <a href="SetTimer.htm">SetTimer</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Drücken Sie einen Hotkey, um einen Tooltip für 3 Sekunden anzuzeigen. Aufgrund von Critical wird jeder neue Thread, der während dieser Zeit gestartet wird (z. B. durch erneutes Drücken des Hotkeys), so lange hinausgezögert, bis der Tooltip verschwindet.</p>
<pre>#space::  <em>; Hotkey: WIN+LEERTASTE.</em>
{
    Critical
    ToolTip "Neue Threads werden erst gestartet, wenn dieser Tooltip verschwindet."
    Sleep 3000
    ToolTip  <em>; Schaltet den Tooltip aus.</em>
    return <em>; Die Rückkehr aus einer Hotkey-Funktion beendet den Thread. Jeder darunterliegende Thread, der fortgesetzt werden soll, ist per Definition unkritisch.</em>
}</pre>
</div>

</body>
</html>
