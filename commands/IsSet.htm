<!DOCTYPE HTML>
<html lang="de">
<head>
<title>IsSet / IsSetRef - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Der IsSet-Operator und die IsSetRef-Funktion geben eine Nummer ungleich 0 zurück, wenn eine bestimmte Variable einen Wert zugewiesen bekommen hat." />
<meta name="ahk:equiv-v1" content="AutoHotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>IsSet / IsSetRef</h1>

<p>Gibt eine Nummer ungleich 0 zurück, wenn eine bestimmte Variable einen Wert zugewiesen bekommen hat.</p>

<pre class="Syntax">VarIstGesetzt := <span class="func">IsSet</span>(Var)</pre>
<pre class="Syntax">VarIstGesetzt := <span class="func">IsSetRef</span>(&amp;Ref)</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Var</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>Eine direkte Variablenreferenz. Zum Beispiel: <code>IsSet(MeineVar)</code>.</p>
  </dd>

  <dt>&amp;Ref</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>Eine indirekte Referenz, die auf die Variable verweist. Diese wird normalerweise nicht direkt übergeben, wie in <code>IsSetRef(&amp;MeineVar)</code>, sondern indirekt, z. B. um einen Parameter, der eine VarRef <em>enthält</em>, vor der <a href="../Variables.htm#deref">Dereferenzierung</a> zu prüfen. </p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#boolean">Integer (boolescher Wert)</a></p>
<p>Der Rückgabewert ist 1 (true), wenn <em>Var</em> oder die durch <em>Ref</em> repräsentierte Variable einen Wert zugewiesen bekommen hat, ansonsten 0 (false).</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Verwenden Sie IsSet, um eine Variable direkt zu prüfen, wie in <code>IsSet(MeineGlobaleVar)</code>.</p>
<p>Verwenden Sie IsSetRef, um eine <a href="../Concepts.htm#variable-references">VarRef</a> zu prüfen, die typischerweise in einer Variable enthalten ist, wie im Beispiel unten.</p>
<p>Eine Variable ohne zugewiesenen Wert wird auch als <a href="../Concepts.htm#uninitialized-variables">nicht initialisierte Variable</a> bezeichnet. Der Versuch, eine nicht initialisierte Variable zu lesen, führt dazu, dass eine Ausnahme ausgelöst wird. IsSet kann genutzt werden, um dies zu vermeiden, z. B. um eine globale oder statische Variable bei der ersten Verwendung zu initialisieren.</p>
<p class="note"><strong>Hinweis:</strong> <a href="../Functions.htm#InitStatic">Statische Initialisierungen</a> wie z. B. <code>static mein_statisches_array := []</code> werden nur einmal ausgewertet, nämlich dann, wenn sie das erste Mal während der Ausführung des Skripts erreicht werden, so dass IsSet in der Regel nicht verwendet werden muss.</p>
<p>Obwohl IsSet die gleiche Syntax wie ein Funktionsaufruf verwendet, handelt es sich bei IsSet eher um einen Operator als um eine Funktion. Das Schlüsselwort <em>IsSet</em> ist für die hier gezeigte Verwendung reserviert und kann nicht zu einer Variable oder Funktion umdefiniert werden. IsSet kann nicht indirekt aufgerufen werden, da jeder Versuch, eine uninitialisierte Variable zu übergeben, einen Fehler auslösen würde.</p>
<p>IsSetRef kann auch verwendet werden, um eine bestimmte Variable zu prüfen, indem sie mit dem <a href="../Variables.htm#ref">Referenzoperator</a> verwendet wird. Wenn Sie es auf diese Weise verwenden, beachten Sie, dass zuvor die <a href="../Functions.htm#Global">Deklaration der Variable</a> erfolgen muss, falls sie global ist. Das <code>&amp;</code> in <code>IsSetRef(&amp;MeineVar)</code> würde z. B. dazu führen, dass <em>MeineVar</em> standardmäßig in eine lokale Variable aufgelöst wird, wenn es innerhalb einer Assume-Local-Funktion verwendet wird, die die Deklaration <code>global MeineVar</code> nicht enthält.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Functions.htm#ByRef">ByRef-Parameter</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Zeigt verschiedene Verwendungen von IsSet und IsSetRef.</p>
<pre>
Loop 2
    if !IsSet(MeineVar)  <em>; Ist dies die erste "Nutzung" von MeineVar?</em>
        MeineVar := A_Index  <em>; Bei "Erstnutzung" initialisieren.</em>
MsgBox Funktion1(&amp;MeineVar)
MsgBox Funktion2(&amp;MeineVar)

Funktion1(&amp;Param)  <em>; ByRef-Parameter.</em>
{
    if IsSet(Param)  <em>; Param selbst übergeben, was ein Alias für MeineVar ist.</em>
        return Param  <em>; ByRef-Parameter werden automatisch dereferenziert.</em>
    else
        return "ungesetzt"
}

Function2(Param)
{
    if IsSetRef(Param)  <em>; Die in Param enthaltene VarRef übergeben.</em>
        return %Param%  <em>; Param explizit dereferenzieren.</em>
    else
        return "ungesetzt"
}</pre>
</div>

</body>
</html>
