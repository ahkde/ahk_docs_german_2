<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StrGet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die StrGet-Funktion kopiert eine Zeichenkette aus einem Speicherbereich oder Puffer unter Beachtung eines bestimmten Zeichensatzes." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>StrGet</h1>

<p>Kopiert eine Zeichenkette aus einem Speicherbereich oder Puffer unter Beachtung eines bestimmten Zeichensatzes.</p>

<pre class="Syntax">Zkette := <span class="func">StrGet</span>(Quelle <span class="optional">, Länge</span> <span class="optional">, Codierung := <i>Keine</i></span>)</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Quelle</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein <a href="../objects/Buffer.htm">Buffer</a>-ähnliches Objekt mit der Zeichenkette, oder die Speicheradresse der Zeichenkette.</p>
    <p>Obwohl ein beliebiges Objekt mit einer <a href="../objects/Buffer.htm#Ptr">Ptr</a>- und <a href="../objects/Buffer.htm#Size">Size</a>-Eigenschaft verwendet werden kann, ist diese Funktion für das native <a href="../objects/Buffer.htm">Buffer</a>-Objekt optimiert. Das Übergeben eines Objekts mit diesen Eigenschaften stellt sicher, dass die Funktion keinen Speicher aus einem ungültigen Bereich liest, was zu Abstürzen oder anderem unvorhersehbaren Verhalten führen kann.</p>
    <p>Die Zeichenkette muss nicht <a href="../Concepts.htm#null-termination">null-terminiert</a> sein, wenn ein Buffer-ähnliches Objekt bereitgestellt wird oder wenn der <em>Länge</em>-Parameter angegeben ist.</p>
  </dd>

  <dt>Länge</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die maximale Anzahl der zu lesenden <a href="../Concepts.htm#character">Zeichen</a>. Dies kann weggelassen werden, wenn die Zeichenkette <a href="../Concepts.htm#null-termination">null-terminiert</a> ist.</p>
    <p>Standardmäßig extrahiert StrGet eine Zeichenkette nur bis zu einer binären Null. Wenn der Wert in <em>Länge</em> negativ ist, wird sein absoluter Wert die genaue Anzahl der Zeichen bestimmen, die umgewandelt werden sollen, einschließlich aller binären Nullen, die die Zeichenkette enthalten könnte - das heißt, dass das Ergebnis immer eine Zeichenkette mit exakt dieser Länge sein wird.</p>
    <p class="warning"><strong>Hinweis:</strong> Das Weglassen von <em>Länge</em> bei einer nicht-null-terminierten Zeichenkette kann eine Zugriffsverletzung verursachen, woraufhin das Programm terminiert wird, oder andere unerwünschte Nebenwirkungen haben. Die Angabe einer falschen Länge kann zu unerwartetem Verhalten führen.</p>
  </dd>

  <dt>Codierung</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die Quellcodierung; zum Beispiel: <code>"UTF-8"</code>, <code>"UTF-16"</code> oder <code>"CP936"</code>. Bei numerischen Identifikatoren kann das Präfix "CP" nur weggelassen werden, wenn <em>Länge</em> angegeben ist. Geben Sie eine leere Zeichenkette oder <code>"CP0"</code> an, um den Standard-ANSI-Zeichensatz des Systems zu nutzen.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
<p>Diese Funktion gibt die kopierte oder konvertierte Zeichenkette zurück. Wenn die Quellcodierung korrekt angegeben wurde, verwendet der Rückgabewert immer die <a href="../Concepts.htm#string-encoding">native Codierung</a>. Die Zeichenkette ist immer <a href="../Concepts.htm#null-termination">null-terminiert</a>, aber der Null-Terminator wird nicht zur <a href="StrLen.htm">Länge</a> des Rückgabewertes hinzugezählt, außer wenn <em>Länge</em> negativ ist, wie oben beschrieben.</p>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Es wird ein <a href="../objects/Error.htm#ValueError">ValueError</a> ausgelöst, wenn ungültige Parameter erkannt werden.</p>
<p>Es wird ein <a href="../objects/Error.htm#OSError">OSError</a> ausgelöst, wenn die Konvertierung nicht durchgeführt werden konnte.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Beachten Sie, dass der Rückgabewert immer in der <a href="../Concepts.htm#string-encoding">nativen Codierung</a> von der aktuell verwendeten Version von AutoHotkey ist, wohingegen <i>Codierung</i> angibt, wie die gelesene Zeichenkette aus der angegebenen <i>Quelle</i> interpretiert werden soll. Wenn keine <em>Codierung</em> angegeben ist, wird die Zeichenkette einfach kopiert, ohne dass eine Konvertierung stattfindet.</p>
<p class="note">StrGet wird im Prinzip verwendet, um Text aus einem Speicherbereich oder Puffer abzurufen, oder ihn in ein Format zu konvertieren, das das Skript verstehen kann.</p>
<p>Wenn eine Konvertierung zwischen den Zeichensätzen notwendig ist, muss die Möglichkeit in Betracht gezogen werden, dass die Länge des Rückgabewertes von der Länge der Quellzeichenkette abweicht.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Concepts.htm#string-encoding">Zeichenkettencodierung</a>, <a href="StrPut.htm">StrPut</a>, <a href="../Compat.htm">Binärkompatibilität</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="DllCall.htm">DllCall</a>, <a href="../objects/Buffer.htm">Buffer-Objekt</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExNumEnc">
<p><a class="ex_number" href="#ExNumEnc"></a> Es ist möglich, <em>Länge</em> oder <em>Codierung</em> direkt nach <em>Adresse</em> anzugeben, aber in diesem Fall darf <em>Codierung</em> nicht numerisch sein.</p>
<pre>
Zkette := StrGet(Adresse, "cp0")  <em>; Zeichensatz 0, unbestimmte Länge</em>
Zkette := StrGet(Adresse, n, 0)   <em>; Maximal n Zeichen, Zeichensatz 0</em>
Zkette := StrGet(Adresse, 0)      <em>; Maximal 0 Zeichen (immer leer)</em>
</pre>
</div>

</body>
</html>
