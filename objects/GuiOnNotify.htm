<!DOCTYPE HTML>
<html lang="de">
<head>
<title>OnNotify (GUI) - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die OnNotify-Methode eines GuiControl-Objekts registriert eine Funktion oder Methode, die aufgerufen werden soll, wenn eine Steuerelementbenachrichtigung via WM_NOTIFY-Meldung empfangen wird." />
<meta name="ahk:equiv-v1" content="commands/GuiControl.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>OnNotify</h1>
<p>Registriert eine Funktion oder Methode, die aufgerufen werden soll, wenn eine Steuerelementbenachrichtigung via <a href="https://msdn.microsoft.com/library/bb775583">WM_NOTIFY</a>-Meldung empfangen wird.</p>
<pre class="Syntax">GuiControl.<span class="func">OnNotify</span>(NachrichtCode, Callback <span class="optional">, HinzufügenEntfernen</span>)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>GuiControl</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a></p>
    <p>Das <a href="GuiControl.htm">GuiControl</a>-Objekt eines Steuerelements, das überwacht werden soll.</p>
  </dd>
  
  <dt>NachrichtCode</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein steuerelementdefinierter Benachrichtigungscode, der überwacht werden soll.</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="Functor.htm">Funktionsobjekt</a></p>
    <p>Eine Funktion, Methode oder ein Objekt, das aufgerufen werden soll, wenn das Ereignis ausgelöst wird.</p>
    <p>Wenn die GUI ein Event-Sink hat (also wenn der <em>EreignisObj</em>-Parameter von <a href="../objects/Gui.htm#Call">Gui()</a> angegeben wurde), kann dieser Parameter der Name einer Methode sein, die zu einem Event-Sink gehört.</p>
    <p>Ansonsten muss dieser Parameter ein <a href="Functor.htm">Funktionsobjekt</a> sein.</p>
  </dd>
  
  <dt>HinzufügenEntfernen</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Lässt man diesen Parameter weg, wird standardmäßig 1 (das Callback nach anderen zuvor registrierten Callbacks aufrufen) verwendet. Ansonsten können Sie eine der folgenden Zahlen angeben:</p>
    <ul>
      <li>1 = Das Callback nach anderen zuvor registrierten Callbacks aufrufen.</li>
      <li>-1 = Das Callback vor anderen zuvor registrierten Callbacks aufrufen.</li>
      <li>0 = Das Callback nicht aufrufen.</li>
    </ul>
  </dd>
</dl>

<h2 id="WM_NOTIFY">WM_NOTIFY</h2>
<p>Bestimmte Typen von Steuerelementen senden eine <a href="https://msdn.microsoft.com/library/bb775583">WM_NOTIFY</a>-Meldung, wann immer ein interessantes Ereignis auftritt oder das Steuerelement bestimmte Informationen über das Programm benötigt. Der <em>lParam</em>-Parameter von dieser Meldung enthält einen Pointer, der auf eine Struktur mit Informationen über die Benachrichtigung verweist. Die Art der Struktur ist abhängig vom Benachrichtigungscode und vom Typ des Steuerelements, das die Benachrichtigung ausgelöst hat, aber immer basierend auf <a href="https://msdn.microsoft.com/library/bb775514">NMHDR</a>.</p>
<p>Welche Benachrichtigungen es genau gibt (falls vorhanden), welche Art von Struktur sie bereitstellen und wie sie den Rückgabewert interpretieren, entnehmen Sie bitte der Dokumentation des Steuerelements. <a href="https://msdn.microsoft.com/library/bb773169">Control Library (MSDN)</a> enthält Links zu typischen Windows-Steuerelementen. Die Benachrichtigungscodes (Nummern) sind in der Windows SDK zu finden, oder via Suchmaschine.</p>
<p>AutoHotkey nutzt die Felder <em>IdFrom</em> und <em>HwndFrom</em>, um zu ermitteln, welches Steuerelement die Benachrichtigung gesendet hat, um sie anschließend an das entsprechende Objekt senden zu können. Das <em>code</em>-Feld enthält den Benachrichtigungscode. Da diese nur benutzt werden, um das Callback in Übereinstimmung mit <em>GuiControl</em> und <em>NachrichtCode</em> zu registrieren, sind sie für das Skript kaum nützlich.</p>

<h2 id="Callback_Parameters">Callback-Parameter</h2>
<p>Die <a href="GuiOnEvent.htm#Callback_Parameters">OnEvent-Hinweise</a> bezüglich <code>this</code> und Bound-Funktionen gelten auch für OnNotify.</p>
<p>Das Callback akzeptiert zwei Parameter:</p>
<pre class="Syntax"><i>Callback</i>(GuiControl, lParam)</pre>
<p>Wie bereits erwähnt, ist <em>lParam</em> die Adresse einer Benachrichtigungsstruktur, die von <a href="https://msdn.microsoft.com/library/bb775514">NMHDR</a> abstammt. Dessen genaue Bedeutung ist vom Typ des Steuerelements und Benachrichtigungscode abhängig. Wenn die Struktur zusätzliche Informationen über die Benachrichtigung enthält, kann das Callback sie via <a href="../commands/NumGet.htm">NumGet</a> und/oder <a href="../commands/StrGet.htm">StrGet</a> abrufen.</p>

<h2 id="Callback_Return_Value">Callback-Rückgabewert</h2>
<p>Wenn mehrere Callbacks für ein Ereignis registriert sind, kann ein Callback einen nicht-leeren Wert zurückgeben, um zu verhindern, dass die restlichen Callbacks aufgerufen werden.</p>
<p>Der Rückgabewert kann je nach Benachrichtigung eine zusätzliche Bedeutung haben. Zum Beispiel könnte die ListView-Benachrichtigung <a href="https://msdn.microsoft.com/library/bb774798">LVN_BEGINLABELEDIT</a> (-175 oder-105) das Editieren der Beschriftung verbieten, wenn das Callback TRUE (1) zurückgeben würde.</p>

<h2 id="Related">Siehe auch</h2>
<p>Folgende <a href="GuiOnEvent.htm">OnEvent</a>-Hinweise gelten auch für OnNotify: <a href="GuiOnEvent.htm#Threads">Threads</a>, <a href="GuiOnEvent.htm#Destroying_the_GUI">GUI zerstören</a>.</p>
<p><a href="GuiOnCommand.htm">OnCommand</a> kann Benachrichtigungen überwachen, die als WM_COMMAND-Meldung gesendet wurden.</p>

</body>
</html>
