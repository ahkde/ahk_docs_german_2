<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Map-Objekt - Methoden &amp; Eigenschaften | AutoHotkey v2</title>
<meta name="description" content="Ein Map-Objekt ordnet eine Reihe von Werten, genannt Keys, einer anderen Gruppe von Werten zu." />
<meta name="ahk:equiv-v1" content="objects/Object.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Map-Objekt</h1>
<pre class="NoIndent">class Map extends Object</pre>

<p>Ein <strong>Map</strong>-Objekt <em>ordnet</em> eine Reihe von Werten, genannt <em>Keys</em>, einer anderen Gruppe von Werten zu. Ein Key mit seinem zugeordneten Wert wird als Key-Value-Paar bezeichnet. Ein Map-Objekt kann beliebig viele Key-Value-Paare enthalten, allerdings muss jeder Key einzigartig sein.</p>
<p>Ein Key kann ein <a href="../Concepts.htm#numbers">Integer</a>, eine <a href="../Objects.htm">Objekt</a>referenz oder eine null-terminierte <a href="../Concepts.htm#strings">Zeichenkette</a> sein. Der Vergleich von Zeichenketten-Keys ist Groß-/Kleinschreibung-sensitiv, während Objekte via Referenz/Adresse verglichen werden. <a href="../Concepts.htm#numbers">Float</a>-Keys werden automatisch in eine Zeichenkette umgewandelt.</p>
<p>Der einfachste Weg, ein Map-Objekt zu nutzen, besteht darin, ein Key-Value-Paar über die implizite <a href="#__Item">__Item</a>-Eigenschaft abzurufen oder zu setzen, indem man einfach neben dem Map-Objekt den Key in eckigen Klammern setzt. Zum Beispiel:</p>
<pre>Farben := Map()
Farben["Rot"] := "ff0000"
Farben["Grün"] := "00ff00"
Farben["Blau"] := "0000ff"
for Farbe in Array("Blau", "Grün")
    MsgBox Farben[Farbe]
</pre>
<p>"MapObj" wird hier stellvertretend für ein beliebiges Map-Objekt verwendet, da "Map" die Klasse selbst ist.</p>
<p>Zusätzlich zu den Methoden und Eigenschaften, die von <a href="Object.htm">Object</a> geerbt werden, haben Map-Objekte die folgenden vordefinierten Methoden und Eigenschaften:</p>

<p><strong>Methoden:</strong></p>
<ul>
  <li><a href="#Clear">Clear</a></li>
  <li><a href="#Clone">Clone</a></li>
  <li><a href="#Delete">Delete</a></li>
  <li><a href="#Get">Get</a></li>
	<li><a href="#Has">Has</a></li>
  <li><a href="#Set">Set</a></li>
  <li><a href="#__Enum">__Enum</a></li>
  <li><a href="#__New">__New</a></li>
</ul>
<p><strong>Eigenschaften:</strong></p>
<ul>
  <li><a href="#Count">Count</a></li>
	<li><a href="#Capacity">Capacity</a></li>
  <li><a href="#CaseSense">CaseSense</a></li>
  <li><a href="#Default">Default</a></li>
  <li><a href="#__Item">__Item</a></li>
</ul>
<p><strong>Statische Methoden:</strong></p>
<ul>
  <li><a href="#Call">Call</a></li>
</ul>

<h2 id="StaticMethods">Statische Methoden</h2>

<div class="methodShort" id="Call"><h2>Call</h2>
<p>Erstellt ein Map-Objekt und setzt Elemente.</p>
<pre class="Syntax">MapObj := <span class="func">Map</span>(Key1, Wert1, Key2, Wert2, ...)</pre>
<p>Dies ist das gleiche wie, als würde man jedes Element mit <code>MapObj[Key] := Wert</code> setzen, außer dass <a href="#__Item">__Item</a> nicht aufgerufen wird und <a href="#Capacity">Capacity</a> automatisch angepasst wird, um zu vermeiden, dass es während eines einzigen Aufrufs mehrfach erweitert wird.</p>
<p>Parameter werden durch <a href="#__New">__New</a> definiert.</p>
</div>

<h2 id="Methods">Methoden</h2>

<div class="methodShort" id="Clear"><h2>Clear</h2>
<p>Entfernt alle Key-Value-Paare aus einem Map-Objekt.</p>
<pre class="Syntax">MapObj.<span class="func">Clear</span>()</pre>
</div>

<div class="methodShort" id="Clone"><h2>Clone</h2>
<p>Gibt eine flache Kopie des Objekts zurück.</p>
<pre class="Syntax">Klon := MapObj.<span class="func">Clone</span>()</pre>
<p>Alle Key-Value-Paare werden in das neue Map-Objekt kopiert. Objekt<em>referenzen</em> werden kopiert (wie bei einer normalen Zuweisung), nicht die Objekte selbst.</p>
<p>Eigene Eigenschaften, eigene Methoden und Base werden gemäß <a href="Object.htm#Clone">Obj.Clone</a> kopiert.</p>
</div>

<div class="methodShort" id="Delete"><h2>Delete</h2>
<p>Entfernt ein Key-Value-Paar aus einem Map-Objekt.</p>
<pre class="Syntax">MapObj.<span class="func">Delete</span>(Key)</pre>
<dl>
  <dt>Key</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a>, <a href="../Objects.htm">Objekt</a> oder <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Beliebiger einzelner Key. Wenn das Map-Objekt diesen Key nicht enthält, wird ein <a href="Error.htm#KeyError">KeyError</a> ausgelöst.</p>
  </dd>
  <dt>Rückgabewert</dt>
  <dd><p>Der entfernte Wert.</p></dd>
</dl>
</div>

<div class="methodShort" id="Get"><h2>Get</h2>
<p>Gibt den Wert eines zugehörigen Keys oder einen Standardwert zurück.</p>
<pre class="Syntax">Wert := MapObj.<span class="func">Get</span>(Key <span class="optional">, Standardwert</span>)</pre>
<p>Diese Methode bewirkt Folgendes:</p>
<ul>
  <li>Gib den Wert des zugehörigen <em>Keys</em> zurück, falls gefunden.</li>
  <li>Gib den Wert des <em>Standardwert</em>-Parameters zurück, falls angegeben.</li>
  <li>Gib den Wert von <code>MapObj.Default</code> zurück, falls definiert.</li>
  <li>Löse einen <a href="Error.htm#KeyError">KeyError</a> aus.</li>
</ul>
<p>Wenn <em>Standardwert</em> weggelassen wird, ist dies äquivalent zu <code>MapObj[Key]</code>, außer dass <a href="#__Item">__Item</a> nicht aufgerufen wird.</p>
</div>

<div class="methodShort" id="Has"><h2>Has</h2>
<p>Gibt True zurück, wenn <i>Key</i> einen zugeordneten Wert innerhalb des Map-Objekts hat, ansonsten False.</p>
<pre class="Syntax">MapObj.<span class="func">Has</span>(Key)</pre>
</div>

<div class="methodShort" id="Set"><h2>Set</h2>
<p>Setzt null oder mehr Elemente.</p>
<pre class="Syntax">MapObj.<span class="func">Set</span>(<span class="optional">Key, Wert, Key2, Wert2, ...</span>)</pre>
<p>Dies ist das gleiche wie, als würde man jedes Element mit <code>MapObj[Key] := Wert</code> setzen, außer dass <a href="#__Item">__Item</a> nicht aufgerufen wird und <a href="#Capacity">Capacity</a> automatisch angepasst wird, um zu vermeiden, dass es während eines einzigen Aufrufs mehrfach erweitert wird.</p>
<p>Gibt das Map-Objekt zurück.</p>
</div>

<div class="methodShort" id="__Enum"><h2>__Enum</h2>
<p>Enumeriert Key-Value-Paare.</p>
<pre class="Syntax">For Key <span class="optional">, Wert</span> in MapObj</pre>
<p>Gibt einen neuen <a href="Enumerator.htm">Enumerator</a> zurück. Diese Methode wird für gewöhnlich nicht direkt aufgerufen. Stattdessen wird das Map-Objekt direkt an eine <a href="../commands/For.htm">For-Schleife</a> übergeben, die __Enum einmal aufruft und dann den Enumerator einmal für jede Wiederholung der Schleife aufruft. Jeder Aufruf des Enumerators gibt den nächsten Key und/oder Wert zurück. Die Variablen der For-Schleife entsprechen den folgenden Parametern des Enumerators:</p>
<dl>
  <dt>Key</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a>, <a href="../Objects.htm">Objekt</a> oder <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der Key.</p>
  </dd>
  <dt>Wert</dt>
  <dd>
    <p>Der Wert.</p>
  </dd>
</dl>
</div>

<h2 id="Properties">Eigenschaften</h2>

<div class="methodShort" id="Count"><h2>Count</h2>
<p>Ruft die Anzahl von Key-Value-Paaren im Map-Objekt ab.</p>
<pre class="Syntax">Anzahl := MapObj.<span class="func">Count</span></pre>
</div>

<div class="methodShort" id="Capacity"><h2>Capacity</h2>
<p>Ermittelt oder setzt die aktuelle Kapazität des Map-Objekts.</p>
<pre class="Syntax">MapObj.<span class="func">Capacity</span> := MaxElemente</pre>
<pre class="Syntax">MaxElemente := MapObj.<span class="func">Capacity</span></pre>
<dl>
	<dt>MaxElemente</dt>
	<dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die maximale Anzahl von Key-Value-Paaren, die das Map-Objekt beinhalten soll, bevor es automatisch erweitert werden muss. Wenn ein Wert kleiner als die aktuelle Anzahl von Key-Value-Paaren gesetzt wird, wird dieser Wert stattdessen verwendet und ungenutzter Speicher freigegeben.</p>
  </dd>
</dl>
</div>

<div class="methodShort" id="CaseSense"><h2>CaseSense</h2>
<p>Ermittelt oder setzt die Groß-/Kleinschreibung-Sensitivität des Map-Objekts.</p>
<pre class="Syntax">MapObj.<span class="func">CaseSense</span> := Einstellung</pre>
<pre class="Syntax">Einstellung := MapObj.<span class="func">CaseSense</span></pre>
<dl>
	<dt>Einstellung</dt>
	<dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Geben Sie einen der folgenden Werte an:</p>
    <p><code>"On"</code>: Die Suche von Keys erfolgt Groß-/Kleinschreibung-sensitiv. Standardeinstellung.</p>
    <p><code>"Off"</code>: Die Großbuchstaben A bis Z und die entsprechenden Kleinbuchstaben werden gleichwertig behandelt.</p>
    <p><code>"Locale"</code>: Die Suche von Keys erfolgt nicht Groß-/Kleinschreibung-sensitiv, gemäß den Regeln der aktuellen Sprach- und Regionseinstellungen des Benutzers. In den meisten englischen und westeuropäischen Regionen beispielsweise werden die Großbuchstaben A bis Z, einschließlich ASCII-fremde Zeichen wie Ä und Ü, und die entsprechenden Kleinbuchstaben gleichwertig behandelt. <em>Locale</em> ist 1- bis 8-mal langsamer als <em>Off</em>, abhängig von den zu vergleichenden Zeichenketten.</p>
    <p>Beim Zuweisen eines Wertes können auch die Zeichenketten <code>"1"</code> und <code>"0"</code> verwendet werden.</p>
  </dd>
</dl>
<p>Wenn das Map-Objekt nicht leer ist und dieser Eigenschaft etwas zugewiesen wird, wird eine Ausnahme ausgelöst.</p>
</div>

<div class="methodShort" id="Default"><h2>Default</h2>
<p>Definiert den Standardwert, der zurückgegeben werden soll, wenn ein Key nicht gefunden wird.</p>
<pre class="Syntax">MapObj.<span class="func">Default</span> := Wert</pre>
<p>Diese Eigenschaft ist standardmäßig nicht vorhanden, kann aber via Skript definiert werden. Wenn das Skript einen Key abfragt, der nicht gefunden wird, prüft das Map-Objekt, ob diese Eigenschaft vorhanden ist, bevor sie einen <a href="Error.htm#KeyError">KeyError</a> auslöst. Die Eigenschaft kann mit den üblichen Mitteln implementiert werden, einschließlich einer <a href="Object.htm#DefineProp">dynamischen Eigenschaft</a> oder einer <a href="../Objects.htm#Meta_Functions">Metafunktion</a>, aber um festzustellen, welcher Key abgefragt wurde, müsste stattdessen <a href="#__Item">__Item</a> oder <a href="#Get">Get</a> überschrieben werden.</p>
</div>

<div class="methodShort" id="__Item"><h2>__Item</h2>
<p>Ermittelt oder setzt den Wert eines Key-Value-Paares.</p>
<pre class="Syntax">Wert := MapObj[Key]</pre>
<pre class="Syntax">MapObj[Key] := Wert</pre>
<dl>
  <dt>Key</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a>, <a href="../Objects.htm">Objekt</a> oder <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Beim Abrufen eines Wertes muss <em>Key</em> ein einzigartiger Wert sein, der zuvor einem anderen Wert zugeordnet wurde. Es wird ein <a href="Error.htm#KeyError">KeyError</a> ausgelöst, wenn <em>Key</em> keinen zugeordneten Wert innerhalb des Map-Objekts hat, es sei denn, es ist eine <a href="#Default">Standardwert</a>-Eigenschaft definiert, dann wird deren Wert zurückgegeben.</p>
    <p>Beim Zuweisen eines Wertes kann <em>Key</em> ein beliebiger Wert sein, der mit <em>Wert</em> assoziiert werden kann; das heißt, dass der <em>Key</em> genutzt wird, um später auf <em>Wert</em> zugreifen zu können. <a href="../Concepts.htm#numbers">Float</a>-Keys werden automatisch in eine Zeichenkette umgewandelt.</p>
  </dd>
</dl>
<p>Der Eigenschaftsname __Item wird typischerweise weggelassen, wie oben gezeigt, ist aber nützlich, um die Eigenschaft zu überschreiben.</p>
</div>

<div class="methodShort" id="__New"><h2>__New</h2>
<p>Setzt Elemente. Äquivalent zu <a href="#Set">Set</a>.</p>
<pre class="Syntax">MapObj.<span class="func">__New</span>(<span class="optional">Key, Wert, Key2, Wert2, ...</span>)</pre>
<p>Diese Methode existiert zur Unterstützung von <a href="#Call">Call</a> und ist nicht für den direkten Aufruf vorgesehen. Siehe <a href="../Objects.htm#Custom_NewDelete">Konstruktion und Destruktion</a>.</p>
</div>

</body>
</html>
