<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Any - Methoden &amp; Eigenschaften | AutoHotkey v2</title>
<meta name="description" content="Any repräsentiert die oberste Ebene der Typenhierarchie von AutoHotkey." />
<meta name="ahk:equiv-v1" content="AutoHotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Any</h1>

<p><code>Any</code> ist die oberste Klasse in der Typenhierarchie von AutoHotkey. Alle anderen Typen sind Untertypen von Any.</p>
<p><code>Any.Prototype</code> definiert Methoden und Eigenschaften, die für alle Werte und Objekte (außer <a href="../commands/ComValue.htm">ComValue</a> und abgeleiteten Typen) gelten, sofern noch nicht überschrieben. Das Prototypobjekt selbst ist ein <a href="Object.htm">Object</a>-Objekt, hat aber kein <code>Base</code> und identifiziert sich daher nicht als Instanz eines Object-Objekts.</p>

<p><strong>Methoden:</strong></p>
<ul>
  <li><a href="#GetMethod">GetMethod</a></li>
  <li><a href="#HasBase">HasBase</a></li>
  <li><a href="#HasMethod">HasMethod</a></li>
  <li><a href="#HasProp">HasProp</a></li>
</ul>
<p><strong>Eigenschaften:</strong></p>
<ul>
	<li><a href="#Base">Base</a></li>
</ul>
<p><strong>Funktionen:</strong></p>
<ul>
	<li><a href="#GetBase">ObjGetBase</a></li>
</ul>

<h2 id="Methods">Methoden</h2>

<div class="methodShort" id="GetMethod"><h2>GetMethod</h2>
<p>Ruft die Implementierungsfunktion einer Methode ab.</p>
<pre class="Syntax">Wert.<span class="func">GetMethod</span>(Name)</pre>
<p>Diese Methode ist äquivalent zu <code>GetMethod(Wert, Name)</code>, sofern noch nicht überschrieben.</p>
</div>

<div class="methodShort" id="HasBase"><h2>HasBase</h2>
<p>Gibt True zurück, wenn <em>BaseObj</em> in der Kette von Base-Objekten von <em>Wert</em> ist, ansonsten False.</p>
<pre class="Syntax">Wert.<span class="func">HasBase</span>(BaseObj)</pre>
<p>Diese Methode ist äquivalent zu <code>HasBase(Wert, BaseObj)</code>, sofern noch nicht überschrieben.</p>
</div>

<div class="methodShort" id="HasMethod"><h2>HasMethod</h2>
<p>Gibt True zurück, wenn der Wert eine Methode mit diesem Namen hat, ansonsten False.</p>
<pre class="Syntax">Wert.<span class="func">HasMethod</span>(Name)</pre>
<p>Diese Methode ist äquivalent zu <code>HasMethod(Wert, Name)</code>, sofern noch nicht überschrieben.</p>
</div>

<div class="methodShort" id="HasProp"><h2>HasProp</h2>
<p>Gibt True zurück, wenn der Wert eine Eigenschaft mit diesem Namen hat, ansonsten False.</p>
<pre class="Syntax">Wert.<span class="func">HasProp</span>(Name)</pre>
<p>Diese Methode ist äquivalent zu <code>HasProp(Wert, Name)</code>, sofern noch nicht überschrieben.</p>
</div>

<h2 id="Properties">Eigenschaften</h2>

<div class="methodShort" id="Base"><h2>Base</h2>
<p>Ermittelt das <a href="../Objects.htm#delegation">Base-Objekt</a> des Wertes.</p>
<pre class="Syntax">BaseObj := Wert.Base</pre>
<p>Handelt es sich um <a href="../Objects.htm#primitive">primitive Werte</a>, ist der Rückgabewert das vordefinierte Prototypobjekt, das <code>Type(Wert)</code> entspricht.</p>
<p>Siehe auch: <a href="#GetBase">ObjGetBase</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

<h2 id="Functions">Funktionen</h2>

<div class="methodShort" id="GetBase"><h2>ObjGetBase</h2>
<p>Gibt das <a href="../Objects.htm#delegation">Base-Objekt</a> des Wertes zurück.</p>
<pre class="Syntax">BaseObj := <span class="func">ObjGetBase</span>(Wert)</pre>
<p>Es werden keine <a href="../Objects.htm#Meta_Functions">Metafunktionen</a> oder <a href="../Objects.htm#Custom_Classes_property">Eigenschaftsfunktionen</a> aufgerufen. Das Überschreiben der <a href="#Base">Base</a>-Eigenschaft hat keinen Einfluss auf das Verhalten dieser Funktion.</p>
<p>Wenn es kein Base gibt, ist der Rückgabewert eine leere Zeichenkette. Nur der Any-Prototyp selbst hat kein Base.</p>
<p>Siehe auch: <a href="#Base">Base</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

</body>
</html>
