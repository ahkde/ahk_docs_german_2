<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Enumerator-Objekt - Definition &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Ein Enumerator ist eine Art Funktionsobjekt, das wiederholt aufgerufen wird, um eine Sequenz von Werten zu enumerieren." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Enumerator-Objekt</h1>

<p>Ein Enumerator ist eine Art <a href="Functor.htm">Funktionsobjekt</a>, das wiederholt aufgerufen wird, um eine Sequenz von Werten zu enumerieren.</p>
<p>Enumeratoren existieren in erster Linie zur Unterstützung von <a href="../commands/For.htm">For-Schleifen</a> und werden in der Regel nicht direkt aufgerufen. In der Dokumentation der For-Schleife ist detailliert beschrieben, wie ein Enumerator aufgerufen wird. Das Skript kann einen Enumerator implementieren, um zu steuern, welche Werte den Variablen der For-Schleife bei jeder Iteration der Schleife zugewiesen werden.</p>
<p>Interne Enumeratoren sind Instanzen der <code>Enumerator</code>-Klasse (die von <a href="Func.htm">Func</a> abstammt), allerdings kann potenziell jedes Funktionsobjekt mit einer For-Schleife verwendet werden.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#Methods">Methoden</a>:
    <ul>
      <li><a href="#Call">Call</a>: Ermittelt das nächste Element (auch mehrere) in einer Enumeration.</li>
    </ul>
  </li>
  <li><a href="#Related">Siehe auch</a></li>
</ul>

<h2 id="Methods">Methoden</h2>

<div class="methodShort" id="Call"><h3>Call</h3>
<p>Ermittelt das nächste Element (auch mehrere) in einer Enumeration.</p>
<pre class="Syntax">Enum.<span class="func">Call</span>(&amp;AusgabeVar1 <span class="optional">, &amp;AusgabeVar2</span>)</pre>
<pre class="Syntax"><i>EnumFunktion</i>(&amp;AusgabeVar1 <span class="optional">, &amp;AusgabeVar2</span>)</pre>
<dl>
  <dt>&amp;AusgabeVar1, &amp;AusgabeVar2</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>Eine oder mehrere Referenzen, die auf Variablen verweisen, denen der Enumerator Werte zuweisen kann.</p>
  </dd>
</dl>
<p>Gibt einen Integer ungleich Null bei Erfolg zurück, oder Null, wenn keine Elemente übrig sind.</p>
<p>Es kann eine einfache Funktionsdefinition verwendet werden, um einen Enumerator zu erstellen; in diesem Fall wird die Call-Methode impliziert.</p>
<p>Wenn Sie einen eigenen Enumerator definieren, sollte die Anzahl der Parameter mit der Anzahl der Variablen übereinstimmen, die an die For-Schleife (vor dem Schlüsselwort "in") übergeben werden sollen. Dies ist üblicherweise entweder 1 oder 2, aber eine For-Schleife kann bis zu 19 Variablen akzeptieren. Um der Methode die Möglichkeit zu geben, eine unterschiedliche Anzahl von Variablen zu akzeptieren, deklarieren Sie <a href="../Functions.htm#optional">optionale Parameter</a>.</p>
<p>Es wird eine Ausnahme ausgelöst, wenn die For-Schleife versucht, die Methode aufzurufen, wenn mehr Variablen als Parameter (zu viele Parameter übergeben, zu wenige definiert) existieren oder weniger Variablen als Pflichtparameter vorhanden sind.</p>
</div>

<h2 id="Related">Siehe auch</h2>
<p><a href="../commands/For.htm">For-Schleife</a>, <a href="Object.htm#OwnProps">OwnProps</a>, <a href="Array.htm#__Enum">__Enum (Array)</a>, <a href="Map.htm#__Enum">__Enum (Map)</a></p>

</body>
</html>
