<!DOCTYPE HTML>
<html lang="de">
<head>
<title>OnCommand (GUI) - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die OnCommand-Methode eines GuiControl-Objekts registriert eine Funktion oder Methode, die aufgerufen werden soll, wenn eine Steuerelementbenachrichtigung via WM_COMMAND-Meldung empfangen wird." />
<meta name="ahk:equiv-v1" content="commands/GuiControl.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css">
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>OnCommand</h1>
<p>Registriert eine Funktion oder Methode, die aufgerufen werden soll, wenn eine Steuerelementbenachrichtigung via <a href="https://msdn.microsoft.com/library/ms647591">WM_COMMAND</a>-Meldung empfangen wird.</p>
<pre class="Syntax"><a href="GuiControl.htm">GuiCtrl</a>.<span class="func">OnCommand</span>(NachrichtCode, Callback <span class="optional">, HinzufügenEntfernen</span>)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>NachrichtCode</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein steuerelementdefinierter Benachrichtigungscode, der überwacht werden soll.</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="Functor.htm">Funktionsobjekt</a></p>
    <p>Eine Funktion, Methode oder ein Objekt, das aufgerufen werden soll, wenn das Ereignis ausgelöst wird.</p>
    <p>Wenn die GUI ein Event-Sink hat (also wenn der <em>EreignisObj</em>-Parameter von <a href="../objects/Gui.htm#Call">Gui()</a> angegeben wurde), kann dieser Parameter der Name einer Methode sein, die zu einem Event-Sink gehört.</p>
    <p>Ansonsten muss dieser Parameter ein <a href="Functor.htm">Funktionsobjekt</a> sein.</p>
  </dd>
  
  <dt>HinzufügenEntfernen</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Lässt man diesen Parameter weg, wird standardmäßig 1 (das Callback nach anderen zuvor registrierten Callbacks aufrufen) verwendet. Ansonsten können Sie eine der folgenden Zahlen angeben:</p>
    <ul>
      <li>1 = Das Callback nach anderen zuvor registrierten Callbacks aufrufen.</li>
      <li>-1 = Das Callback vor anderen zuvor registrierten Callbacks aufrufen.</li>
      <li>0 = Das Callback nicht aufrufen.</li>
    </ul>
  </dd>
</dl>

<h2 id="WM_COMMAND">WM_COMMAND</h2>
<p>Bestimmte Typen von Steuerelementen senden eine <a href="https://msdn.microsoft.com/library/ms647591">WM_COMMAND</a>-Meldung, wann immer ein interessantes Ereignis auftritt. Das sind in der Regel die Standardsteuerelemente von Windows, die schon sehr lange im Einsatz sind; neuere Steuerelemente benutzen die WM_NOTIFY-Meldung (siehe <a href="GuiOnNotify.htm">OnNotify</a>). Häufig benutzte Benachrichtigungscodes wurden in Ereignisse umgewandelt, die ein Skript mit <a href="GuiOnEvent.htm">OnEvent</a> überwachen kann.</p>
<p>Die Parameter der Meldung enthalten die Steuerelement-ID, HWND-Nummer und den Benachrichtigungscode, die AutoHotkey nutzt, um die Benachrichtigung an das entsprechende Callback zu senden. Es gibt keine zusätzlichen Parameter.</p>
<p>Welche Benachrichtigungen es genau gibt (falls vorhanden), entnehmen Sie bitte der Dokumentation des Steuerelements. <a href="https://msdn.microsoft.com/library/bb773169">Control Library (MSDN)</a> enthält Links zu typischen Windows-Steuerelementen (allerdings benutzen nur ein Paar von denen WM_COMMAND). Die Benachrichtigungscodes (Nummern) sind in der Windows SDK zu finden, oder via Suchmaschine.</p>

<h2 id="Callback_Parameters">Callback-Parameter</h2>
<p>Die <a href="GuiOnEvent.htm#Callback_Parameters">OnEvent-Hinweise</a> bezüglich <code>this</code> und Bound-Funktionen gelten auch für OnCommand.</p>
<p>Das Callback akzeptiert einen Parameter:</p>
<pre class="Syntax"><i>Callback</i>(GuiControl)</pre>

<h2 id="Callback_Return_Value">Callback-Rückgabewert</h2>
<p>Wenn mehrere Callbacks für ein Ereignis registriert sind, kann ein Callback einen nicht-leeren Wert zurückgeben, um zu verhindern, dass die restlichen Callbacks aufgerufen werden.</p>
<p>Das Steuerelement ignoriert diesen Rückgabewert.</p>

<h2 id="Related">Siehe auch</h2>
<p>Folgende <a href="GuiOnEvent.htm">OnEvent</a>-Hinweise gelten auch für OnCommand: <a href="GuiOnEvent.htm#Threads">Threads</a>, <a href="GuiOnEvent.htm#Destroying_the_GUI">GUI zerstören</a>.</p>
<p><a href="GuiOnNotify.htm">OnNotify</a> kann Benachrichtigungen überwachen, die als WM_NOTIFY-Meldung gesendet wurden.</p>

</body>
</html>
