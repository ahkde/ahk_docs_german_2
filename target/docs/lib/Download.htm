<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Download - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Download-Funktion lädt eine Datei aus dem Internet herunter." />
<meta name="ahk:equiv-v1" content="lib/URLDownloadToFile.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Download</h1>

<p>Lädt eine Datei aus dem Internet herunter.</p>

<pre class="Syntax"><span class="func">Download</span> URL, DateiName </pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>URL</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>URL der Datei, die heruntergeladen werden soll. Zum Beispiel bewirkt <code>"https://someorg.org"</code>, dass die Willkommensseite dieser Organisation abgerufen wird.</p>
  </dd>

  <dt>DateiName</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Geben Sie den Namen der Datei an, die lokal erstellt werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Eine bereits vorhandene Datei wird mit der neuen Datei <u>überschrieben</u>.</p>
    <p>Diese Funktion speichert die heruntergeladenen Daten in eine Datei. Um stattdessen in eine Variable herunterzuladen, siehe das <a href="#ExWHR">Beispiel</a> unten.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Bei Misserfolg wird eine Ausnahme ausgelöst.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Der Download könnte auch dann als Erfolg gewertet werden, wenn die Remote-Datei nicht existiert. Der Grund dafür ist, dass viele Webserver anstelle der fehlenden Datei eine Fehlerseite senden. Und genau diese Fehlerseite wird anstelle von <em>DateiName</em> gespeichert.</p>
<p>Firewalls oder das Vorhandensein mehrerer Netzwerkadapter können dazu führen, dass die Funktion fehlschlägt. Zudem ist es möglich, dass einige Webseiten solche Downloads blockieren.</p>
<p><strong>Caching:</strong> Standardmäßig wird die URL direkt vom Remote-Server abgerufen (also nie vom Cache des Internet Explorers). Um das Caching zu erlauben, stellen Sie der URL ein *0 gefolgt von einem Leerzeichen voran, z.B. <code>"*0 https://someorg.org"</code>. Die 0 nach dem Sternchen kann mit einer gültigen dwFlags-Nummer ersetzt werden; suchen Sie nach InternetOpenUrl auf <a href="https://www.microsoft.com">www.microsoft.com</a> für weitere Details.</p>
<p><strong>Proxies:</strong> Download wird einen Proxy-Server für den Internetzugriff verwenden, falls so ein Proxy in den Einstellungen des Internet Explorers konfiguriert wurde.</p>
<p><strong>FTP- und Gopher</strong>-URLs werden auch unterstützt. Zum Beispiel:</p>
<pre>Download "ftp://example.com/home/Meine Datei.zip", "C:\Mein Ordner\Meine Datei.zip"  <em>; Anonym anmelden.</em>
Download "ftp://user:pass@example.com:21/home/Meine Datei.zip", "C:\Mein Ordner\Meine Datei.zip"  <em>; Als bestimmter Benutzer anmelden.</em>
Download "ftp://benutzer:passwort@beispiel.com/Mein Verzeichnis", "C:\Verzeichnisliste.html"  <em>; Ruft eine Verzeichnisliste im HTML-Format ab.</em></pre>

<h2 id="Related">Siehe auch</h2>
<p><a href="FileRead.htm">FileRead</a>, <a href="FileCopy.htm">FileCopy</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Lädt eine Textdatei herunter.</p>
<pre>Download "https://www.autohotkey.com/download/2.0/version.txt", "C:\Aktuellste AutoHotkey-Version.txt"</pre>
</div>

<div class="ex" id="ExZip">
<p><a class="ex_number" href="#ExZip"></a> Lädt eine ZIP-Datei herunter.</p>
<pre>Download "https://someorg.org/archive.zip", "C:\SomeOrg-Archiv.zip"</pre>
</div>

<div class="ex" id="ExWHR">
<p><a class="ex_number" href="#ExWHR"></a> Lädt Text in eine Variable herunter.</p>
<pre>whr := ComObject("WinHttp.WinHttpRequest.5.1")
whr.Open("GET", "https://www.autohotkey.com/download/2.0/version.txt", true)
whr.Send()
<em>; Durch das 'true' oben und den Aufruf unten bleibt das Skript responsiv.</em>
whr.WaitForResponse()
version := whr.ResponseText
MsgBox version
</pre>
</div>

<div class="ex" id="ExXHR">
<p><a class="ex_number" href="#ExXHR"></a> Macht einen asynchronen HTTP-Request.</p>
<pre>req := ComObject("Msxml2.XMLHTTP")
<em>; Request mit aktiviertem async öffnen.</em>
req.open("GET", "https://www.autohotkey.com/download/2.0/version.txt", true)
<em>; Setzt unsere Rückruffunktion.</em>
req.onreadystatechange := Ready
<em>; Sendet den Request.  Ready() wird bei Abschluss aufgerufen.</em>
req.send()
<em>/*
; Wenn Sie warten wollen, brauchen Sie kein onreadystatechange.
; Wenn Sie async=true setzen und auf diese Weise warten, bleibt das Skript
; responsiv, während der Download läuft, wogegen async=false
; das Skript unresponsiv macht.
while req.readyState != 4
    sleep 100
*/</em>
Persistent

Ready() {
    if (req.readyState != 4)  <em>; Noch nicht fertig.</em>
        return
    if (req.status == 200) <em>; OK.</em>
        MsgBox "Neueste AutoHotkey-Version ist: " req.responseText
    else
        MsgBox "Status " req.status,, 16
    ExitApp
}</pre>
</div>

</body>
</html>
