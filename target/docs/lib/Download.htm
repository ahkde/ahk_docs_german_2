<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Download - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Download-Funktion lädt eine Datei aus dem Internet herunter." />
<meta name="ahk:equiv-v1" content="lib/URLDownloadToFile.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Download</h1>

<p>Lädt eine Datei aus dem Internet herunter.</p>

<pre class="Syntax"><span class="func">Download</span> URL, DateiName </pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>URL</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>URL der Datei, die heruntergeladen werden soll. Zum Beispiel könnte mit "http://someorg.org" die Willkommensseite dieser Organisation abgerufen werden.</p>
  </dd>

  <dt>DateiName</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Geben Sie den Namen der Datei an, die lokal erstellt werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Jede vorhandene Datei wird mit der neuen Datei <strong>überschrieben</strong>.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Bei Misserfolg wird eine Ausnahme ausgelöst.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Diese Funktion speichert die heruntergeladenen Daten in eine Datei. Um die Daten stattdessen in eine Variable zu speichern, schauen Sie sich das Beispiel weiter unten an. Alternativen dazu finden Sie im folgenden Forumsbeitrag: <a href="https://www.autohotkey.com/forum/topic10466.html">www.autohotkey.com/forum/topic10466.html</a></p>
<p>Der Download wird möglicherweise auch dann als erfolgreich angesehen, wenn die Remote-Datei nicht vorhanden ist. Das liegt daran, dass viele Webserver anstelle der fehlenden Datei eine Fehlerseite senden. Das heißt, dass in <em>DateiName</em> die Fehlerseite gespeichert wird.</p>
<p>Firewalls oder das Vorhandensein mehrerer Netzwerkadapter können dazu führen, dass die Funktion fehlschlägt. Zudem ist es möglich, dass einige Webseiten solche Downloads blockieren.</p>
<p><strong>Caching</strong>: Standardmäßig wird die URL direkt vom Remote-Server abgerufen (also nie vom Cache des Internet Explorers). Um das Caching zuzulassen, fügen Sie vor der URL ein *0 gefolgt von einem Leerzeichen ein; zum Beispiel: <em>*0 http://someorg.org</em>. Die 0 nach dem Sternchen kann mit einer beliebigen gültigen dwFlags-Nummer ersetzt werden; suchen Sie nach InternetOpenUrl auf <a href="http://www.microsoft.com">www.microsoft.com</a> für weitere Details.</p>
<p><strong>Proxies</strong>: Download wird einen Proxy-Server für den Internetzugriff verwenden, falls so ein Proxy in den Einstellungen des Internet Explorers konfiguriert wurde.</p>
<p><strong>FTP- und Gopher</strong>-URLs werden auch unterstützt. Zum Beispiel:</p>
<pre>Download "ftp://example.com/home/Meine Datei.zip", "C:\Mein Ordner\Meine Datei.zip"  <em>; Anonym anmelden.</em>
Download "ftp://user:pass@example.com:21/home/Meine Datei.zip", "C:\Mein Ordner\Meine Datei.zip"  <em>; Als bestimmter Benutzer anmelden.</em>
Download "ftp://benutzer:passwort@beispiel.com/Mein Verzeichnis", "C:\Verzeichnisliste.html"  <em>; Ermittelt eine Verzeichnisliste im HTML-Format.</em></pre>

<h2 id="Related">Siehe auch</h2>
<p><a href="FileRead.htm">FileRead</a>, <a href="FileCopy.htm">FileCopy</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Lädt eine Textdatei herunter.</p>
<pre>Download "https://www.autohotkey.com/download/2.0/version.txt", "C:\Aktuellste AutoHotkey-Version.txt"</pre>
</div>

<div class="ex" id="ExZip">
<p><a class="ex_number" href="#ExZip"></a> Lädt eine ZIP-Datei herunter.</p>
<pre>Download "http://someorg.org/archive.zip", "C:\SomeOrg-Archiv.zip"</pre>
</div>

<div class="ex" id="ExWHR">
<p><a class="ex_number" href="#ExWHR"></a> Lädt Text in eine Variable herunter.</p>
<pre>whr := ComObject("WinHttp.WinHttpRequest.5.1")
whr.Open("GET", "https://www.autohotkey.com/download/2.0/version.txt", true)
whr.Send()
<em>; Durch das 'true' oben und dem Aufruf unten bleibt das Skript ansprechbar.</em>
whr.WaitForResponse()
version := whr.ResponseText
MsgBox version
</pre>
</div>

<div class="ex" id="ExXHR">
<p><a class="ex_number" href="#ExXHR"></a> Macht einen asynchronen HTTP-Request.</p>
<pre>req := ComObject("Msxml2.XMLHTTP")
<em>; Öffnet einen Request mit aktivierter async.</em>
req.open("GET", "https://www.autohotkey.com/download/2.0/version.txt", true)
<em>; Setzt unsere Callback-Funktion.</em>
req.onreadystatechange := Ready
<em>; Sendet den Request.  Ready() wird aufgerufen, wenn es fertig ist.</em>
req.send()
<em>/*
; Wenn Sie warten wollen, brauchen Sie kein onreadystatechange.
; Durch Setzen von async=true und Warten auf diese Weise bleibt das Skript
; ansprechbar, während der Download läuft, dagegen macht async=false
; das Skript unansprechbar.
while req.readyState != 4
    sleep 100
*/</em>
Persistent

Ready() {
    if (req.readyState != 4)  <em>; Noch nicht fertig.</em>
        return
    if (req.status == 200) <em>; OK.</em>
        MsgBox "Neueste AutoHotkey-Version ist: " req.responseText
    else
        MsgBox "Status " req.status,, 16
    ExitApp
}</pre>
</div>

</body>
</html>
