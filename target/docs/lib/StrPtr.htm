<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StrPtr - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die StrPtr-Funktion gibt die aktuelle Speicheradresse einer Zeichenkette zurück." />
<meta name="ahk:equiv-v1" content="Variables.htm#amp" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>StrPtr</h1>
<p>Gibt die aktuelle Speicheradresse einer Zeichenkette zurück.</p>
<pre class="Syntax">Adresse := <span class="func">StrPtr</span>(Wert)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Wert</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
	</dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt die aktuelle Speicheradresse von <em>Wert</em> zurück.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Die Lebensdauer einer Adresse und welche Operationen mit ihr möglich sind, hängt davon ab, wie <em>Wert</em> an diese Funktion übergeben wurde. Es gibt drei verschiedene Fälle, die unten als Beispielcode gezeigt werden. In allen Fällen kann, wenn die Zeichenkette <u>nicht</u> geändert wird, der Rückgabewert <em>direkt</em> an eine <a href="DllCall.htm">DllCall</a>- oder <a href="SendMessage.htm">SendMessage</a>-Funktion übergeben werden.</p>
<pre>Ptr := StrPtr(MeineVar)</pre>
<p>Handelt es sich bei <em>Wert</em> um eine Variablenreferenz wie z.B. <code>MeineVar</code> (und nicht um eine interne Variable), ist der Rückgabewert die Speicheradresse des internen Zeichenkettenpufferspeichers der Variable. <code><a href="VarSetStrCapacity.htm">VarSetStrCapacity</a>(&amp;MeineVar)</code> gibt die Größe des Pufferspeichers <strong>in Zeichen</strong> zurück, abzüglich des terminierenden Nullzeichens.</p>
<p>Die Adresse verliert in der Regel <em>erst</em> ihre Gültigkeit, wenn die Variable freigegeben wird oder wenn der Variable ein neuer Wert durch einen der <a href="../Variables.htm#AssignOp">Zuweisungsoperatoren</a> oder durch Übergabe an eine interne Funktion zugewiesen wurde. Die Adresse des Inhalts einer <a href="../Functions.htm#Local">lokalen</a> Variable einer Funktion verliert ihre Gültigkeit, wenn die Funktion ihr Ende erreicht hat, da lokale Variablen automatisch freigegeben werden.</p>
<p>Die Adresse kann in einer <a href="DllCall.htm#struct">Struktur</a> oder einer anderen Variable gespeichert, indirekt an <a href="DllCall.htm">DllCall</a> oder <a href="SendMessage.htm">SendMessage</a> übergeben oder auf andere Weise verwendet werden, solange sie wie oben beschrieben gültig ist.</p>
<p>Das Skript kann den Wert der Zeichenkette indirekt ändern, indem es die Adresse an <a href="NumPut.htm">NumPut</a>, <a href="DllCall.htm">DllCall</a> oder <a href="SendMessage.htm">SendMessage</a> übergibt. Wenn die Länge der Zeichenkette auf diese Weise geändert wird, muss die interne Length-Eigenschaft der Variable durch Aufrufen von <code><a href="VarSetStrCapacity.htm">VarSetStrCapacity</a>(MeineVar, -1)</code> aktualisiert werden.</p>
<pre>Ptr := StrPtr("direkt geschriebene Zeichenkette")</pre>
<p>Die Adresse einer direkt geschriebenen Zeichenkette verliert ihre Gültigkeit, wenn das Programm beendet wird. Das Skript sollte nicht versuchen, die Zeichenkette zu modifizieren. Die Adresse kann in einer <a href="DllCall.htm#struct">Struktur</a> oder einer anderen Variable gespeichert, indirekt an <a href="DllCall.htm">DllCall</a> oder <a href="SendMessage.htm">SendMessage</a> übergeben oder auf andere Weise verwendet werden.</p>
<pre>SendMessage 0x000C, 0, StrPtr(A_ScriptName " hat diesen Titel geändert"),, "A"</pre>
<p>Die Adresse einer temporären Zeichenkette verliert bereits ihre Gültigkeit, wenn die Auswertung des Gesamtausdrucks oder der Funktionsaufrufanweisung abgeschlossen ist; danach darf sie nicht mehr verwendet werden. Im obigen Beispiel ist die Adresse solange gültig, bis SendMessage fertig ist. Folgende Dinge erzeugen temporäre Zeichenketten:</p>
<ul>
  <li>Verkettung.</li>
  <li>Interne Variablen wie <a href="../Variables.htm#ScriptName">A_ScriptName</a>.</li>
  <li>Funktionen, die Zeichenketten zurückgeben.</li>
  <li>Zugriff auf Eigenschaften eines Objekts, Array-Elemente oder Map-Elemente.</li>
</ul>
<p>Wenn nicht ausdrücklich oben erwähnt, kann man davon ausgehen, dass die Zeichenkette temporär ist.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="VarSetStrCapacity.htm">VarSetStrCapacity</a>, <a href="DllCall.htm">DllCall</a>, <a href="SendMessage.htm">SendMessage</a>, <a href="Buffer.htm">Buffer-Objekt</a>, <a href="NumPut.htm">NumPut</a>, <a href="NumGet.htm">NumGet</a></p>


</body>
</html>
