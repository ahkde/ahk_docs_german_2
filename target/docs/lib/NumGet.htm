<!DOCTYPE HTML>
<html lang="de">
<head>
<title>NumGet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die NumGet-Funktion gibt die Binärzahl an einer bestimmten Adresse+Offset zurück." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>NumGet</h1>
<p>Gibt die Binärzahl an einer bestimmten Adresse+Offset zurück.</p>
<pre class="Syntax">Zahl := <span class="func">NumGet</span>(Quelle, Offset, Typ)
Zahl := <span class="func">NumGet</span>(Quelle, Typ)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Quelle</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
		<p>Ein <a href="Buffer.htm">Buffer</a>-ähnliches Objekt oder eine Speicheradresse.</p>
    <p>Es kann ein beliebiges Objekt mit einer <a href="Buffer.htm#Ptr">Ptr</a>- und <a href="Buffer.htm#Size">Size</a>-Eigenschaft verwendet werden, aber diese Funktion ist für das native <a href="Buffer.htm">Buffer</a>-Objekt optimiert. Die Übergabe eines Objekts mit diesen Eigenschaften stellt sicher, dass die Funktion keinen Speicher aus einem ungültigen Bereich liest, was zu Abstürzen oder anderem unvorhersehbaren Verhalten führen kann.</p>
	</dd>

  <dt>Offset</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn leer oder weggelassen (oder wenn der 2-Parameter-Modus verwendet wird), wird standardmäßig 0 verwendet. Andernfalls geben Sie eine Zahl (in Bytes) an, die zur <em>Quelle</em> addiert wird, um die Quelladresse zu bestimmen.</p>
  </dd>

  <dt>Typ</dt>
  <dd>
      <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
      <p>Eine der folgenden Zeichenketten: UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr oder UPtr.</p>
    <p><em>Vorzeichenlose</em> 64-Bit-Integer werden nicht unterstützt, da der native Integertyp von AutoHotkey "Int64" ist. Um also mit Zahlen größer gleich 0x8000000000000000 zu arbeiten, lassen Sie das U-Präfix weg und interpretieren Sie alle negativen Werte als große Integer (Int64). Zum Beispiel ist ein Int64-Wert von -1 eigentlich 0xFFFFFFFFFFFFFFFF, wenn er als UInt64 gedacht ist. In 64-Bit-Builds ist UPtr äquivalent zu Int64.</p>
      <p>Weitere Informationen finden Sie unter <a href="DllCall.htm#types">DllCall-Typen</a>.</p>
    </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
<p>Diese Funktion gibt die Binärzahl an der angegebenen Adresse+Offset zurück.</p>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Wenn nur zwei Parameter vorhanden sind, muss der zweite Parameter <em>Typ</em> sein. Zum Beispiel wäre <code>NumGet(var, "int")</code> zulässig.</p>
<p>Es kann eine Ausnahme ausgelöst werden, wenn die Quelladresse ungültig ist. Es ist jedoch möglich, dass einige ungültige Adressen nicht als solche erkannt werden, was zu unvorhersehbarem Verhalten führen kann. Die Übergabe eines <a href="Buffer.htm">Buffer</a>-Objekts anstelle einer Adresse stellt sicher, dass die Quelladresse immer validiert werden kann.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="NumPut.htm">NumPut</a>, <a href="DllCall.htm">DllCall</a>, <a href="Buffer.htm">Buffer-Objekt</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>


</body>
</html>
