<!DOCTYPE HTML>
<html lang="de">
<head>
<title>While Loop - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die While-Schleifenanweisung führt eine oder mehrere Anweisungen wiederholt aus, bis die Auswertung eines bestimmten Ausdrucks False ergibt." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>While-Schleife</h1>

<p>Führt eine oder mehrere <a href="../Concepts.htm#statement">Anweisungen</a> wiederholt aus, bis die Auswertung eines bestimmten <a href="../Variables.htm#Expressions">Ausdrucks</a> False ergibt.</p>

<pre class="Syntax"><span class="func">While</span> <i>Ausdruck</i></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Ausdruck</dt>
  <dd><p>Ein gültiger <a href="../Variables.htm#Expressions">Ausdruck</a>. Zum Beispiel: <code>while x &lt; y</code>.</p></dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Das Leer- oder Tabulatorzeichen nach <code>While</code> ist optional, wenn der Ausdruck in runden Klammern gesetzt ist, z.B. <code>While(Ausdruck)</code>.</p>
<p>Der Ausdruck wird vor jedem Schleifendurchlauf einmal ausgewertet. Wenn die Auswertung des Ausdrucks True ergibt (also ein Ergebnis, das weder eine leere Zeichenkette noch die Zahl 0 ist), wird der Schleifenkörper ausgeführt, andernfalls springt die Ausführung auf die Zeile nach dem Schleifenkörper.</p>
<p>Nach einer While-Schleife folgt üblicherweise ein <a href="Block.htm">Block</a>, eine Sammlung von Anweisungen, die den <em>Körper</em> der Schleife bilden. Für eine Schleife mit nur einer einzigen Anweisung ist jedoch kein Block erforderlich (ein "if" und dessen "else" werden in diesem Fall als Einzelanweisung behandelt).</p>
<p id="otb">Der One True Brace (OTB) Style wird unterstützt, d.h. Sie können je nach Bedarf die geschweifte Startklammer am Zeilenende positionieren. Zum Beispiel: <code>while x &lt; y {</code>.</p>
<p>Die interne Variable <strong>A_Index</strong> enthält die Nummer des aktuellen Schleifendurchlaufs. Sie enthält 1, wenn der Ausdruck und Körper der Schleife zum ersten Mal ausgeführt wurden. Beim zweiten Mal enthält sie 2 und so weiter. Wenn eine innere Schleife von einer äußeren Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, enthält aber außerhalb einer Schleife eine 0.</p>
<p>Wie bei allen Schleifen kann die Schleife mit <a href="Break.htm">Break</a> vorzeitig beendet werden. Mit <a href="Continue.htm">Continue</a> kann außerdem der Rest des aktuellen Durchlaufs übersprungen werden, wobei A_Index um 1 erhöht und der Ausdruck der While-Schleife erneut ausgewertet wird. Wenn die Auswertung weiterhin True ergibt, beginnt ein neuer Durchlauf, andernfalls endet die Schleife.</p>
<p>Nach der Schleife kann optional eine <a href="Else.htm">Else</a>-Anweisung erfolgen, die ausgeführt wird, wenn die Schleife null Iterationen hatte.</p>
<p>Spezialisierte Schleifen: Mit Schleifen können Dateien, Ordner oder Registry-Einträge automatisch nacheinander abgerufen werden. Einzelheiten finden Sie unter <a href="LoopFiles.htm">Datei-Schleife</a> und <a href="LoopReg.htm">Registry-Schleife</a>. <a href="LoopRead.htm">Dateilesende Schleifen</a> können den kompletten Inhalt einer Datei zeilenweise durchgehen. <a href="LoopParse.htm">Parsende Schleifen</a> können einzelne Felder einer Zeichenkette durchgehen.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Until.htm">Until</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blöcke</a>, <a href="Loop.htm">Loop</a>, <a href="For.htm">For-Schleife</a>, <a href="LoopFiles.htm">Datei-Schleife</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="LoopRead.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">parsende Schleife</a>, <a href="If.htm">If</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Während der Benutzer einen Ziehvorgang mit der linken Maustaste durchführt, zeigt ein Tooltip Informationen über die Größe der Fläche innerhalb des Ziehbereichs an.</p>
<pre>CoordMode "Mouse", "Screen"

~LButton::
{
    MouseGetPos &amp;StartPosX, &amp;StartPosY
    while GetKeyState("LButton")
    {
        MouseGetPos &amp;x, &amp;y
        ToolTip StartPosX ", " StartPosY "`n" Abs(StartPosX-x) " x " Abs(StartPosY-y)
        Sleep 10
    }
    ToolTip
}</pre>
</div>

</body>
</html>
