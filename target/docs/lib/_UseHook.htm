<!DOCTYPE HTML>
<html lang="de">
<head>
<title>#UseHook - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die #UseHook-Direktive bewirkt, dass alle oder einige Tastatur-Hotkeys mit dem Hook implementiert werden." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>#UseHook</h1>

<p>Bewirkt, dass alle oder einige Tastatur-<a href="../Hotkeys.htm">Hotkeys</a> mit dem Hook implementiert werden.</p>

<pre class="Syntax"><span class="func">#UseHook</span> <span class="optional">Einstellung</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Einstellung</dt>
  <dd>
    <p>Wenn weggelassen, wird standardmäßig <em>True</em> verwendet. Andernfalls geben Sie einen der folgenden direkt geschriebenen Werte an:</p>
    <p><strong>True</strong> oder <strong>1</strong>: Der <a href="InstallKeybdHook.htm">Tastatur-Hook</a> wird zum Implementieren aller Tastatur-Hotkeys zwischen hier und der nächsten <code>#UseHook False</code>-Direktive (falls vorhanden) verwendet.</p>
    <p><strong>False</strong> oder <strong>0</strong>: Hotkeys werden mit der Standardmethode (RegisterHotkey() wenn möglich, andernfalls der Tastatur-Hook) implementiert.</p>
  </dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn diese Direktive im Skript nicht angegeben ist, verhält sie sich so, als wäre sie auf <em>False</em> gesetzt, d.h. Tastatur-Hotkeys werden nach Möglichkeit mit der Windows-API-Funktion RegisterHotkey() implementiert. Allerdings kann die Reaktionsfähigkeit von Hotkeys unter Umständen besser sein, wenn stattdessen der <a href="InstallKeybdHook.htm">Tastatur-Hook</a> verwendet wird.</p>
<p>Das Einschalten dieser Direktive ist das gleiche wie, als würde man das <a href="../Hotkeys.htm#prefixdollar">$-Präfix</a> in den Definitionen der betroffenen Hotkeys verwenden.</p>
<p><code>#UseHook</code> sollte wie alle anderen Direktiven nicht positioniert werden -- Direktiven werden nur einmal beim Start des Skripts verarbeitet -- als wäre sie eine Funktion (beispielsweise ist es sinnlos, die Direktive in eine Subroutine zu setzen). Positionieren Sie diese Direktive stattdessen direkt vor dem ersten Hotkey, der von ihr beeinflusst werden soll.</p>
<p>Standardmäßig können Hotkeys, die den <a href="InstallKeybdHook.htm">Tastatur-Hook</a> nutzen, nicht durch die <a href="Send.htm">Send</a>-Funktion ausgelöst werden. Ebenso können Maus-Hotkeys nicht durch interne Funktionen wie <a href="Click.htm">Click</a> ausgelöst werden, weil solche Hotkeys immer den <a href="InstallMouseHook.htm">Maus-Hook</a> nutzen. Um das zum Beispiel zu umgehen, <a href="../Hotkeys.htm#Function">geben Sie der Funktion des Hotkeys einen Namen</a> und rufen Sie diese direkt auf.</p>
<p><a href="_InputLevel.htm">#InputLevel</a> und <a href="SendLevel.htm">SendLevel</a> bieten zusätzliche Kontrolle darüber, welche Hotkeys und Hotstrings durch die Send-Funktion ausgelöst werden können.</p>
<p>#UseHook kann wie alle anderen Direktiven nicht bedingt ausgeführt werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="InstallKeybdHook.htm">InstallKeybdHook</a>, <a href="InstallMouseHook.htm">InstallMouseHook</a>, <a href="ListHotkeys.htm">ListHotkeys</a>, <a href="_InputLevel.htm">#InputLevel</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Veranlasst die ersten beiden Hotkeys, den Tastatur-Hook zu verwenden.</p>
<pre>#UseHook  <em>; Veranlasst die nachfolgenden Hotkeys, den Hook zu verwenden.</em>
#x::MsgBox "Dieser Hotkey wird mit dem Hook implementiert."
#y::MsgBox "Dieser Hotkey auch."
#UseHook False
#z::MsgBox "Aber dieser nicht."</pre>
</div>

</body>
</html>
