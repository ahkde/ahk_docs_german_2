<!DOCTYPE HTML>
<html lang="de">
<head>
<title>PixelSearch - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die PixelSearch-Funktion sucht in einem bestimmten Bildschirmbereich nach einem Pixel, das eine bestimmte Farbe hat." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelSearch</h1>

<p>Sucht in einem bestimmten Bildschirmbereich nach einem Pixel, das eine bestimmte Farbe hat.</p>

<pre class="Syntax"><span class="func">PixelSearch</span> &amp;AusgabeVarX, &amp;AusgabeVarY, X1, Y1, X2, Y2, FarbeID <span class="optional">, Variation</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>&amp;AusgabeVarX, &amp;AusgabeVarY</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>Referenzen, die auf Ausgabevariablen verweisen, in denen die X- und Y-Koordinate des ersten Pixels, das die Farbe <em>FarbeID</em> hat, gespeichert werden sollen (wenn das Pixel nicht gefunden wird, werden diese Variablen leer gemacht). Standardmäßig sind Koordinaten relativ zum Clientbereich des aktiven Fensters, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>X1, Y1</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Startpunkt der Suche kennzeichnet. Standardmäßig sind Koordinaten relativ zum Clientbereich des aktiven Fensters, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>X2, Y2</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Endpunkt der Suche kennzeichnet. Standardmäßig sind Koordinaten relativ zum Clientbereich des aktiven Fensters, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>FarbeID</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die ID der Farbe, nach der gesucht werden soll, was üblicherweise eine hexadezimale Zahl im Rot-Grün-Blau-Format (RGB) ist. Zum Beispiel: <code>0x9d6346</code>. Farb-IDs können mit dem Tool "Window Spy" (erreichbar über das Tray-Menü) oder via <a href="PixelGetColor.htm">PixelGetColor</a> ermittelt werden.</p>
  </dd>

  <dt>Variation</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn weggelassen, wird standardmäßig 0 verwendet. Andernfalls geben Sie eine Zahl im Bereich von 0 bis 255 an, um die erlaubte Anzahl von Variationsnuancen in beide Richtungen für die Intensität der Rot-, Grün- und Blauanteile der Farbe zu bestimmen. Wenn z.B. 2 angegeben ist und <em>FarbeID</em> 0x444444 ist, wird jede Farbe von 0x424242 bis 0x464646 als Übereinstimmung angesehen. Dieser Parameter hilft bei variierenden Pixelfarben. Wenn Sie 255 Variationsnuancen angeben, werden alle Farben übereinstimmen.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#boolean">Integer (boolesch)</a></p>
<p>Diese Funktion gibt 1 (true) zurück, wenn die Farbe im angegeben Bereich gefunden wurde, oder 0 (false), wenn sie nicht gefunden wurde.</p>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Es wird ein <a href="Error.htm#OSError">OSError</a> ausgelöst, wenn ein Problem die Funktion daran gehindert hat, die Suche durchzuführen.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Der Suchbereich muss sichtbar sein, d.h. es ist nicht möglich, einen Bereich in einem Fenster zu durchsuchen, das hinter einem anderen Fenster verborgen ist. Dagegen werden Pixel unter dem Mauszeiger in der Regel erkannt. Eine Ausnahme bilden die Mauszeiger von Videospielen, die in den meisten Fällen alle darunter liegenden Pixel verdecken.</p>
<p>Obwohl Farbtiefen bis runter zu 8-Bit (256 Farben) unterstützt werden, ist PixelSearch bei 24-Bit- oder 32-Bit-Farben deutlich performanter.</p>
<p>PixelSearch startet bei den Koordinaten <em>X1</em> und <em>Y1</em> und sucht in der Zeile von <em>X1</em> bis <em>X2</em> nach einer Übereinstimmung. Wenn es keine Übereinstimmung findet, sucht es zeilenweise in Richtung <em>Y2</em> weiter, bis es das Pixel gefunden hat.</p>
<p>Die Suchrichtung hängt von der Anordnung der Parameter ab. Mit anderen Worten: Wenn <em>X1</em> größer als <em>X2</em> ist, wird die Suche von rechts nach links durchgeführt, beginnend bei Spalte <em>X1</em>. Entsprechend wird, wenn <em>Y1</em> größer als <em>Y2</em> ist, die Suche von unten nach oben durchgeführt.</p>
<p>Wenn der Suchbereich groß ist und die Suche mit hoher Frequenz wiederholt wird, kann es zu einer hohen CPU-Belastung kommen. Um dem entgegenzuwirken, sollte die Größe des Suchbereichs auf ein Minimum beschränkt werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="PixelGetColor.htm">PixelGetColor</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sucht in einem bestimmten Bereich des aktiven Fensters nach einem Pixel und setzt <em>Px</em> und <em>Py</em> auf die X- und Y-Koordinate des ersten Pixels, das mit der angegebenen Farbe innerhalb von 3 Variationsnuancen übereinstimmt.</p>
<pre>if PixelSearch(&amp;Px, &amp;Py, 200, 200, 300, 300, 0x9d6346, 3)
    MsgBox "Eine Farbe innerhalb von 3 Variationsnuancen wurde auf X" Px " Y" Py " gefunden."
else
    MsgBox "Die Farbe konnte im angegebenen Bereich nicht gefunden werden."
</pre>
</div>

</body>
</html>
