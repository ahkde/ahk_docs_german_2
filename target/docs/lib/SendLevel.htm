<!DOCTYPE HTML>
<html lang="de">
<head>
<title>SendLevel - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die SendLevel-Funktion kontrolliert, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden sollen." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>SendLevel</h1>
<p>Kontrolliert, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden sollen.</p>
<pre class="Syntax"><span class="func">SendLevel</span> Level</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Level</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein Integer zwischen 0 und 100.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt die vorherige Einstellung zurück.</p>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Standardmäßig werden Tastatur- und Mausereignisse, die von einem anderen AutoHotkey-Skript erzeugt werden, von <a href="_UseHook.htm">Hook</a>-<a href="../Hotkeys.htm">Hotkeys</a> und -<a href="../Hotstrings.htm">Hotstrings</a> ignoriert. In einigen Fällen ist es sinnvoll, dieses Verhalten zu überschreiben, um zum Beispiel eine neubelegte Taste andere Hotkeys auslösen zu lassen. SendLevel und <a href="_InputLevel.htm">#InputLevel</a> stellen die Mittel bereit, um das zu erreichen.</p>
<p>SendLevel bestimmt die Stufe für Ereignisse, die vom aktuellen <a href="../misc/Threads.htm">Skript-Thread</a> erzeugt werden, während #InputLevel die Stufe für jeden nachfolgenden Hotkey und Hotstring bestimmt. Die Sendestufe eines Ereignisses, das von einem Skript erzeugt wird, muss höher sein als die Eingabestufe des Hotkeys oder Hotstrings, um einen Hook-Hotkey oder -Hotstring auslösen zu können.</p>
<p>Kompatibilität:</p>
<ul>
  <li>SendLevel hat keinen Einfluss auf <a href="Send.htm#SendPlayDetail">SendPlay</a>.</li>
  <li>SendLevel hat Einfluss auf <a href="Send.htm#SendInputDetail">SendInput</a>. Allerdings können die internen Hook-Hotkeys vom Skript nicht aktiviert werden, während ein SendInput am Laufen ist, da es vorübergehend den Hook deaktiviert. Wenn Send oder SendInput jedoch <a href="Send.htm#SendInputUnavail">zu SendEvent zurückwechselt</a>, ist es in der Lage, die Hotkeys des Skripts zu aktivieren.</li>
  <li>Hotkeys, die die <a href="ListHotkeys.htm">reg</a>-Methode verwenden, können physische und künstliche Eingaben nicht unterscheiden, deshalb werden sie von SendLevel nicht beeinflusst. Allerdings verwenden Hotkeys über Stufe 0 immer den Tastatur- oder Maus-Hook.</li>
  <li><a href="../Hotstrings.htm">Hotstrings</a> verwenden #InputLevel nur, um zu bestimmen, ob das zuletzt eingegebene Zeichen einen Hotstring auslösen soll. Um zum Beispiel den Hotstring <code>::bzw::</code> unabhängig von #InputLevel auszulösen, senden Sie <code>bzw</code> mit Level 1 oder höher und geben Sie physisch ein <a href="../Hotstrings.htm#EndChars">Endungszeichen</a> ein. Das ist deshalb so, weil die Hotstring-Erkennung die Eingaben von jedem Level außer 0 in einem einzigen globalen Pufferspeicher sammelt.</li>
  <li>Automatisch-ersetzende <a href="../Hotstrings.htm">Hotstrings</a> erzeugen immer Tastendrücke der Stufe 0, denn es ist generell unerwünscht, dass der Ersatztext einen anderen Hotstring oder Hotkey auslöst. Um das zu umgehen, verwenden Sie einen nicht-automatisch-ersetzenden Hotstring und die SendEvent-Funktion.</li>
  <li>Zeichen, die mit der <a href="Send.htm#asc">ASC</a>-Methode (ALT+nnnnn) gesendet werden, können keinen Hotstring auslösen, selbst wenn SendLevel verwendet wird.</li>
  <li>Zeichen, die mit SendEvent in Verbindung mit dem <a href="Send.htm#SendText">{Text}</a>-Modus, mit <a href="Send.htm#Unicode">{U+nnnn}</a> oder mit der <a href="Send.htm#characters">Unicode-Fallback-Methode</a> gesendet werden, können Hotstrings auslösen.</li>
</ul>
<p>Die interne Variable <strong>A_SendLevel</strong> enthält die aktuelle Einstellung.</p>
<p>Jeder neu gestartete Hotkey- oder Hotstring-<a href="../misc/Threads.htm">Thread</a> verwendet vorerst eine Sendestufe, die der <a href="_InputLevel.htm">Eingabestufe</a> des Hotkeys oder Hotstrings entspricht. Jeder andere neu gestartete Thread (z. B. ein Hotkey, ein <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder eine <a href="SetTimer.htm">zeitgesteuerte</a> Subroutine) verwendet vorerst die Standardeinstellung der Funktion (üblicherweise 0). Diese Standardeinstellung können Sie ändern, wenn Sie diese Funktion während der <a href="../Scripts.htm#auto">Startphase des Skripts</a> nutzen.</p>
<p>Verwendet man SendLevel während der <a href="../Scripts.htm#auto">Startphase des Skripts</a>, wirkt sich dies auch auf die <a href="../misc/Remap.htm">Neubelegung von Tasten</a> aus.</p>
<p>AutoHotkey-Versionen älter als v1.1.06 verhalten sich so, als wären <code>#InputLevel 0</code> und <code>SendLevel 0</code> wirksam.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="_InputLevel.htm">#InputLevel</a>, <a href="Send.htm">Send</a>, <a href="Click.htm">Click</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseClickDrag.htm">MouseClickDrag</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> SendLevel ermöglicht das Auslösen von Hotkeys und Hotstrings eines anderen Skripts, was normalerweise nicht möglich wäre.</p>
<pre>
SendLevel 1
SendEvent "bzw{Space}" <em>; Erzeugt "beziehungsweise ".</em>

<em>; Folgendes kann in einem anderen Skript definiert werden:</em>
::bzw::beziehungsweise
</pre>
</div>

</body>
</html>
