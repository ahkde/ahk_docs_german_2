<!DOCTYPE HTML>
<html lang="de">
<head>
<title>ComObjConnect - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die ComObjConnect-Funktion verbindet die Ereignisquelle eines COM-Objekts mit dem Skript, um eine Behandlung von Ereignissen zu ermöglichen." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObjConnect</h1>
<p>Verbindet die Ereignisquelle eines COM-Objekts mit dem Skript, um eine Behandlung von Ereignissen zu ermöglichen.</p>
<pre class="Syntax"><span class="func">ComObjConnect</span> ComObj <span class="optional">, PräfixOderSink</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>ComObj</dt>
  <dd>
    <p>Typ: <a href="ComObject.htm">ComObject</a></p>
    <p>Ein Objekt, das Ereignisse auslöst.</p>
    <p>Wenn das Objekt das IConnectionPointContainer-Interface nicht unterstützt oder wenn Typinformationen über die Klasse des Objekts nicht abgerufen werden können, wird eine Fehlermeldung angezeigt. Diese Fehlermeldung kann mit <a href="Try.htm">Try</a>/<a href="Catch.htm">Catch</a> unterdrückt oder behandelt werden.</p>
    <p>Das IProvideClassInfo-Interface wird verwendet, um Typinformationen über die Klasse des Objekts abzurufen, sofern es vom Objekt unterstützt wird. Andernfalls versucht ComObjConnect, die Typinformationen via IDispatch-Interface des Objekts abzurufen, was unzuverlässig sein kann.</p>
  </dd>

  <dt>PräfixOderSink</dt>
  <dd>
      <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../Concepts.htm#objects">Objekt</a></p>
      <p>Wenn weggelassen, wird die Verbindung zum Objekt getrennt, d.h. das Skript erhält keine Benachrichtigungen von seinen Ereignissen mehr. Andernfalls geben Sie eine Zeichenkette an, die dem Ereignisnamen vorangestellt wird, um zu bestimmen, welche globale Funktion aufgerufen werden soll, wenn ein Ereignis stattfindet, oder ein <a href="#event-sink">Event-Sink-Objekt</a>, das eine statische Methode für jedes zu behandelnde Ereignis definiert.</p>
      <p class="warning"><strong>Hinweis:</strong> Verschachtelte Funktionen werden in diesem Modus nicht unterstützt, da Namen erst nach Rückkehr der aktuellen Funktion aufgelöst werden können. Um verschachtelte Funktionen oder Closures zu verwenden, binden Sie diese an ein Objekt und übergeben Sie das Objekt wie unten beschrieben.</p>
    </dd>

</dl>

<h2 id="Usage">Verwendung</h2>
<p>Um ComObjConnect effektiv nutzen zu können, müssen Sie zunächst Funktionen in das Skript schreiben, die die entsprechenden Ereignisse behandeln können. Solche Funktionen, auch "Ereignishandler" genannt, haben die folgende Struktur:</p>
<pre class="Syntax Short NoIndent"><i>Präfix</i><b>EreignisName</b>([<i>Params...</i>, ComObj])
{
    <i class="dull">... ereignisbehandelnder Code ...</i>
    return <i>RückgabeWert</i>
}</pre>
<p><i>Präfix</i> sollte identisch mit dem <em>PräfixOderSink</em>-Parameter sein, wenn es eine Zeichenkette ist, andernfalls sollte es weggelassen werden. <b>EreignisName</b> sollte mit dem Namen des Ereignisses ersetzt werden, das von der Funktion behandelt werden soll.</p>
<p><i>Params</i> entspricht den Parametern, die das Ereignis hat. Wenn das Ereignis keine Parameter hat, sollte <i>Params</i> ganz weggelassen werden. <i>ComObj</i> ist ein zusätzlicher Parameter, der eine Referenz zum ursprünglichen Wrapper-Objekt enthält, das an ComObjConnect übergeben wurde; dieser Parameter wird in der Dokumentation des COM-Ereignisses nie erwähnt. "ComObj" sollte mit einem Namen ersetzt werden, der besser zum Kontext Ihres Skripts passt.</p>
<p>Beachten Sie, dass Ereignishandler Rückgabewerte haben können. Mit <a href="ComValue.htm">ComValue</a> kann ein COM-spezifischer Wertetyp zurückgegeben werden. Zum Beispiel gibt <code>return ComValue(0,0)</code> eine Variante des Typs VT_EMPTY zurück, was dasselbe ist wie, als würde eine JavaScript-Funktion <code>undefined</code> (oder gar nichts) zurückgeben.</p>
<p>Mit <code>ComObjConnect(MeinObjekt, "<i>Präfix</i>")</code> kann die Ereignisbehandlung aktiviert werden.</p>
<p>Rufen Sie <code>ComObjConnect(MeinObjekt)</code> auf, um die Verbindung zum Objekt zu trennen (Ereignisbehandlungen zu stoppen).</p>
<p>Wenn die Anzahl der Parameter unbekannt ist, kann eine <a href="../Functions.htm#Variadic">variadische Funktion</a> verwendet werden.</p>

<h3 id="event-sink">Event-Sink</h3>
<p>Wenn <em>PräfixOderSink</em> ein Objekt ist, wird jedes Mal, wenn ein Ereignis ausgelöst wird, die entsprechende Methode dieses Objekts aufgerufen. Obwohl das Objekt dynamisch konstruiert werden kann, ist es für <em>PräfixOderSink</em> typischer, auf eine Klasse oder eine Instanz einer Klasse zu verweisen. In diesem Fall werden die Methoden wie oben definiert, jedoch ohne <em>Präfix</em>.</p>
<p>Wie bei jedem Methodenaufruf enthält der (normalerweise versteckte) <code>this</code>-Parameter der Methode eine Referenz zum Objekt, über das die Methode aufgerufen wurde; also das Event-Sink-Objekt, nicht das COM-Objekt. Dies kann verwendet werden, um den Ereignishandlern Kontext bereitzustellen oder um Werte zwischen ihnen auszutauschen.</p>
<p>Um alle Ereignisse abzufangen, ohne für jedes einzelne eine Methode zu definieren, definieren Sie eine <a href="../Objects.htm#Meta_Functions">__Call-Metafunktion</a>.</p>
<p><em>ComObject</em> gibt seine Referenz zu <em>PräfixOderSink</em> automatisch frei, wenn das COM-Objekt die Verbindung freigibt. Das passiert zum Beispiel, wenn der Internet Explorer beendet wird. Wenn das Skript seine eigene Referenz zu <em>PräfixOderSink</em> nicht beibehält, kann es <a href="../Objects.htm#Custom_NewDelete">__Delete</a> verwenden, um zu erkennen, wann dies geschieht. Wenn das Objekt von einem Remote-Prozess gehostet wird und der Prozess unerwartet terminiert wird, kann es mehrere Minuten dauern, bis das System die Verbindung freigibt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Das Skript muss eine Referenz zu <em>ComObj</em> behalten, andernfalls würde es automatisch freigegeben und die Verbindung zu seinem COM-Objekt trennen, was verhindert, dass weitere Ereignisse erkannt werden. Es gibt keine Standardmethode, um zu erkennen, wann die Verbindung nicht mehr benötigt wird, daher muss das Skript die Verbindung manuell trennen, indem es ComObjConnect aufruft.</p>
<p>Möglicherweise ist die <a href="Persistent.htm">Persistent</a>-Funktion erforderlich, um das Skript am Laufen zu halten, während es auf Ereignisse wartet.</p>
<p>Bei Misserfolg wird eine Ausnahme ausgelöst.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="ComObject.htm">ComObject</a>, <a href="ComObjGet.htm">ComObjGet</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="https://learn.microsoft.com/previous-versions/ccxe1xe6(v=vs.85)">WScript.ConnectObject (Microsoft Docs)</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExIE">
<p><a class="ex_number" href="#ExIE"></a> Startet eine Instanz des Internet Explorers und verbindet Ereignisse mit entsprechenden Skriptfunktionen, die das Präfix "IE_" haben. Details zum hier verwendeten COM-Objekt und zum DocumentComplete-Ereignis finden Sie unter <a href="https://learn.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752084(v=vs.85)">InternetExplorer object (Microsoft Docs)</a>.</p>
<pre>ie := ComObject("InternetExplorer.Application")

<em>; Verbindet Ereignisse mit entsprechenden Skriptfunktionen, die das Präfix "IE_" haben.</em>
ComObjConnect(ie, "IE_")

ie.Visible := true  <em>; Funktioniert nicht korrekt unter IE7.</em>
ie.Navigate("https://www.autohotkey.com/")
Persistent

IE_DocumentComplete(ieEventParam, &amp;url, ieFinalParam) {
    <em>; IE übergibt url als Referenz, die auf ein VARIANT verweist,
    ; daher wird oben &amp;url verwendet, damit der Code unten normal</em>
    <em>; darauf verweisen kann, anstatt %url% zu nutzen.</em>
    s := ""
    if (ie != ieEventParam)
        s .= "Erster Parameter ist ein neues Wrapper-Objekt.`n"
    if (ie == ieFinalParam)
        s .= "Letzter Parameter ist das originale Wrapper-Objekt.`n"
    if (<a href="ComObjValue.htm">ComObjValue</a>(ieEventParam) == ComObjValue(ieFinalParam))
        s .= "Beide Wrapper-Objekte verweisen auf dieselbe IDispatch-Instanz.`n"
    MsgBox s . "Das Laden von " ie.Document.title " @ " url " wurde abgeschlossen."
    ie.Quit()
    ExitApp
}
</pre>
</div>

</body>
</html>
