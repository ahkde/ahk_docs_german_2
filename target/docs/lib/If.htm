<!DOCTYPE HTML>
<html lang="de">
<head>
<title>If - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die If-Anweisung bestimmt eine oder mehrere Anweisungen, die ausgeführt werden, wenn die Auswertung eines Ausdrucks True ergibt." />
<meta name="ahk:equiv-v1" content="lib/IfExpression.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>If</h1>
<p>Bestimmt eine oder mehrere <a href="../Concepts.htm#statement">Anweisungen</a>, die ausgeführt werden, wenn die Auswertung eines <a href="../Variables.htm#Expressions">Ausdrucks</a> True ergibt.</p>
<pre class="Syntax"><span class="func">If</span> <i>Ausdruck</i>
{
    <i>Anweisungen</i>
}</pre>

<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn die Auswertung des Ausdrucks der <em>If</em>-Anweisung True ergibt (also ein Ergebnis, das weder eine leere Zeichenkette noch die Zahl 0 ist), wird die Zeile oder der <a href="Block.htm">Block</a> darunter ausgeführt. Andernfalls wird, wenn es ein entsprechendes <a href="Else.htm">Else</a> gibt, die Ausführung auf die Zeile oder den Block darunter springen.</p>
<p>Wenn ein <em>If</em> mehr als eine Zeile besitzt, müssen diese Zeilen mit geschweiften Klammern umschlossen werden (um einen <a href="Block.htm">Block</a> zu bilden). Besitzt ein <em>If</em> allerdings nur eine Zeile, können die geschweiften Klammern weggelassen werden. Beispiele finden Sie am Ende dieser Seite.</p>
<p>Das Leerzeichen nach <code>if</code> ist optional, wenn der Ausdruck mit einer runden Startklammer beginnt, wie z.B. <code>if(Ausdruck)</code>.</p>
<p id="otb">Je nach Bedarf kann der <a href="Block.htm#otb">One True Brace (OTB) Style</a> verwendet werden. Zum Beispiel:</p>
<pre>if (x &lt; y) {
    <em>; ...</em>
}
if WinExist("Unbenannt - Editor") {
    WinActivate
}
if IstFertig {
    <em>; ...</em>
} else {
    <em>; ...</em>
}</pre>
<p>Im Gegensatz zur <em>If</em>-Anweisung unterstützt eine <a href="Else.htm">Else</a>-Anweisung unmittelbar auf der rechten Seite eine Anweisung beliebiger Art.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Variables.htm#Expressions">Ausdrücke</a>, <a href="../Variables.htm#ternary">Ternärer Operator (a?b:c)</a>, <a href="Block.htm">Blöcke</a>, <a href="Else.htm">Else</a>, <a href="While.htm">While-Schleife</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExOne">
<p><a class="ex_number" href="#ExOne"></a> Wenn <var>A_Index</var> größer als 100 ist, kehre via Return zurück.</p>
<pre>if (A_Index &gt; 100)
    return</pre>
</div>

<div class="ex" id="ExMultiple">
<p><a class="ex_number" href="#ExMultiple"></a> Wenn das Ergebnis von <code>A_TickCount - StartTime</code> größer als das Ergebnis von <code>2*MaxTime + 100</code> ist, zeige "Zu viel Zeit verstrichen." und terminiere das Skript.</p>
<pre>if (A_TickCount - StartZeit &gt; 2*MaxZeit + 100)
{
    MsgBox "Zu viel Zeit verstrichen."
    ExitApp
}</pre>
</div>

<div class="ex" id="ExComplex">
<p><a class="ex_number" href="#ExComplex"></a> Dieses Beispiel wird wie folgt ausgeführt:</p>
<ol>
  <li>Wenn <var>Farbe</var> das Wort "Blau" oder "Weiß" ist:
    <ol>
      <li>Zeige "Die Farbe ist einer der erlaubten Werte.".</li>
      <li>Terminiere das Skript.</li>
    </ol>
  </li>
  <li>Andernfalls, wenn <var>Farbe</var> das Wort "Silber" ist:
    <ol>
      <li>Zeige "Silber ist keine erlaubte Farbe.".</li>
      <li>Stoppe weitere Überprüfungen.</li>
    </ol>
  </li>
  <li>Andernfalls:
    <ol>
      <li>Zeige "Diese Farbe wurde nicht erkannt.".</li>
      <li>Terminiere das Skript.</li>
    </ol>
  </li>
</ol>
<pre>if (Farbe = "Blau" or Farbe = "Weiß")
{
    MsgBox "Die Farbe ist einer der erlaubten Werte."
    ExitApp
}
else if (Farbe = "Silber")
{
    MsgBox "Silber ist keine erlaubte Farbe."
    return
}
else
{
    MsgBox "Diese Farbe wurde nicht erkannt."
    ExitApp
}</pre>
</div>
<div class="ex" id="ExMultiStatement">
<p><a class="ex_number" href="#ExMultiStatement"></a> Eine einzelne <a href="../Variables.htm#comma">Mehrfachanweisungszeile</a> muss nicht mit geschweiften Klammern umschlossen werden.</p>
<pre>MeineVar := 3
if (MeineVar &gt; 2)
    MeineVar++, MeineVar := MeineVar - 4, MeineVar .= " test"
MsgBox MeineVar  <em>; Meldet "0 test".</em>
</pre>
</div>

<div class="ex" id="ExIfBetween">
<p><a class="ex_number" href="#ExIfBetween"></a> Ähnlich wie <a href="https://www.autohotkey.com/docs/v1/lib/IfBetween.htm">If Var [not] between Min and Max</a> von AutoHotkey v1 prüfen die folgenden Beispiele, ob der Inhalt einer <a href="../Variables.htm">Variable</a> zwischen zwei Werten liegt (numerisch oder alphabetisch).</p>
<p>Prüft, ob <var>var</var> im Bereich von 1 bis 5 liegt:</p>
<pre>if (var &gt;= 1 and var &lt;= 5)
    MsgBox var " liegt im Bereich von 1 bis 5."</pre>
<p>Prüft, ob <var>var</var> im Bereich von 0.0 bis 1.0 liegt:</p>
<pre>if not (var &gt;= 0.0 and var &lt;= 1.0)
    MsgBox var " liegt nicht im Bereich von 0.0 und 1.0."</pre>
<p>Prüft, ob <var>var</var> zwischen <var>VarNiedrig</var> und <var>VarHoch</var> liegt:</p>
<pre>if (var &gt;= VarNiedrig and var &lt;= VarHoch)
    MsgBox var " liegt zwischen " VarNiedrig " und " VarHoch "."</pre>
<p>Prüft, ob <var>var</var> alphabetisch zwischen den Wörtern Blau und Rot liegt:</p>
<pre>if (StrCompare(var, "Blau") &gt;= 0) and (StrCompare(var, "Rot") &lt;= 0)
    MsgBox var " liegt alphabetisch zwischen den Wörtern Blau und Rot."</pre>
<p>Lässt den Benutzer eine Zahl eingeben und prüft, ob sie im Bereich von 1 bis 10 liegt:</p>
<pre>Untergrenze := 1
Obergrenze := 10
IB := InputBox("Bitte eine Zahl zwischen " Untergrenze " und " Obergrenze " eingeben")
if not (IB.Value &gt;= Untergrenze and IB.Value &lt;= Obergrenze)
    MsgBox "Ihre Eingabe liegt außerhalb des gültigen Bereichs."</pre>
</div>

<div class="ex" id="ExIfInContains">
<p><a class="ex_number" href="#ExIfInContains"></a> Ähnlich wie <a href="https://www.autohotkey.com/docs/v1/lib/IfIn.htm">If Var [not] in/contains VergleichListe</a> von AutoHotkey v1 prüfen die folgenden Beispiele, ob der Inhalt einer <a href="../Variables.htm">Variable</a> mit einem der Elemente in einer Liste übereinstimmt.</p>
<p>Prüft, ob <var>var</var> die Dateiendung EXE, BAT oder COM ist:</p>
<pre>if (var ~= "i)\A(exe|bat|com)\z")
    MsgBox "Die Dateiendung ist von einer ausführbaren Datei."</pre>
<p>Prüft, ob <var>var</var> die Primzahl 1, 2, 3, 5, 7 oder 11 ist:</p>
<pre>if (var ~= "\A(1|2|3|5|7|11)\z")
    MsgBox var " ist eine kleine Primzahl."</pre>
<p>Prüft, ob <var>var</var> die Ziffer 1 oder 3 enthält:</p>
<pre>if (var ~= "1|3")
    MsgBox "var enthält die Ziffer 1 oder 3 (var könnte auch eine 1, 3, 10, 21, 23, etc. sein)"</pre>
<p>Prüft, ob <var>var</var> eines der Elemente in <var>MeineElementeListe</var> ist:</p>
<pre><em>; Entkommentiere folgende Zeile, wenn MeineListe RegEx-Zeichen außer | enthält.
; MeineListe := RegExReplace(MeineListe, "[\Q\.*?+[{()^$\E]", "\$0")</em>
if (var ~= "i)\A(" MeineListe ")\z")
    MsgBox var " ist in der Liste."</pre>
<p>Lässt den Benutzer eine Zeichenkette eingeben und prüft, ob sie das Wort Ja oder Nein ist:</p>
<pre>IB := InputBox("Bitte JA oder NEIN eingeben")
if not (IB.Value ~= "i)\A(ja|nein)\z")
    MsgBox "Ihre Eingabe ist ungültig."</pre>
<p>Prüft, ob <var>aktiver_titel</var> "Adressliste.txt" oder "Kundenliste.txt" enthält, und prüft, ob es "metapad" oder "Notepad" enthält:</p>
<pre>aktiver_titel := WinGetTitle("A")
if (aktiver_titel ~= "i)Adressliste\.txt|Kundenliste\.txt")
    MsgBox "Eines der gewünschten Fenster ist aktiv."
if not (aktiver_titel ~= "i)metapad|Notepad")
    MsgBox "Aber die Datei ist weder in Metapad noch in Notepad geöffnet."</pre>
</div>

</body>
</html>
