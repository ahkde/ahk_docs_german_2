<!DOCTYPE HTML>
<html lang="de">
<head>
<title>#DllLoad - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die #DllLoad-Direktive lädt eine DLL- oder EXE-Datei, bevor das Skript mit der Ausführung beginnt." />
<meta name="ahk:equiv-v1" content="lib/DllCall.htm#load" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>#DllLoad</h1>

<p><a href="DllCall.htm#load">Lädt</a> eine DLL- oder EXE-Datei, bevor das Skript mit der Ausführung beginnt.</p>

<pre class="Syntax"><span class="func">#DllLoad</span> <span class="optional">DateiOderVerzName</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>DateiOderVerzName</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der Pfad einer Datei oder eines Verzeichnisses, wie unten beschrieben. Der Dateiname <strong>darf keine</strong> doppelten Anführungszeichen, Platzhalterzeichen oder <a href="../misc/EscapeChar.htm">Escapesequenzen</a> außer Semikolon (<strong>`;</strong>) enthalten.</p>
    <p>Interne Variablen können genutzt werden, indem man sie mit Prozentzeichen umschließt (zum Beispiel <code>#DllLoad %A_ScriptDir%</code>). Prozentzeichen, die nicht zu einer gültigen Variablenreferenz gehören, werden als direkt geschriebener Text interpretiert. Alle internen Variablen sind gültig, außer <a href="../Variables.htm#Args">A_Args</a> und interne Klassen.</p>
    <p>Bekannte Einschränkung: Beim Kompilieren eines Skripts werden Variablen vom Compiler ausgewertet; das heißt, dass sie von dem abweichen können, was das Skript bei der endgültigen Ausführung zurückgeben würde. Folgende Variablen werden unterstützt: A_AhkPath, A_AppData, A_AppDataCommon, A_ComputerName, A_ComSpec, A_Desktop, A_DesktopCommon, A_IsCompiled, A_LineFile, A_MyDocuments, A_ProgramFiles, A_Programs, A_ProgramsCommon, A_ScriptDir, A_ScriptFullPath, A_ScriptName, A_Space, A_StartMenu, A_StartMenuCommon, A_Startup, A_StartupCommon, A_Tab, A_Temp, A_UserName, A_WinDir.</p>
    <p><strong>Datei:</strong> Der absolute oder relative Pfad der DLL- oder EXE-Datei, die geladen werden soll. Wenn ein relativer Pfad angegeben ist, verwendet die Direktive die Suchstrategie der Systemfunktion <a href="https://learn.microsoft.com/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryw">LoadLibraryW</a> zum Suchen der Datei. Hinweis: <a href="SetWorkingDir.htm">SetWorkingDir</a> hat keine Auswirkung auf #DllLoad, da #DllLoad bereits vor Beginn der Skriptausführung ausgewertet wird.</p>
    <p><strong>Verzeichnis:</strong> Geben Sie ein Verzeichnis anstelle einer Datei an, um die Suchstrategie für alle nachfolgenden #DllLoad-Direktiven ohne absoluten Pfad zu ändern. Die neue Suchstrategie ist das gleiche wie, als hätte man <em>Verzeichnis</em> an die Systemfunktion <a href="https://learn.microsoft.com/windows/win32/api/winbase/nf-winbase-setdlldirectoryw">SetDllDirectoryW</a> übergeben. Lässt man diesen Parameter weg, wird die ursprüngliche Suchstrategie wiederhergestellt.</p>
    <p class="note"><strong>Hinweis:</strong> Dieser Parameter ist kein Ausdruck, kann aber in Anführungszeichen gesetzt werden (entweder 'einfach' oder "doppelt").</p>
  </dd>
</dl>
<h2 id="Remarks">Bemerkungen</h2>
<p>Eine mit dieser Direktive geladene DLL- oder EXE-Datei kann nicht mehr mit der Systemfunktion <a href="https://learn.microsoft.com/windows/win32/api/libloaderapi/nf-libloaderapi-freelibrary">FreeLibrary</a> entladen werden. Wenn das Skript terminiert wird, werden alle geladenen Dateien automatisch entladen.</p>
<p>Der <em>DateiName</em>-Parameter kann optional mit <code>*i</code> und einem einzelnen Leerzeichen beginnen, um alle Fehler zu ignorieren, die beim Laden der Datei auftreten könnten. Diese Option sollte nur verwendet werden, wenn das Skript trotz des Fehlers ausführbar ist, z. B. wenn die DLL oder EXE nicht unbedingt erforderlich ist, oder wenn das Skript dafür ausgelegt ist, den Fehler zu erkennen. Zum Beispiel:</p>
<pre>#DllLoad "*i MeineDLL"
if !DllCall("GetModuleHandle", "str", "MeineDLL")
    MsgBox "MeineDLL konnte nicht geladen werden!"</pre>
<p>Wenn für <em>DateiName</em> nur der Name einer DLL-Datei angegeben ist (also ohne Pfad und Dateiendung), wird <em>.dll</em> an den Dateinamen angehängt. Um das zu verhindern, fügen Sie einen Punkt (.) am Ende des Dateinamens an.</p>
<p>#DllLoad kann wie alle anderen Direktiven nicht bedingt ausgeführt werden.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="DllCall.htm">DllCall</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Lädt eine DLL-Datei, die sich im Ordner "Eigene Dateien" des aktuellen Benutzers befindet, bevor das Skript mit der Ausführung beginnt.</p>
<pre>#DllLoad "%A_MyDocuments%\MeineDLL.dll"</pre>
</div>

</body>
</html>
