<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Loop - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Loop-Anweisung führt eine oder mehrere Anweisungen wiederholt aus: Entweder eine bestimmte Anzahl oder bis ein Break auftritt." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Loop</h1>

<p>Führt eine oder mehrere <a href="../Concepts.htm#statement">Anweisungen</a> wiederholt aus: Entweder eine bestimmte Anzahl oder bis ein <a href="Break.htm">Break</a> auftritt.</p>

<pre class="Syntax"><span class="func">Loop</span> <span class="optional">Anzahl</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Anzahl</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn weggelassen, wird die Schleife endlos wiederholt, bis ein <a href="Break.htm">Break</a> oder <a href="Return.htm">Return</a> auftritt. Andernfalls geben Sie an, wie oft die Schleife wiederholt (iteriert) werden soll. Beachten Sie aber, dass ein explizit leerer Wert oder eine Zahl kleiner als 1 die Schleife komplett überspringen lässt.</p>
    <p><em>Anzahl</em> wird nur einmal ausgewertet, bevor die Schleife beginnt. Wenn <em>Anzahl</em> beispielsweise ein Ausdruck mit Nebeneffekten wie Funktionsaufrufe oder Zuweisungen ist, dann treten diese Nebeneffekte nur einmal auf.</p>
    <p>Wenn <em>Anzahl</em> mit runden Klammern umschlossen wird, ist ein Leer- oder Tabulatorzeichen nicht notwendig. Zum Beispiel: <code>Loop(2)</code></p>
  </dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Nach einer Schleife folgt üblicherweise ein <a href="Block.htm">Block</a>, eine Sammlung von Anweisungen, die den <em>Körper</em> der Schleife bilden. Für eine Schleife mit nur einer einzigen Anweisung ist jedoch kein Block erforderlich (ein "if" und dessen "else" werden in diesem Fall als Einzelanweisung behandelt).</p>
<p>Häufig wird diese Anweisung als Endlosschleife verwendet, zusammen mit einem <a href="Break.htm">Break</a> irgendwo im <em>Körper</em> der Schleife, um die Schleife gezielt zu stoppen.</p>
<p>Es ist ratsam, <a href="Break.htm">Break</a> und <a href="Continue.htm">Continue</a> anstelle von <a href="Goto.htm">Goto</a> zu verwenden, da sie in der Regel die Lesbarkeit und Wartbarkeit eines Skripts verbessern. Es ist auch möglich, eine "While"- oder "Do...While/Until" -Schleife zu simulieren, indem die erste oder letzte Anweisung im <em>Körper</em> der Schleife zu einer IF-Anweisung gemacht wird, die je nach Bedingung ein <a href="Break.htm">Break</a> ausführt. In der Regel sollte aber <a href="While.htm">While</a> oder <a href="Until.htm">Loop...Until</a> verwendet werden.</p>
<p>Die interne Variable <strong>A_Index</strong> enthält die Nummer des aktuellen Schleifendurchlaufs. Sie enthält 1, wenn der <em>Körper</em> der Schleife zum ersten Mal ausgeführt wurde. Beim zweiten Mal enthält sie 2 und so weiter. Wenn eine innere Schleife von einer äußeren Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, einschließlich <a href="LoopFiles.htm">Datei-Schleifen</a> und <a href="LoopReg.htm">Registry-Schleifen</a>; außerhalb einer Schleife enthält A_Index 0.</p>
<p>Man kann in A_Index einen beliebigen Integerwert speichern. Wenn <em>Anzahl</em> angegeben ist, beeinflusst eine Änderung von A_Index die aktuelle Anzahl der Durchläufe, die durchgeführt werden. Zum Beispiel würde <code>A_Index := 3</code> eine Schleife dazu bringen, sich so zu verhalten, als wäre sie im dritten Durchlauf (A_Index wird im nächsten Durchlauf eine 4 sein), während <code>A_Index--</code> verhindert, dass die Schleife jemals den nächsten Durchlauf erreicht.</p>
<p>Nach der Schleife kann optional eine <a href="Else.htm">Else</a>-Anweisung erfolgen, die ausgeführt wird, wenn <em>Anzahl</em> Null ist.</p>
<p>Je nach Bedarf kann der <a href="Block.htm#otb">One True Brace (OTB) Style</a> verwendet werden. Zum Beispiel:</p>
<pre>Loop {
    ...
}
Loop WiederholungenAnzahl {
    ...
}</pre>
<p>Spezialisierte Schleifen: Mit Schleifen können Dateien, Ordner oder Registry-Einträge automatisch nacheinander abgerufen werden. Einzelheiten finden Sie unter <a href="LoopFiles.htm">Datei-Schleife</a> und <a href="LoopReg.htm">Registry-Schleife</a>. <a href="LoopRead.htm">Dateilesende Schleifen</a> können den kompletten Inhalt einer Datei zeilenweise durchgehen. <a href="LoopParse.htm">Parsende Schleifen</a> können einzelne Felder einer Zeichenkette durchgehen.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Until.htm">Until</a>, <a href="While.htm">While-Schleife</a>, <a href="For.htm">For-Schleife</a>, <a href="LoopFiles.htm">Datei-Schleife</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="LoopRead.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">parsende Schleife</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blöcke</a>, <a href="Else.htm">Else</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Erstellt eine Schleife mit 3 Iterationen (Wiederholungen).</p>
<pre>Loop 3
{
    MsgBox "Iterationsnummer ist " A_Index  <em>; A_Index wird 1, 2 und 3 sein.</em>
    Sleep 100
}</pre>
</div>

<div class="ex" id="ExBreakContinue">
<p><a class="ex_number" href="#ExBreakContinue"></a> Erstellt eine Endlosschleife, die aber nach der 25. Iteration unterbrochen wird.</p>
<pre>Loop
{
    if (A_Index &gt; 25)
        break  <em>; Unterbricht die Schleife</em>
    if (A_Index &lt; 20)
        continue <em>; Überspringt das darunter und startet eine neue Iteration</em>
    MsgBox "A_Index = " A_Index <em>; Dies wird nur die Nummern 20 bis 25 anzeigen</em>
}</pre>
</div>

</body>
</html>
