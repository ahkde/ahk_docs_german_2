<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StrGet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die StrGet-Funktion kopiert eine Zeichenkette von einer Speicheradresse oder aus einem Puffer (optional mit Codepage-Umwandlung)." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>StrGet</h1>

<p>Kopiert eine Zeichenkette von einer Speicheradresse oder aus einem Puffer (optional mit Codepage-Umwandlung).</p>

<pre class="Syntax">Zkette := <span class="func">StrGet</span>(Quelle <span class="optional">, Länge, Kodierung</span>)
Zkette := <span class="func">StrGet</span>(Quelle <span class="optional">, Kodierung</span>)</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Quelle</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein <a href="Buffer.htm">Buffer</a>-ähnliches Objekt, das die Zeichenkette enthält, oder die Speicheradresse der Zeichenkette.</p>
    <p>Es kann ein beliebiges Objekt mit einer <a href="Buffer.htm#Ptr">Ptr</a>- und <a href="Buffer.htm#Size">Size</a>-Eigenschaft verwendet werden, aber diese Funktion ist für das native <a href="Buffer.htm">Buffer</a>-Objekt optimiert. Die Übergabe eines Objekts mit diesen Eigenschaften stellt sicher, dass die Funktion keinen Speicher aus einem ungültigen Bereich liest, was zu Abstürzen oder anderem unvorhersehbaren Verhalten führen kann.</p>
    <p>Die Zeichenkette muss nicht <a href="../Concepts.htm#null-termination">nullterminiert</a> sein, wenn ein Buffer-ähnliches Objekt bereitgestellt wird oder wenn <em>Länge</em> angegeben ist.</p>
  </dd>

  <dt>Länge</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn weggelassen (oder wenn der 2-Parameter-Modus verwendet wird), wird die aktuelle Länge der Zeichenkette verwendet, sofern die Zeichenkette <a href="../Concepts.htm#null-termination">nullterminiert</a> ist. Andernfalls geben Sie die maximale Anzahl der zu lesenden <a href="../Concepts.htm#character">Zeichen</a> an.</p>
    <p>StrGet kopiert standardmäßig eine Zeichenkette nur bis zur ersten binären Null. Wenn <em>Länge</em> negativ ist, bestimmt dessen Absolutwert die genaue Anzahl der Zeichen, die umgewandelt werden, einschließlich aller binären Nullen, die die Zeichenkette eventuell enthält, d.h. das Ergebnis wird immer eine Zeichenkette mit exakt dieser Länge sein.</p>
    <p class="warning"><strong>Hinweis:</strong> Das Weglassen von <em>Länge</em> bei einer nicht-nullterminierten Zeichenkette kann zu einer Zugriffsverletzung führen, was eine Terminierung des Programms oder andere unerwünschte Nebeneffekte zur Folge hat. Die Angabe einer falschen Länge kann zu unerwartetem Verhalten führen.</p>
  </dd>

  <dt>Kodierung</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn weggelassen, wird die Zeichenkette einfach kopiert, ohne dass eine Umwandlung stattfindet. Andernfalls geben Sie die Quellkodierung an, z.B. <code>"UTF-8"</code>, <code>"UTF-16"</code> oder <code>"CP936"</code>. Für numerische Identifikatoren kann das Präfix "CP" nur im 3-Parameter-Modus weggelassen werden. Geben Sie eine leere Zeichenkette oder <code>"CP0"</code> an, um die Standard-ANSI-Codepage des Systems zu verwenden.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
<p>Diese Funktion gibt die kopierte oder umgewandelte Zeichenkette zurück. Wenn die Quellkodierung korrekt angegeben wurde, verwendet der Rückgabewert immer die <a href="../Concepts.htm#string-encoding">native Kodierung</a>. Die Zeichenkette ist immer <a href="../Concepts.htm#null-termination">nullterminiert</a>, aber der Nullterminator wird nicht zur <a href="StrLen.htm">Länge</a> des Rückgabewertes hinzugezählt, außer wenn <em>Länge</em> negativ ist, wie oben beschrieben.</p>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Es wird ein <a href="Error.htm#ValueError">ValueError</a> ausgelöst, wenn ungültige Parameter erkannt werden.</p>
<p>Es wird ein <a href="Error.htm#OSError">OSError</a> ausgelöst, wenn die Umwandlung nicht durchgeführt werden konnte.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Beachten Sie, dass der Rückgabewert immer in der <a href="../Concepts.htm#string-encoding">nativen Kodierung</a> der aktuellen EXE-Datei von AutoHotkey ist, während <i>Kodierung</i> angibt, wie die gelesene Zeichenkette aus der angegebenen <i>Quelle</i> interpretiert werden soll. Wenn keine <em>Kodierung</em> angegeben ist, wird die Zeichenkette einfach kopiert, ohne dass eine Umwandlung stattfindet.</p>
<p class="note">Mit anderen Worten, StrGet wird verwendet, um Text aus einem Speicherbereich oder Puffer abzurufen oder um Text in ein Format umzuwandeln, das das Skript versteht.</p>
<p>Bei einer Codepage-Umwandlung kann die Länge des Rückgabewerts von der Länge der Quellzeichenkette abweichen.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Concepts.htm#string-encoding">Zeichenkettenkodierung</a>, <a href="StrPut.htm">StrPut</a>, <a href="../Compat.htm">Binärkompatibilität</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="DllCall.htm">DllCall</a>, <a href="Buffer.htm">Buffer-Objekt</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExNumEnc">
<p><a class="ex_number" href="#ExNumEnc"></a> <em>Länge</em> oder <em>Kodierung</em> kann direkt nach <em>Quelle</em> angegeben werden, aber in diesem Fall muss <em>Kodierung</em> nicht-numerisch sein.</p>
<pre>
Zkette := StrGet(Adresse, "cp0")  <em>; Codepage 0, unbestimmte Länge</em>
Zkette := StrGet(Adresse, n, 0)   <em>; Maximal n Zeichen, Codepage 0</em>
Zkette := StrGet(Adresse, 0)      <em>; Maximal 0 Zeichen (immer leer)</em>
</pre>
</div>

</body>
</html>
