<!DOCTYPE HTML>
<html lang="de">
<head>
<title>MouseClickDrag - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die MouseClickDrag-Funktion klickt und hält eine bestimmte Maustaste gedrückt, bewegt den Mauszeiger auf die Zielkoordinaten und lässt die Taste dann wieder los." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>MouseClickDrag</h1>

<p>Klickt und hält eine bestimmte Maustaste gedrückt, bewegt den Mauszeiger auf die Zielkoordinaten und lässt die Taste dann wieder los.</p>

<pre class="Syntax"><span class="func">MouseClickDrag</span> WelcheTaste, X1, Y1, X2, Y2 <span class="optional">, Geschw, Relativ</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>WelcheTaste</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn leer oder weggelassen, wird standardmäßig Left verwendet (die linke Maustaste). Andernfalls geben Sie Left, Right, Middle (oder jeweils nur den ersten Buchstaben) oder X1 (vierte Maustaste) oder X2 (fünfte Maustaste) an. Zum Beispiel: <code>MouseClickDrag "X1", 0, 0, 10, 10</code>.</p>
    <p>Left ist die primäre Maustaste und Right ist die sekundäre Maustaste. Wenn der Benutzer die Maustasten via Systemsteuerung vertauscht hat, sind die physischen Positionen der Maustasten vertauscht, aber der Effekt bleibt derselbe.</p>
  </dd>

  <dt>X1, Y1</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Geben Sie die X- und Y-Koordinate der Position an, von der aus das Ziehen gestartet werden soll (der Mauszeiger wird vor dem Ziehen auf diese Position bewegt). Standardmäßig sind Koordinaten relativ zum Clientbereich des aktiven Fensters, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
    <p><span class="ver">[v2.0.7+]</span>: Wenn sowohl X1 als auch Y1 weggelassen werden, wird die aktuelle Position des Mauszeigers verwendet. Aufgrund eines Bugs waren X1 und Y1 in früheren Versionen Pflichtparameter.</p>
  </dd>

  <dt>X2, Y2</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X- und Y-Koordinate der Position, auf die der Mauszeiger bewegt werden soll, während die Maustaste gedrückt gehalten wird. Standardmäßig sind Koordinaten relativ zum Clientbereich des aktiven Fensters, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>Geschw</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn weggelassen, wird die Standardgeschwindigkeit verwendet (definiert durch <a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a> oder standardmäßig 2). Andernfalls geben Sie an, wie schnell der Mauszeiger bewegt werden soll, von 0 (schnell) bis 100 (langsam). Eine Geschwindigkeit von 0 bewegt den Mauszeiger sofort auf die neue Position.</p>
    <p><em>Geschw</em> wird bei den <a href="SendMode.htm">Modi SendInput und SendPlay</a> ignoriert; sie positionieren den Mauszeiger sofort auf die neuen Koordinaten (allerdings hat <a href="SetMouseDelay.htm">SetMouseDelay</a> einen Modus, der für SendPlay verwendet werden kann). Um den Mauszeiger visuell langsamer zu bewegen (z.B. um einem Publikum etwas vorzuführen), verwenden Sie <code><a href="Send.htm#Click">SendEvent "{Click 100 200}"</a></code> oder <code><a href="SendMode.htm">SendMode</a> "Event"</code> (optional in Verbindung mit <a href="BlockInput.htm">BlockInput</a>).</p>
  </dd>

  <dt>Relativ</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn leer oder weggelassen, werden die X- und Y-Koordinate für die absolute Positionierung verwendet. Andernfalls geben Sie den folgenden Buchstaben an:</p>
    <p><strong>R:</strong> Die X1- und Y1-Koordinate werden als Offsets von der aktuellen Mausposition behandelt. Mit anderen Worten, der Mauszeiger wird von seiner aktuellen Position aus um X1 Pixel nach rechts (nach links, wenn negativ) und um Y1 Pixel nach unten (nach oben, wenn negativ) bewegt. Entsprechend werden die X2- und Y2-Koordinate als Offsets von den Koordinaten X1 und Y1 behandelt. Zum Beispiel würde das Folgende den Mauszeiger von seiner Startposition aus um 5 Pixel nach unten und nach rechts bewegen und dann von dieser Position aus um 10 Pixel nach unten und nach rechts ziehen: <code>MouseClickDrag "Left", 5, 5, 10, 10, , "R"</code>.</p>
  </dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Diese Funktion verwendet den via <a href="SendMode.htm">SendMode</a> gesetzten Send-Modus.</p>
<p>Das Ziehen des Mauszeigers kann auch mit verschiedenen <a href="Send.htm">Send</a>-Funktionen durchgeführt werden, was flexibler ist, da der Modus über den Funktionsnamen angegeben werden kann. Zum Beispiel:</p>
<pre>SendEvent "{Click 6 52 Down}{click 45 52 Up}"</pre>
<p>Ein weiterer Vorteil von dieser Methode ist, dass sie im Gegensatz zu MouseClickDrag automatisch die Vertauschung der linken und rechten Maustaste über die Systemsteuerung kompensieren kann.</p>
<p>Der <a href="SendMode.htm">SendPlay-Modus</a> ist im Gegensatz zu den anderen Modi erfolgreicher darin, Mausereignisse in Videospielen zu erzeugen. Allerdings funktioniert das Ziehen via SendPlay möglicherweise nicht in RichEdit-Steuerelementen wie z.B. WordPad und Metapad.</p>
<p>Einige Anwendungen und Videospiele können Schwierigkeiten haben, dem Mauszeiger zu folgen, wenn er zu schnell bewegt wird. Mit dem <em>Geschw</em>-Parameter oder <a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a> kann die Geschwindigkeit reduziert werden (nur im standardmäßig aktiven <a href="SendMode.htm">SendEvent-Modus</a>).</p>
<p>Die <a href="BlockInput.htm">BlockInput</a>-Funktion kann verwendet werden, um zu verhindern, dass physische Mausaktivitäten des Benutzers die künstlich erzeugten Mausereignisse stören. Allerdings ist das bei den <a href="SendMode.htm">Modi SendInput und SendPlay</a> nicht notwendig, weil sie die physischen Mausaktivitäten des Benutzers automatisch hinauszögern.</p>
<p>Nach jedem DOWN- und UP-Ereignis der Maus erfolgt automatisch eine Verzögerung (außer im <a href="SendMode.htm">SendInput-Modus</a>). Diese Verzögerung tritt auch nach dem Bewegen des Mauszeigers während des Ziehens auf. Mit <a href="SetMouseDelay.htm">SetMouseDelay</a> kann die Verzögerungsdauer geändert werden.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="CoordMode.htm">CoordMode</a>, <a href="SendMode.htm">SendMode</a>, <a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="Click.htm">Click</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="BlockInput.htm">BlockInput</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Klickt und hält die linke Maustaste gedrückt, bewegt den Mauszeiger auf die Zielkoordinaten und lässt die Taste dann wieder los.</p>
<pre>MouseClickDrag "left", 0, 200, 600, 400</pre>
</div>

<div class="ex" id="ExPaint">
<p><a class="ex_number" href="#ExPaint"></a> Öffnet MS Paint und zeichnet ein Häuschen.</p>
<pre>Run "mspaint.exe"
if !WinWaitActive("ahk_class MSPaintApp",, 2)
    return
MouseClickDrag "L", 150, 450, 150, 350
MouseClickDrag "L", 150, 350, 200, 300
MouseClickDrag "L", 200, 300, 250, 350
MouseClickDrag "L", 250, 350, 150, 350
MouseClickDrag "L", 150, 350, 250, 450
MouseClickDrag "L", 250, 450, 250, 350
MouseClickDrag "L", 250, 350, 150, 450
MouseClickDrag "L", 150, 450, 250, 450</pre>
</div>

</body>
</html>
