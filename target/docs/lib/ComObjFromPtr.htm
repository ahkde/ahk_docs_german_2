<!DOCTYPE HTML>
<html lang="de">
<head>
<title>ComObjFromPtr - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die ComObjFromPtr-Funktion wrappt einen rohen IDispatch-Interface-Pointer (COM-Objekt), um ihn für das Skript nutzbar zu machen." />
<meta name="ahk:equiv-v1" content="lib/ComObjActive.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObjFromPtr</h1>

<p>Wrappt einen rohen <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a>-Interface-Pointer (COM-Objekt), um ihn für das Skript nutzbar zu machen.</p>
<pre class="Syntax">ComObj := <span class="func">ComObjFromPtr</span>(DispPtr)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>DispPtr</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein Interface-Pointer ungleich Null für IDispatch oder ein abgeleitetes Interface.</p>
  </dd>

</dl>

<h2 id="Returns">Rückgabewert</h2>
<p>Typ: <a href="ComObject.htm">ComObject</a></p>
<p>Gibt ein Wrapper-Objekt zurück, das den <a href="ComObjType.htm#vt">Variantentyp</a> VT_DISPATCH und den angegebenen Pointer enthält.</p>
<p>Ein Skript kann deutlich besser mit einem COM-Objekt interagieren (via <a href="../Objects.htm#Usage_Objects">Objektsyntax</a>), wenn es gewrappt wurde. Die meisten Skripte müssen dies nicht manuell tun, weil <a href="ComObject.htm">ComObject</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="ComObjGet.htm">ComObjGet</a> und andere COM-Methoden, die ein Objekt zurückgeben, automatisch ein Wrapper-Objekt erstellen.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Das Wrapper-Objekt übernimmt die Verantwortung für die automatische Freigabe des Pointers, falls erforderlich. Diese Funktion versucht, das IDispatch-Interface des Objekts <a href="ComObjQuery.htm">anzufordern</a>; bei Erfolg wird <em>DispPtr</em> sofort freigegeben. Wenn das Skript also beabsichtigt, den Pointer nach dem Aufruf dieser Funktion weiter zu verwenden, muss es zuerst <code><a href="ObjAddRef.htm">ObjAddRef</a>(DispPtr)</code> aufrufen.</p>
<p><b>Bekannte Einschränkung:</b> Jedes Mal, wenn ein COM-Objekt gewrappt wird, wird ein neues Wrapper-Objekt erstellt. Bei Vergleichen und Zuweisungen wie <code>obj1 == obj2</code> und <code>array[obj1] := Wert</code> werden beide Wrapper-Objekte nicht als identisch angesehen, sogar dann, wenn sie das gleiche COM-Objekt enthalten.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="ComObject.htm">ComObject</a>, <a href="ComValue.htm">ComValue</a>, <a href="ComObjGet.htm">ComObjGet</a>, <a href="ComObjConnect.htm">ComObjConnect</a>, <a href="ComObjFlags.htm">ComObjFlags</a>, <a href="ObjAddRef.htm">ObjAddRef/ObjRelease</a>, <a href="ComObjQuery.htm">ComObjQuery</a>, <a href="https://msdn.microsoft.com/de-de/library/ms221467.aspx">GetActiveObject (MSDN)</a></p>

</body>
</html>
