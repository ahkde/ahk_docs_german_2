<!DOCTYPE HTML>
<html lang="de">
<head>
<title>HotIf - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die HotIf-Funktion spezifiziert die Kriterien für danach erstellte oder modifizierte Hotkey-Varianten." />
<meta name="ahk:equiv-v1" content="lib/Hotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>HotIf / HotIfWin</h1>

<p>Spezifiziert die Kriterien für danach erstellte oder modifizierte Hotkey-<a href="Hotkey.htm#variant">Varianten</a>.</p>
<p>Inhaltsverzeichnis:</p>
<ul>
  <li><a href="#If">HotIf</a></li>
  <li><a href="#IfWin">HotIfWin...</a></li>
  <li><a href="#remarks">Allgemeine Bemerkungen</a></li>
  <li><a href="#examples">Beispiele</a></li>
</ul>

<h2 id="If">HotIf</h2>
<pre class="Syntax">
<span class="func">HotIf</span> <span class="optional">"Ausdruck"</span>
<span class="func">HotIf</span> <span class="optional">Funktion</span>
</pre>

<h3 id="HotIf_Parameters">Parameter</h3>
<dl>

  <dt id="if-blank">(Parameter weglassen)</dt>
  <dd><p>Setzt leere Kriterien (deaktiviert die Kontextabhängigkeit).</p></dd>

  <dt id="if-expr">"Ausdruck"</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Setzt die Kriterien auf einen existierenden <a href="_HotIf.htm">#HotIf</a>-Ausdruck. <em>Ausdruck</em> muss normalerweise eine <a href="../Language.htm#strings">in Anführungszeichen gesetzte Zeichenkette</a> sein - oder eine Variable, die Text enthält, oder ein Ausdruck, der Text zurückgibt, deren Texte mit einem #HotIf-Ausdruck übereinstimmen müssen. Zwar kann diese Funktion keine neuen Ausdrücke erstellen, allerdings kann sie neue Hotkeys unter Verwendung eines vorhandenen Ausdrucks erstellen. Siehe <a href="_HotIf.htm#ExDynamic">#HotIf-Beispiel #5</a>.</p>
    <p class="note"><strong>Hinweis</strong>: Die HotIf-Funktion benutzt die Zeichenkette, die Sie ihr gegeben haben, nicht den ursprünglichen Quellcode. <a href="../misc/EscapeChar.htm">Escapesequenzen</a> werden aufgelöst, während das Skript geladen wird, demzufolge werden nur die resultierenden Zeichen berücksichtigt; zum Beispiel sind <code>HotIf 'x = "`t"'</code> und <code>HotIf 'x = "' A_Tab '"'</code> das gleiche wie <code>#HotIf x = "`t"</code>.</p>
  </dd>
  
  <dt id="if-func">Funktion</dt>
  <dd>
    <p>Typ: <a href="../misc/Functor.htm">Funktionsobjekt</a></p>
    <p>Setzt die Kriterien auf ein bestimmtes Funktionsobjekt. Danach erstellte Hotkeys werden nur ausgeführt, wenn der Aufruf des angegebenen Funktionsobjekts eine Zahl ungleich 0 zurückgibt. Das ist wie <code>HotIf "Ausdruck"</code>, außer dass jeder Hotkey mehrere <a href="Hotkey.htm#variant">Varianten</a> haben kann (eine pro Objekt). <em>Funktion</em> muss ein Objekt mit einer <em>Call</em>-Methode sein, die einen Parameter akzeptiert - den <a href="../Hotkeys.htm#ThisHotkey">Namen</a> des Hotkeys.</p>
    <p>Sobald das Objekt an die HotIf-Funktion übergeben wurde, wird es nie gelöscht (aber Speicher vom Betriebssystem zurückgefordert, wenn der Prozess beendet wird).</p>
    <p>Das <a href="Hotkey.htm#ExampleIfFn">Hotkey-Beispiel "Drei-Tasten-Kombination"</a> benutzt diesen Modus von HotIf.</p>
  </dd>

</dl>

<h2 id="IfWin">HotIfWin...</h2>
<pre class="Syntax">
<span class="func">HotIfWinActive</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">HotIfWinExist</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">HotIfWinNotActive</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">HotIfWinNotExist</span> <span class="optional">FensterTitel, FensterText</span>
</pre>

<h3 id="HotIfWin_Parameters">Parameter</h3>
<dl>

  <dt>(alle Parameter weglassen)</dt>
  <dd><p>Setzt leere Kriterien (deaktiviert die Kontextabhängigkeit).</p></dd>

  <dt>FensterTitel, FensterText</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Spezifiziert den Fenstertitel und andere Kriterien zum Identifizieren eines Fensters. Je nach aufgerufener Funktion sind die betroffenen Hotkeys und Hotstrings nur aktiv, wenn das Fenster aktiv ist, existiert, nicht aktiv ist oder nicht existiert.</p>
    <p>Da die Parameter ausgewertet werden, bevor die Funktion aufgerufen wird, wird jede Variablenreferenz zu diesem Zeitpunkt dauerhaft wirksam. Mit anderen Worten: Spätere Änderungen am Inhalt der Variablen werden von bestehenden Hotkeys nicht berücksichtigt.</p>
    <p><em>FensterTitel</em> und <em>FensterText</em> haben die gleiche Bedeutung wie bei <a href="WinActive.htm">WinActive</a> oder <a href="WinExist.htm">WinExist</a>, allerdings ist zu beachten, dass nur Zeichenketten verwendet werden können und dass sie gemäß den via <a href="../Scripts.htm#auto">Auto-Execute-Thread</a> gesetzten Standardeinstellungen von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> und <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgewertet werden. Weitere Informationen finden Sie unter <a href="../misc/WinTitle.htm">FensterTitel</a>.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Es wird eine Ausnahme ausgelöst, wenn der Parameter von HotIf ungültig ist, z. B. wenn er nicht mit einem vorhandenen Ausdruck übereinstimmt und keine gültige Callback-Funktion ist.</p>

<h2 id="remarks">Allgemeine Bemerkungen</h2>
<p>HotIf erlaubt das Erstellen oder Ändern von kontextabhängigen <a href="../Hotkeys.htm">Hotkeys</a>, während das Skript läuft (die <a href="_HotIf.htm">#HotIf</a>-Direktive ist hingegen von der Position abhängig und wird bereits vor dem Ausführen des Skripts wirksam). Zum Beispiel:</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!e", MeineFunkFürNotepad  <em>; Erstellt einen Hotkey, der nur im Texteditor funktioniert.</em></pre>
<p>Das Verwenden von HotIf macht alle danach erstellten <a href="../Hotkeys.htm">Hotkeys</a> im aktuellen <a href="../misc/Threads.htm">Thread</a> kontextabhängig und hat Einfluss darauf, welche Hotkey-Varianten die <a href="Hotkey.htm">Hotkey</a>-Funktion modifiziert. Nur der jüngste Aufruf einer der HotIf-Funktionen im aktuellen Thread ist wirksam.</p>
<p>Um die Kontextabhängigkeit zu deaktivieren (so dass zum Beispiel danach erstellte Hotkeys für alle Fenster gelten), rufen Sie eine beliebige HotIf-Funktion ohne Parameter auf. Zum Beispiel: <code>HotIf</code> oder <code>HotIfWinActive</code>.</p>
<p>Bevor man HotIf in einem Hotkey- oder Hotstring-<a href="../misc/Threads.htm">Thread</a> verwendet, gelten für die Hotkey- und Hotstring-Funktionen standardmäßig der Kontext des Hotkeys oder Hotstrings, der den Thread gestartet hat. Mit anderen Worten: <code>Hotkey A_ThisHotkey, "Off"</code> deaktiviert den aktuellen Hotkey, selbst wenn er kontextabhängig ist. Alle anderen Threads erstellen oder modifizieren standardmäßig globale Hotkeys, es sei denn, man überschreibt dieses Standardverhalten mithilfe von HotIf während der <a href="../Scripts.htm#auto">Startphase des Skripts</a>.</p>
<p>Wenn ein Maus- oder Tastatur-Hotkey via HotIf-Funktion oder Direktive deaktiviert wurde, wird er seine ursprüngliche Funktion durchführen; das heißt, dass er an das aktive Fenster übergeben wird, als gäbe es diesen Hotkey nicht. Joystick-Hotkeys werden allerdings immer übergeben, egal ob sie deaktiviert sind oder nicht.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Hotkey.htm">Hotkey</a> (Funktion), <a href="../Hotkeys.htm">Hotkeys</a> (allgemein), <a href="_HotIf.htm">#HotIf</a>, <a href="../misc/Threads.htm">Threads</a></p>

<h2 id="examples">Beispiele</h2>
<p>Beispiele finden Sie unter <a href="Hotkey.htm#examples">Hotkey</a>.</p>

</body>
</html>
