<!DOCTYPE HTML>
<html lang="de">
<head>
<title>WinWaitActive / WinWaitNotActive - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Funktionen WinWaitActive und WinWaitNotActive warten, bis ein bestimmtes Fenster aktiv oder nicht aktiv ist." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>WinWaitActive / WinWaitNotActive</h1>

<p>Wartet, bis ein bestimmtes Fenster aktiv oder nicht aktiv ist.</p>

<pre class="Syntax"><span class="func">WinWaitActive</span> <span class="optional">FensterTitel, FensterText, Zeitlimit, AusnahmeTitel, AusnahmeText</span>
<span class="func">WinWaitNotActive</span> <span class="optional">FensterTitel, FensterText, Zeitlimit, AusnahmeTitel, AusnahmeText</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a>, <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Objects.htm">Objekt</a></p>
    <p>Wenn jeder dieser Parameter ungesetzt ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet. Andernfalls geben Sie für <em>FensterTitel</em> ein <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" aufgedeckt werden). Versteckte Textelemente werden erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet wurde. Fenster, deren Titel oder Texte <em>AusnahmeTitel</em> bzw. <em>AusnahmeText</em> enthalten, werden ignoriert.</p>
  </dd>

  <dt>Zeitlimit</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
    <p>Die zu wartenden Sekunden, bevor eine Zeitüberschreitung erfolgt und 0 zurückgegeben wird. Lassen Sie diesen Parameter weg oder leer, um die Funktion unendlich lang warten zu lassen.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>WinWaitActive gibt die <a href="../misc/WinTitle.htm#ahk_id">HWND-Nummer (eindeutige ID)</a> des aktiven Fensters zurück, wenn es mit den Kriterien übereinstimmt, oder eine 0, wenn die Funktion das Zeitlimit überschritten hat.</p>
<p>WinWaitNotActive gibt eine 1 zurück, wenn das aktive Fenster nicht mit den Kriterien übereinstimmt, oder eine 0, wenn die Funktion das Zeitlimit überschritten hat.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Die Funktion hört bereits auf zu warten, wenn ein aktives Fenster gefunden wird, und nicht erst, wenn <em>Zeitlimit</em> abgelaufen ist. In diesem Fall wird sofort die Ausführung des Skripts fortgesetzt.</p>
<p>Da <code>"A"</code> mit dem jeweils aktiven Fenster übereinstimmt, wartet <code>WinWaitNotActive "A"</code> normalerweise unendlich lang. Um stattdessen zu warten, bis ein anderes Fenster aktiv wird, geben Sie wie folgt dessen eindeutige ID an:</p>
<pre>WinWaitNotActive WinExist("A")</pre>
<p>Sowohl WinWaitActive als auch WinWaitNotActive werden das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a> aktualisieren, wenn zu Beginn der Funktion ein passendes Fenster aktiv ist oder wenn eines aktiv wird, während die Funktion wartet.</p>
<p>Während die Funktion im Wartezustand ist, können neue <a href="../misc/Threads.htm">Threads</a> via <a href="../Hotkeys.htm">Hotkeys</a>, <a href="Menu.htm">benutzerdefinierte Menüpunkte</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
<p>Wenn ein anderer <a href="../misc/Threads.htm">Thread</a> die Inhalte von Variablen, die die Funktion als Parameter verwendet, zwischendurch ändert, wird die Funktion diese Änderung ignorieren, d.h. die Funktion verwendet weiterhin den Titel und Text, die ursprünglich in den Variablen vorhanden waren, als die Funktion zum ersten Mal zu warten begann.</p>
<p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="WinWait.htm">WinWait</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="WinExist.htm">WinExist</a>, <a href="WinActive.htm">WinActive</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Öffnet Notepad und wartet maximal 2 Sekunden, bis es aktiv ist. Wenn WinWait das Zeitlimit überschreitet, wird eine Fehlermeldung angezeigt, andernfalls wird Notepad minimiert.</p>
<pre>Run "notepad.exe"
if WinWaitActive("Unbenannt - Editor", , 2)
    WinMinimize <em>; Verwendet das von WinWaitActive gefundene Fenster.</em>
else
    MsgBox "WinWaitActive hat das Zeitlimit überschritten."
</pre>
</div>
</body>
</html>
