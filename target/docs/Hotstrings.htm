<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Hotstrings - Definition &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Erfahren Sie mehr über Hotstrings im Allgemeinen, Endungszeichen, Optionen, lange Ersetzungen, kontextabhängige Hotstrings, Funktions-Hotstrings, etc." />
<meta name="keywords" content="auto-replace,autotext,autocorrect,auto text,auto correct,abbreviation expansion,abbreviation,abbreviations,autoreplace,auto replace,text,expander,free,type,typing,word,words,auto-ersetzen,abkürzungserweiterung,abkürzung,abkürzungen,kostenlos,eingeben,eingabe,wort,wörter">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
<script src="static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Hotstrings</h1>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#intro">Einführung und einfache Beispiele</a></li>
  <li><a href="#EndChars">Endungszeichen</a></li>
  <li><a href="#Options">Optionen</a></li>
  <li><a href="#continuation">Lange Ersatztexte</a></li>
  <li><a href="#variant">Kontextabhängige Hotstrings</a></li>
  <li><a href="#AutoCorrect">AutoCorrect</a></li>
  <li><a href="#remarks">Bemerkungen</a></li>
  <li><a href="#Function">Benannte Funktions-Hotstrings</a></li>
  <li><a href="#Helper">Hotstring Helper</a></li>
</ul>

<h2 id="intro">Einführung und einfache Beispiele</h2>
<p>Hotstrings werden genutzt, um geschriebene Abkürzungen in lange Texte umzuwandeln (kurz Auto-Ersetzen) oder um eine gekriptete Aktion zu starten. Grundsätzlich verhalten sich Hotstrings wie <a href="Hotkeys.htm">Hotkeys</a>, außer dass sie üblicherweise aus mehr als einem Zeichen bestehen (also eine Zeichenkette).</p>
<p>Um einen Hotstring zu definieren, umschließen Sie wie folgt die Abkürzung, die ausgelöst werden soll, mit Doppelpunkt-Paaren:</p>
<pre>::bzw::beziehungsweise</pre>
<p>Das Beispiel oben bewirkt, dass die Abkürzung bzw automatisch mit "beziehungsweise" ersetzt wird, sobald Sie sie eingeben (allerdings muss nach dieser Abkürzung standardmäßig ein <a href="#EndChars">Endungszeichen</a> wie <kbd>Leer</kbd>, <kbd>.</kbd> oder <kbd>Enter</kbd> erfolgen).</p>
<p id="auto">Das "beziehungsweise"-Beispiel oben ist ein sogenannter automatisch-ersetzender Hotstring, weil der eingegebene Text automatisch gelöscht und mit der angegebenen Zeichenkette nach dem zweiten Doppelpunkt-Paar ersetzt wird. Ein Hotstring kann auch definiert werden, um eine beliebige benutzerdefinierte Aktion wie in den folgenden Beispielen durchführen zu lassen. Beachten Sie, dass die Funktionen <u>unterhalb</u> des Hotstrings angegeben werden müssen:</p>
<pre>::bzw::
{
    MsgBox 'Sie haben "bzw" eingegeben.'
}

:*:]d::  <em>; Dieser Hotstring ersetzt "]d" mit dem heutigen Datum und der aktuellen Uhrzeit.</em>
{
    SendInput <a href="lib/FormatTime.htm">FormatTime</a>(, "d.M.yyyy HH:mm")  <em>; z. B. 21.6.2011 15:10</em>
}</pre>
<p>Die geschweiften Klammern haben die gleiche Bedeutung wie bei <a href="Hotkeys.htm#Intro">Hotkeys</a>.</p>
<p>Obwohl die beiden Beispiele oben keine automatisch-ersetzende Hotstrings sind, wird auch hier die eingegebene Abkürzung standardmäßig gelöscht. Dieses Löschen erfolgt durch automatisches Backspacing (wiederholtes Löschen des letzten Zeichens), was mit der <a href="#b0">b0-Option</a> deaktiviert werden kann.</p>

<h2 id="EndChars">Endungszeichen</h2>
<p>Um einen Hotstring auszulösen, müssen Sie standardmäßig nach Eingabe der Abkürzung ein <em>Endungszeichen</em> eingeben (was aber mit der <a href="#Asterisk">Sternchen-Option</a> geändert werden kann). Zu den Endungszeichen gehören zunächst die folgenden: <strong>-()[]{}':;"/\,.?!`n `t</strong> (`n ist <kbd>Enter</kbd> und `t ist <kbd>Tab</kbd>; zwischen `n und `t befindet sich ein Leerzeichen). Dieser vordefinierte Zeichensatz kann mit dem folgenden Beispiel geändert werden; beachten Sie aber, dass die neuen Endungszeichen für <u>alle</u> Hotstrings gesetzt werden, nicht nur für Hotstrings, die danach erfolgen:</p>
<pre>#Hotstring EndChars -()[]{}:;'"/\,.?!`n `t</pre>
<p>Die Endungszeichen können geändert werden, während das Skript läuft, indem man die <a href="lib/Hotstring.htm">Hotstring</a>-Funktion wie folgt aufruft:</p>
<pre>Hotstring("EndChars", "-()[]{}:;")</pre>

<h2 id="Options">Optionen</h2>
<p>Es gibt zwei Möglichkeiten, wie man das Standardverhalten eines Hotstrings ändern kann:</p>
<ol>
  <li>Die <a href="lib/_Hotstring.htm">#Hotstring</a>-Direktive, die alle Hotstrings beeinflusst, die sich im Skript physisch darunter befinden. Das folgende Beispiel zeigt, wie man die Optionen C und R aktivieren kann: <code>#Hotstring <strong>c r</strong></code>.</li>
  <li>Optionen im ersten Doppelpunktpaar des Hotstrings einfügen. Das folgende Beispiel zeigt, wie man die Optionen C und * (Groß-/Kleinschreibung-sensitiv und "ohne Endungszeichen auslösbar") für einen einzelnen Hotstring wirksam machen kann: <code>:<strong>c*</strong>:j@::john@somedomain.com</code>.</li>
</ol>
<p>Die folgende Liste beschreibt die einzelnen Optionen. Mehrere Optionen können optional mit Leerzeichen voneinander getrennt werden.</p>
<p id="Asterisk"><strong>*</strong> (Sternchen): Der Hotstring kann ohne Endungszeichen (z. B. <kbd>Leer</kbd>, <kbd>.</kbd> oder <kbd>Enter</kbd>) ausgelöst werden. Zum Beispiel:</p>
<pre>:*:j@::jsmith@somedomain.com</pre>
<p>Das Beispiel oben hat den Effekt, dass die Abkürzung mit dem angegebenen Text ersetzt wird, sobald Sie das @-Zeichen eingegeben haben. Verwendet man die <a href="lib/_Hotstring.htm">#Hotstring-Direktive</a>, muss <strong>*0</strong> angegeben werden, um diese Option wieder zu deaktivieren.</p>
<p id="Question"><strong>?</strong> (Fragezeichen): Bewirkt, dass der Hotstring immer ausgelöst wird, egal ob er sich in einem anderen Wort befindet oder nicht; das heißt, dass das davor eingegebene Zeichen alphanumerisch sein kann. Zum Beispiel hätte <code>:?:de::Deutschland</code> den Effekt, dass, sobald man "Fahrstunde " eingegeben hat, "FahrstunDeutschland " erzeugt wird. Mit <strong>?0</strong> kann diese Option wieder deaktiviert werden.</p>
<p id="b0"><strong>B0</strong> (B gefolgt von einer Null): Bewirkt, dass die eingegebene Abkürzung <u>nicht</u> via automatisches Backspacing (wiederholtes Löschen des letzten Zeichens) gelöscht wird. Mit einem einfachen <strong>B</strong> kann das Backspacing, falls es zuvor deaktiviert war, wieder aktiviert werden. Mit {bs 5}, das <kbd>Backspace</kbd> fünfmal sendet, kann ein Skript das Backspacing selbst durchführen. Mit {left 5} kann <kbd>←</kbd> fünfmal gesendet werden. Der folgende Hotstring beispielsweise erzeugt "&lt;em&gt;&lt;/em&gt;" und verschiebt den Textcursor 5 Stellen nach links (so dass er genau zwischen den Tags liegt):</p>
<pre>:*b0:&lt;em&gt;::&lt;/em&gt;{left 5}</pre>
<p id="C"><strong>C</strong>: Groß-/Kleinschreibung-sensitiv: Bewirkt, dass der Hotstring nur ausgelöst wird, wenn die Groß- und Kleinschreibung der eingegebenen Abkürzung mit der im Skript definierten Variante übereinstimmt. Mit <strong>C0</strong> kann diese Option wieder deaktiviert werden.</p>
<p id="C1"><strong>C1</strong>: Der Hotstring passt sich nicht der eingegebenen Groß- und Kleinschreibung an. Verwenden Sie diese Option, um <a href="#auto">automatisch-ersetzende Hotstrings</a> nicht-Groß-/Kleinschreibung-sensitiv zu machen und sie daran zu hindern, sich nach der Groß- und Kleinschreibung der eingegebenen Zeichen zu richten. Hotstrings, die Groß- und Kleinschreibung berücksichtigen (die Standardeinstellung), würden ihren Text in Großbuchstaben erzeugen, wenn die eingegebene Abkürzung auch in Großbuchstaben wäre. Würde man den ersten Buchstaben großschreiben, wäre der erste Buchstabe des Ersatztextes auch großgeschrieben (sofern es ein Buchstabe ist). Wenn die Groß- und Kleinschreibung auf irgendeine andere Weise erfolgt, wird der Ersatztext, so wie er definiert wurde, gesendet. Verwendet man die <a href="lib/_Hotstring.htm">#Hotstring-Direktive</a>, muss <strong>C0</strong> angegeben werden, um diese Option wieder zu deaktivieren.</p>
<p id="Kn"><strong>Kn</strong>: Tastenverzögerung: Diese selten verwendete Option bestimmt die Verzögerung zwischen den Tastendrücken, die via Auto-Backspacing oder <a href="#auto">Auto-Ersetzen</a> erzeugt werden. Geben Sie für <strong>n</strong> die neue Verzögerung an; zum Beispiel kann k10 angegeben werden, um eine Verzögerung von 10 ms zu bewirken, und k-1, um die Verzögerung zu deaktivieren. Das genaue Verhalten dieser Option hängt davon ab, welcher <a href="#SendMode">Send-Modus</a> aktiv ist:</p>
<ul>
  <li>SI (SendInput): Die Tastenverzögerung wird ignoriert, da in diesem Modus keine Verzögerung möglich ist. Die Ausnahme hiervon ist, wenn SendInput <a href="lib/Send.htm#SendInputUnavail">nicht verfügbar</a> ist, dann greifen die Hotstrings auf den unten genannten SendPlay-Modus zurück (der die Tastenverzögerung berücksichtigen wird).</li>
  <li>SP (SendPlay): Standardmäßig gilt eine Verzögerung von 0 ms, das bei SendPlay das gleiche ist wie -1 (keine Verzögerung). In diesem Modus ist die Verzögerung eher die <a href="lib/SetKeyDelay.htm#dur">DruckDauer</a>, als die Verzögerung zwischen den Tastendrücken.</li>
  <li>SE (SendEvent): Standardmäßig gilt eine Verzögerung von 0 ms. Eine Verzögerung von 0 ms wird für die meisten Zwecke empfohlen, weil sie kurz und dennoch gut mit anderen Prozessen kooperieren kann (aufgrund der internen Durchführung von <a href="lib/Sleep.htm">Sleep 0</a>). Geben Sie k-1 an, um die Verzögerung komplett zu deaktivieren; dies ist z. B. nützlich, um Auto-Ersetzungen zu beschleunigen, falls Ihre CPU des Öfteren stark belastet wird. Wenn die Verzögerung auf -1 gesetzt wurde, wird die Prozesspriorität des Skripts dahingehend ein wichtiger Faktor sein, wie schnell es Tastendrücke senden kann. Mit <code><a href="lib/ProcessSetPriority.htm">ProcessSetPriority</a> "High"</code> kann die Priorität eines Skripts erhöht werden.</li>
</ul>
<p id="O"><strong>O</strong>: Verhindert, dass beim Erstellen des Ersatztextes das Endungszeichen von <a href="#auto">automatisch-ersetzenden Hotstrings</a> enthalten ist. Diese Option ist nützlich, wenn ein Hotstring weiterhin via Endungszeichen ausgelöst werden soll, ohne dass dieses Endungszeichen tatsächlich auf dem Bildschirm zu sehen ist. Zum Beispiel hätte <code>:o:ar::Aristokrat</code> den Effekt, dass, sobald man "ar" gefolgt von einem Leerzeichen eingegeben hat, "Aristokrat" ohne Leerzeichen am Ende erzeugen wird, dadurch kann das Wort in den Plural oder Kasus gesetzt werden, ohne <kbd>Backspace</kbd> verwenden zu müssen. Mit <strong>O0</strong> (Buchstabe O gefolgt von einer Null) kann diese Option wieder deaktiviert werden.</p>
<p id="Pn"><strong>Pn</strong>: Die <a href="misc/Threads.htm">Priorität</a> des Hotstrings (z. B. P1). Diese selten verwendete Option funktioniert nicht bei <a href="#auto">automatisch-ersetzenden Hotstrings</a>.</p>
<p id="raw"><strong>R</strong>: Bewirkt, dass der Ersatztext im <a href="lib/Send.htm#SendRaw">Rohzustand</a> gesendet wird; das heißt, dass keine Umwandlung von {Enter} zu <kbd>Enter</kbd>, ^c zu <kbd>Strg</kbd>+<kbd>C</kbd> und so weiter erfolgt. Diese Option kann mit <strong>R0</strong> deaktiviert oder mit <strong>T</strong> überschrieben werden.</p>
<p class="note"><strong>Hinweis:</strong> Der <a href="#T">Text-Modus</a> ist eventuell zuverlässiger. Die Optionen R und T schließen sich gegenseitig aus.</p>
<p id="SuspendExempt"><strong>S</strong> oder <strong>S0</strong>: Geben Sie den Buchstaben S an, um den Hotkey vor einer <a href="lib/Suspend.htm">Suspension</a> zu <a href="lib/_SuspendExempt.htm">schützen</a>. Geben Sie S0 (S mit der Zahl 0) an, um den Schutz zu entfernen, sodass der Hotstring wieder suspendiert werden kann. Wenn diese Option als Standardoption festgelegt ist, wird der Hotstring entweder durch <code>S</code> oder <code>#SuspendExempt</code> vor einer Suspension geschützt; um die Direktive also zu überschreiben, muss <code>S0</code> explizit im Hotstring verwendet werden.</p>
<p id="SendMode"><strong>SI</strong> oder <strong>SP</strong> oder <strong>SE</strong>: Bestimmt den Modus, mit dem die <a href="#auto">automatisch-ersetzenden Hotstrings</a> ihre Tastendrücke senden sollen. Diese Optionen schließen sich gegenseitig aus; das heißt, dass nur eine Option zur selben Zeit aktiv sein kann. Die folgende Liste beschreibt die einzelnen Optionen:</p>
<ul>
  <li>SI steht für <a href="lib/Send.htm#SendInputDetail">SendInput</a>. Dieser Modus ist in der Regel schneller und zuverlässiger als die anderen Modi. Außerdem hat SendInput den Vorteil (so wie es auch bei SendPlay der Fall ist), dass alles, was Sie eingeben, nach hinten verschoben wird, während ein Hotstring ein <a href="#auto">Auto-Ersetzen</a> durchführt. Dadurch wird verhindert, dass die Tastendrücke des Benutzers mit denen des Ersatztextes vermischt werden. Wenn SendInput <a href="lib/Send.htm#SendInputUnavail">nicht zur Verfügung steht</a>, greifen Hotstrings stattdessen auf SendPlay zurück.</li>
  <li>SP steht für <a href="lib/Send.htm#SendPlayDetail">SendPlay</a>. Dieser Modus erhöht die Chance, dass Hotstrings in einigen Videospielen funktionieren werden.</li>
  <li>SE steht für <a href="lib/Send.htm#SendEvent">SendEvent</a>.</li>
</ul>
<p>SendInput ist der Standardmodus, der mit den oben genannten Optionen überschrieben werden kann. Beachten Sie aber, dass im Gegensatz zur SI-Option SendEvent statt SendPlay verwendet wird, falls SendInput nicht zur Verfügung steht.</p>
<p id="T"><strong>T</strong>: Sendet den Ersatztext im <a href="lib/Send.htm#SendText">Text-Modus</a>. Das heißt, dass jedes Zeichen via Zeichencode gesendet wird, ohne dass {Enter} in <kbd>Enter</kbd>, ^c in <kbd>Strg</kbd>+<kbd>C</kbd> und so weiter übersetzt wird und ohne dass ein Zeichen in einen Tastendruck übersetzt wird. Diese Option tritt bei Hotstrings, die einen <a href="#continuation">Fortsetzungsbereich</a> haben, automatisch in Kraft. Diese Option kann mit <strong>T0</strong> oder <strong>R0</strong> deaktiviert oder mit <strong>R</strong> überschrieben werden.</p>
<p id="X"><strong>X</strong>: Execute (Ausführen). Anstelle eines Ersatztextes akzeptiert der Hotstring einen Funktionsaufruf oder Ausdruck, den er ausführen kann. <code>:X:~mb::MsgBox</code> beispielsweise würde bewirken, dass ein Mitteilungsfenster angezeigt wird, wenn der Benutzer "~mb" schreibt, anstatt den Text mit dem Wort "MsgBox" automatisch zu ersetzen. Das ist besonders nützlich, wenn man eine große Anzahl von Hotstrings definiert, die Funktionen aufrufen, da sonst drei Zeilen pro Hotstring notwendig wären.</p>
<p>Diese Option sollte nicht mit der <a href="lib/Hotstring.htm">Hotstring</a>-Funktion verwendet werden. Damit ein Hotstring beim Auslösen eine Funktion aufruft, übergeben Sie die Funktion per Referenz.</p>
<p id="z"><strong>Z</strong>: Diese selten verwendete Option setzt die Hotstring-Erkennung jedes Mal zurück, wenn der Hotstring ausgelöst wird. Das heißt, dass das Skript auf einen völlig neuen Hotstring wartet und dass alles, was Sie zuvor eingegeben haben, verworfen wird. Dadurch wird verhindert, dass Hotstrings unbeabsichtigt ausgelöst werden können. Schauen Sie sich dazu das folgende Beispiel an:</p>
<pre>:b0*?:11::
{
    SendInput "xx"
}</pre>
<p>Wenn Sie mit diesem Beispiel drei aufeinanderfolgende Einsen (111) schreiben, wird der Hotstring zweimal ausgelöst, weil die mittlere 1 sowohl das <em>letzte</em> Zeichen vom ersten Auslösen als auch das <em>erste</em> Zeichen vom zweiten Auslösen ist. Sobald Sie den Buchstaben Z vor b0 einfügen, müssten Sie vier statt drei Einsen eingeben, um den Hotstring zweimal auslösen zu können. Mit <strong>Z0</strong> kann diese Option wieder deaktiviert werden.</p>
<h2 id="continuation">Lange Ersatztexte</h2>
<p>Wenn der Ersatztext eines Hotstrings relativ lang ist, kann er via <a href="Scripts.htm#continuation">Fortsetzungsbereich</a> in mehreren kurzen Zeilen aufgeteilt werden, um die Übersichtlichkeit und Wartbarkeit des Skripts zu erhöhen. Zum Beispiel:</p>
<pre>::text1::
(
Der gesamte Text zwischen der oberen und unteren Klammer wird als direkt geschriebener Text behandelt.
Standardmäßig bleibt das CR-Zeilenumbruchszeichen (Enter) zwischen der vorherigen und dieser Zeile erhalten.
    Standardmäßig bleibt die Einrückung (Tabulator) auf der linken Seite dieser Zeile erhalten.
)</pre>
<p>Siehe <a href="Scripts.htm#continuation">Fortsetzungsbereich</a>, wie diese Standardverhalten geändert werden können. Ein Fortsetzungsbereich führt außerdem dazu, dass der Hotstring standardmäßig den <a href="#T">Text-Modus</a> verwendet. Dieses Sonderverhalten kann nur überschrieben werden, wenn man bei jedem Hotstring, der ein Fortsetzungsbereich hat, eine gegensätzliche Option angibt (z. B. <code>:t0:text1::</code> oder <code>:r:text2::</code>).</p>
<h2 id="variant">Kontextabhängige Hotstrings</h2>
<p>Mit der <a href="lib/_HotIf.htm">#HotIf</a>-Direktive können bestimmte Hotstrings kontextabhängig gemacht werden. Solche Hotstrings werden je nach Bedingung (z. B. Typ des aktiven Fensters) unterschiedliche Ersatztexte senden, andere Aktionen ausführen oder überhaupt nichts tun. Zum Beispiel:</p>
<pre>#HotIf WinActive("ahk_class Notepad")
::bzw::Dieser Ersatztext wird nur im Texteditor erscheinen.
#HotIf
::bzw::Dieser Ersatztext erscheint nur in einem Fenster, das nicht der Texteditor ist.</pre>

<h2 id="AutoCorrect">AutoCorrect</h2>
<p>Das folgende Skript zeigt, wie Hotstrings zum Korrigieren von ca. 4700 häufig vorkommenden englischen Rechtschreibfehlern benutzt werden können. Mit dem Hotkey <kbd>Win</kbd>+<kbd>H</kbd> können weitere Rechtschreibfehler hinzugefügt werden:</p>
<p>Download: <a href="https://www.autohotkey.com/download/AutoCorrect.ahk">AutoCorrect.ahk</a> (127 KB)</p>
<p>Autor: <a href="http://www.biancolo.com/blog/autocorrect/">Jim Biancolo</a> und <a href="https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings">Wikipedia's Lists of Common Misspellings</a></p>

<h2 id="remarks">Bemerkungen</h2>
<p>Aktuell werden innerhalb des Ersatztextes keine <a href="Variables.htm#Expressions">Ausdrücke</a> unterstützt. Um das zu umgehen, dürfen keine <a href="#auto">automatisch-ersetzende</a> Hotstrings benutzt werden. Schreiben Sie stattdessen eine <a href="lib/Send.htm#SendInput">SendInput</a>-Funktion unter der Abkürzung, gefolgt von einer Zeile, die nur das Wort Return enthält.</p>
<p>Leer- oder Tabulatorzeichen am Ende des Ersatztextes werden standardmäßig verworfen. Damit sie trotzdem gesendet werden, muss ein weiteres Zeichen, ein umgekehrtes Häkchen (`), hinzugefügt werden. Zum Beispiel:</p>
<pre>:*:bzw::beziehungsweise `</pre>
<p id="ReplaceBrace">Bei einem automatisch-ersetzenden Hotstring, der nicht den <a href="#T">Text</a>- oder <a href="#raw">Raw</a>-Modus verwendet, muss im Ersatztext ein alleinstehendes <code>{</code> oder eines, das nur Leerraumzeichen davor hat, mit geschweiften Klammern umschlossen werden, zum Beispiel <code>:*:brace::{{}</code> und <code>:*:space_brace:: {{}</code>. Ansonsten wird sie als geschweifte Startklammer für die Funktion des Hotstrings interpretiert, um den <a href="lib/Block.htm#otb">OTB-Style (One True Brace)</a> zu unterstützen.</p>
<p id="NoMouse">Standardmäßig wird ein linker oder rechter Mausklick die Hotstring-Erkennung zurücksetzen. Das heißt, dass das Skript auf einen völlig neuen Hotstring warten und dass alles, was Sie zuvor eingegeben haben, verworfen wird (wenn das unerwünscht ist, muss die Zeile <code><a href="lib/_Hotstring.htm">#Hotstring</a> NoMouse</code> irgendwo im Skript eingefügt werden). Dieses "Zurücksetzen bei einem Mausklick" ist standardmäßig so festgelegt, weil jeder Klick üblicherweise den Textcursor verschiebt oder den Tastaturfokus auf ein neues Steuerelement/Feld setzt. In solchen Fällen ist es generell wünschenswert: 1) einen Hotstring auch dann auslösen zu können, wenn die <a href="#Question">Fragezeichen-Option</a> fehlt; 2) einen Hotstring am Auslösen zu hindern, wenn Sie nach einem Mausklick etwas eingeben, das zufällig eine gültige Abkürzung aus der vorherigen Eingabe formt.</p>
<p id="focus-reset">Der Hotstring-Erkenner überprüft jedes Mal das aktive Fenster, wenn ein Zeichen eingegeben wird, und setzt sich zurück, wenn ein anderes Fenster als zuvor aktiv ist. Wenn sich das aktive Fenster ändert, aber zurückgesetzt wird, bevor Zeichen eingegeben werden, wird die Änderung nicht erkannt (aber der Hotstring-Erkenner könnte aus einem anderen Grund zurückgesetzt werden). Man kann den Hotstring-Erkenner auch durch Aufrufen von <code><a href="lib/Hotstring.htm#Reset">Hotstring "Reset"</a></code> zurücksetzen.</p>
<p>Die interne Variable <strong>A_EndChar</strong> enthält das Endungszeichen, mit dem Sie zuletzt einen nicht-automatisch-ersetzenden Hotstring ausgelöst haben. Wenn ein Hotstring nicht mit einem Endungszeichen ausgelöst werden musste (wegen der <a href="#Asterisk">*-Option</a>), wird die Variable leer sein. A_EndChar ist nützlich, wenn Sie Hotstrings haben, die die Send-Funktion verwenden oder sich je nach Endungszeichen unterschiedlich verhalten sollen. Mit <code>SendText A_EndChar</code> kann das Endungszeichen selbst gesendet werden (in diesem Fall <a href="lib/Send.htm">SendText</a>, um zu verhindern, dass Zeichen wie !{}, die eine besondere Bedeutung haben, interpretiert werden).</p>
<p>Obwohl einzelne Doppelpunkte innerhalb von Hotstring-Definitionen nur dann mit einem <a href="misc/EscapeChar.htm">Escapezeichen</a> versehen werden müssen, wenn sie der Zweifach-Doppelpunkt-Trennung vorangestellt sind, müssen umgekehrte Häkchen und Semikolons, die auf der linken Seite ein Leer- oder Tabulatorzeichen haben, immer mit einem Escapezeichen versehen werden. Unter <a href="misc/EscapeChar.htm">Escapesequenzen</a> finden Sie eine komplette Liste.</p>
<p>Die Sonderzeichen der <a href="lib/Send.htm">Send-Funktion</a> wie {Enter} werden nur in den Ersatztexten von <a href="#auto">automatisch-ersetzenden Hotstrings</a> unterstützt (sofern die <a href="#raw">Raw-Option</a> nicht verwendet wird), nicht in den Hotstring-Abkürzungen selbst. Stattdessen kann `n für <kbd>Enter</kbd> und `t (oder ein direkt geschriebenes Tabulatorzeichen) für <kbd>Tab</kbd> angegeben werden (unter <a href="misc/EscapeChar.htm">Escapesequenzen</a> finden Sie eine komplette Liste). Der Hotstring <code>:*:ab`t::</code> kann beispielsweise ausgelöst werden, wenn Sie "ab" und danach ein Tabulatorzeichen eingeben.</p>
<p>Leer- und Tabulatorzeichen werden innerhalb von Hotstring-Definitionen als direkt geschriebener Text behandelt. Zum Beispiel würden die folgenden Hotstrings zwei unterschiedliche Ergebnisse erzeugen: <code>::bzw::beziehungsweise</code> und <code>::bzw:: :beziehungsweise</code>.</p>
<p>Jede Hotstring-Abkürzung hat eine maximale Länge von 40 Zeichen. Das Programm wird Sie warnen, wenn diese Länge überschritten wurde. Die Länge des Ersatztextes ist hingegen auf ca. 5000 Zeichen begrenzt, sofern der <a href="#SendMode">Send-Modus</a> standardmäßig SendInput ist. Dieses Limit kann entfernt werden, wenn Sie einen anderen <a href="#SendMode">Send-Modus</a> wählen oder wenn Sie <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> oder <a href="lib/Send.htm#SendEvent">SendEvent</a> im Körper des Hotstrings verwenden.</p>
<p>Die Reihenfolge, in der die Hotstrings definiert werden, bestimmt ihre relative Priorität zueinander. Mit anderen Worten: Wenn Ihre Eingabe mehr als einen Hotstring auslösen kann, wird nur der erste im Skript gelistete Hotstring in Kraft treten. Verwandtes Thema: <a href="#variant">Kontextabhängige Hotstrings</a>.</p>
<p>Jedes von Ihnen durchgeführte Backspacing wird bei der Erkennung von Hotstrings berücksichtigt. Die Navigationstasten <kbd>↑</kbd>, <kbd>→</kbd>, <kbd>↓</kbd>, <kbd>←</kbd>, <kbd>Bild↑</kbd>, <kbd>Bild↓</kbd>, <kbd>Pos1</kbd> und <kbd>Ende</kbd> bewirken, dass der Hotstring-Erkennungsprozess zurückgesetzt wird. Mit anderen Worten: Der Erkennungsprozess wird auf einen völlig neuen Hotstring warten.</p>
<p>Ein Hotstring kann auch verwendet werden, wenn das aktive Fenster die Tastendrücke des Benutzers ignoriert. Sprich, der Hotstring kann ausgelöst werden, ohne dass die Abkürzung sichtbar sein muss. Auch hier kann <kbd>Backspace</kbd> gedrückt werden, um den aktuellsten Tastendruck rückgängig zu machen (selbst wenn der Effekt nicht sehen ist).</p>
<p>Die Funktion eines Hotstrings kann vom Skript nur dann explizit aufgerufen werden, wenn die Funktion benannt wurde. Siehe <a href="#Function">benannte Funktions-Hotstrings</a>.</p>
<p>Hotstrings werden nicht überwacht, und werden nicht ausgelöst, solange die Eingabeerfassung durch einen unsichtbaren <a href="lib/InputHook.htm">Input-Hook</a> blockiert wird.</p>
<p id="InputLevel">Standardmäßig können Hotstrings nicht durch Tastendrücke ausgelöst werden, die ein AutoHotkey-Skript erzeugt hat. Dadurch entfällt die Möglichkeit einer Endlosschleife, in der Hotstrings sich gegenseitig immer und immer wieder auslösen werden. Dieses Verhalten kann mit <a href="lib/_InputLevel.htm">#InputLevel</a> und <a href="lib/SendLevel.htm">SendLevel</a> kontrolliert werden. Beachten Sie aber, dass automatisch-ersetzende Hotstrings immer eine Sendestufe von 0 haben und deshalb nie <a href="lib/_UseHook.htm">Hook-Hotkeys</a> oder Hotstrings auslösen können.</p>
<p>Hotstrings können mithilfe der <a href="lib/Hotstring.htm">Hotstring</a>-Funktion dynamisch erstellt werden. Diese Funktion kann zudem im Skript vorhandene Hotstrings einzeln modifizieren, deaktivieren oder aktivieren.</p>
<p>In bestimmten Fällen ist <a href="lib/InputHook.htm">InputHook</a> flexibler als Hotstrings. Zum Beispiel bietet es die Möglichkeit, unsichtbare Tastendrücke im aktiven Fenster (z. B. eines Videospiels) zu machen. Außerdem unterstützt es zeichenlose Endungstasten wie <kbd>Esc</kbd>.</p>
<p>Jedes Skript, das Hotstrings enthält, benutzt automatisch den <a href="lib/InstallKeybdHook.htm">Tastatur-Hook</a>.</p>
<p>Hotstrings verhalten sich in einigen Punkten genauso wie Hotkeys:</p>
<ul>
  <li>Sie werden von der <a href="lib/Suspend.htm">Suspend</a>-Funktion beeinflusst.</li>
  <li>Sie berücksichtigen <a href="lib/_MaxThreads.htm">#MaxThreads</a> und <a href="lib/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> (aber nicht <a href="lib/_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>).</li>
  <li>Skripte, die Hotstrings enthalten, sind automatisch <a href="Scripts.htm#persistent">persistent</a>.</li>
  <li>Nicht-automatisch-ersetzende Hotstrings werden einen neuen <a href="misc/Threads.htm">Thread</a> erstellen, sobald sie gestartet werden. Außerdem werden sie die internen Hotkey-Variablen wie <a href="Variables.htm#ThisHotkey">A_ThisHotkey</a> aktualisieren.</li>
</ul>
<p>Bekannte Einschränkung: Auf einigen Systemen kann es vorkommen, dass der Benutzer keine diakritischen Buchstaben (via tote Tasten) eingeben kann, wenn Hotstrings in Verbindung mit Java-Anwendungen benutzt werden. Um das zu umgehen, schalten Sie <a href="lib/Suspend.htm">Suspend</a> vorübergehend ein (Suspend deaktiviert alle Hotstrings).</p>

<h2 id="Function">Benannte Funktions-Hotstrings</h2>
<p>Wenn die Funktion eines Hotstrings aufgerufen werden soll, ohne den Hotstring selbst auszulösen, können Sie einem oder mehreren Hotstrings eine benannte <a href="Functions.htm">Funktion</a> zuweisen, indem Sie sie einfach unterhalb des Doppelpunktpaares definieren. Zum Beispiel:</p>
<pre><em>; Dieses Beispiel zeigt zudem eine Möglichkeit, wie man die Konformität der Groß- und Kleinschreibung in einem Skript gewährleisten kann.</em>
:C:BZW::  <em>; Alles großgeschrieben.</em>
:C:Bzw::  <em>; Nur den ersten Buchstaben großgeschrieben.</em>
: :bzw::  <em>; In einer beliebig anderen Kombination geschrieben.</em>
    bzw_an_schreibung_anpassen(hs) <em>; hs wird den Namen des Hotstrings enthalten, der die Funktion ausgelöst hat.</em>
    {
        if (hs == ":C:BZW")
            Send "BEZIEHUNGSWEISE"
        else if (hs == ":C:Bzw")
            Send "Beziehungsweise"
        else
            Send "beziehungsweise"
    }
</pre>
<p>Wenn die Funktion <em>bzw_an_schreibung_anpassen</em> explizit vom Skript aufgerufen wird, muss dem ersten Parameter (hs) ein Wert übergeben werden.</p>
<p>Zusätzliche Informationen finden Sie unter <a href="Hotkeys.htm#function-details">Funktions-Hotkeys</a>.</p>
<p>Die <a href="lib/Hotstring.htm">Hotstring</a>-Funktion kann auch genutzt werden, um einem Hotstring eine Funktion oder ein Funktionsobjekt zuzuweisen.</p>

<h2 id="Helper">Hotstring Helper</h2>
<p>Das <a href="lib/Hotstring.htm#ExHelper">erste Beispiel</a> im Beispielabschnitt der <a href="lib/Hotstring.htm">Hotstring</a>-Seite kann nützlich sein, wenn Sie ein intensiver Nutzer von Hotstrings sind. Drücken Sie <kbd>Win</kbd>+<kbd>H</kbd> (oder einen anderen Hotkey Ihrer Wahl), um den aktuell markierten Text in einen Hotstring umzuwandeln. Wenn Sie in einem Textverarbeitungsprogramm zum Beispiel "beziehungsweise" markieren und <kbd>Win</kbd>+<kbd>H</kbd> drücken, wird das Skript Sie auffordern, eine Abkürzung für diesen Text zu bestimmen (z. B. bzw), dann den neuen Hotstring in das Skript einfügen und ihn anschließend aktivieren.</p>
</body>
</html>
