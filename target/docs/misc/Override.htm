<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Externe Hotkeys überschreiben oder deaktivieren | AutoHotkey v2</title>
<meta name="description" content="Erfahren Sie, wie Hotkeys von Windows oder einer anderen Anwendung überschrieben oder deaktiviert werden können." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Externe Hotkeys überschreiben oder deaktivieren</h1>

<p>Alle internen Windows-Hotkeys außer <kbd>Win</kbd>+<kbd>L</kbd> und <kbd>Win</kbd>+<kbd>U</kbd> können durch folgende Änderung in der Registry deaktiviert werden (sollte auf allen Systemen funktionieren und erfordert evtl. einen Neustart):</p>
<pre class="no-highlight">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer
NoWinKeys REG_DWORD 0x00000001 (1)</pre>
<p>Aber lesen Sie weiter, wenn Sie mehr tun wollen, als sie nur zu deaktivieren.</p>
<p>Hotkeys von anderen Anwendungen können überschrieben oder deaktiviert werden, indem ihnen im Skript eine Aktion zugewiesen wird. Am häufigsten wird dieses Feature verwendet, um Hotkeys zu ändern, die von Windows selbst vorgegeben sind. Das folgende Beispiel zeigt, wie <kbd>Win</kbd>+<kbd>E</kbd> (Tastaturkurzbefehl zum Starten des Windows Explorers) zur Ausführung einer anderen Aktion gebracht werden kann:</p>
<pre>#e::MsgBox "Dieser Hotkey gehört nun zum Skript."</pre>
<p>Das nächste Beispiel zeigt, wie <kbd>Win</kbd>+<kbd>R</kbd> (Tastaturkurzbefehl zum Öffnen des Ausführen-Fensters) komplett deaktiviert werden kann:</p>
<pre>#r::return</pre>
<p>Auf ähnliche Weise können auch die beiden <kbd>Win</kbd>-Tasten deaktiviert werden:</p>
<pre>LWin::return
RWin::return</pre>
<p>Um einen nicht-globalen Hotkey einer Anwendung zu deaktivieren oder zu ändern (also einen Tastaturkurzbefehl, der nur funktioniert, wenn die Anwendung das aktive Fenster ist), schauen Sie sich das folgende Beispiel an, das zeigt, wie <kbd>Strg</kbd>+<kbd>P</kbd> (Drucken) nur für Notepad deaktiviert wird, aber für andere Fenster bestehen bleibt:</p>
<pre>$^p::
{
	if WinActive("ahk_class Notepad")
		return  <em>; also nichts tun, so dass STRG+P in Notepad nichts bewirkt.</em>
	Send "^p"
}</pre>
<p>Das $-Präfix im obigen Beispiel ist notwendig, damit sich der Hotkey "selbst senden" kann, ohne sich selbst zu aktivieren (andernfalls würde ein Warndialogfenster bzgl. einer Endlosschleife erscheinen). Siehe auch: <a href="../Hotkeys.htm#Context">Kontextabhängige Hotkeys</a>.</p>
<p>Um die obigen Beispiele zu testen, kopieren Sie sie in eine neue Textdatei, z.B. "Override.ahk", und starten Sie die Datei. Alternativ können Sie, sofern es Ihr Browser unterstützt, jedes Beispiel als Skriptdatei herunterladen, indem Sie den Mauszeiger über den Codeblock bewegen und oben rechts auf die Schaltfläche <span style="font-family: icons;">↓</span> klicken.</p>
</body>
</html>
