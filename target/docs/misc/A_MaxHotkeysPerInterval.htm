<!DOCTYPE HTML>
<html lang="de">
<head>
<title>A_MaxHotkeysPerInterval - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Variablen A_MaxHotkeysPerInterval und A_HotkeyInterval bestimmen, wie viele Hotkeys innerhalb eines Zeitrahmens aktiviert werden können, bevor ein Warndialogfenster angezeigt wird." />
<meta name="ahk:equiv-v1" content="commands/_MaxHotkeysPerInterval.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>A_MaxHotkeysPerInterval</h1>

<p>Die Variablen A_MaxHotkeysPerInterval und A_HotkeyInterval bestimmen, wie viele Hotkeys innerhalb eines Zeitrahmens aktiviert werden können, bevor ein Warndialogfenster angezeigt wird.</p>

<table class="info">
  <tr><th>Variable</th><th>Bedeutung</th><th>Standardwert</th><th>Typ</th></tr>
  <tr>
    <td>A_MaxHotkeysPerInterval</td>
    <td>Die maximale Anzahl der Hotkeys, die innerhalb eines Zeitrahmens gedrückt werden können, ohne dass ein Warndialogfenster ausgelöst wird.</td>
    <td>70</td>
    <td><a href="../Concepts.htm#numbers">Integer</a></td>
  </tr>
  <tr>
    <td>A_HotkeyInterval</td>
    <td>Die Länge des Intervalls in Millisekunden.</td>
    <td>2000</td>
    <td><a href="../Concepts.htm#numbers">Integer</a></td>
  </tr>
</table>

<h2 id="Remarks">Bemerkungen</h2>
<p>Diesen internen Variablen sollten normalerweise Werte beim Starten des Skripts zugewiesen werden (wenn die Standardwerte nicht ausreichen), aber das Skript kann ihre Werte zu jeder Zeit abrufen oder setzen.</p>
<p>Achten Sie darauf, nicht zu nachsichtig beim Zuweisen von Werten zu sein: Wenn Sie aus Versehen eine Endlosschleife mit Tastendrücken erzeugen (via <a href="../commands/Send.htm">Send</a>-Funktion, die versehentlich andere Hotkeys auslöst), könnte es passieren, dass Ihr Computer aufgrund von vielen schnellen Tastaturereignissen nicht mehr reagiert.</p>
<p>Der stark vereinfachte Hotkey <code>^c::Send "^c"</code> würde beispielsweise eine Endlosschleife mit Tastendrücken erzeugen. Um das zu verhindern, fügen Sie das <a href="../Hotkeys.htm#prefixdollar">$-Präfix</a> in die Hotkey-Definition ein (z. B. <code>$^c::</code>), damit der Hotkey nicht mehr durch die Send-Funktion ausgelöst werden kann.</p>
<p>Der Grenzwert kann auch auf andere Weise als durch eine Endlosschleife erreicht werden, z. B.:</p>
<ul>
  <li>Tastenwiederholung, wenn der Grenzwert im Verhältnis zur Tastenwiederholrate zu niedrig ist oder das System stark belastet ist.</li>
  <li>Tastatur- oder Maushardware, die Eingabeereignisse schneller als die typische Tastenwiederholrate sendet. Wenn Sie z. B. bei einigen Mäusen das Rad nach links oder rechts kippen, wird eine hohe Anzahl von Ereignissen gesendet, was bei Hotkeys wie <code>WheelLeft::</code> und <code>WheelRight::</code> schnell an die Grenzen stoßen kann.</li>
</ul>
<p>Mit <code>A_HotkeyInterval := 0</code> können Sie das Warndialogfenster komplett deaktivieren.</p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Erlaubt das Drücken von maximal 200 Hotkeys innerhalb von 2000 ms, ohne dass ein Warndialogfenster ausgelöst wird.</p>
<pre>A_HotkeyInterval := 2000  <em>; Dies ist der Standardwert (in Millisekunden).</em>
A_MaxHotkeysPerInterval := 200</pre>
</div>

</body>
</html>
