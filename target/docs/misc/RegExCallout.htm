<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Callouts in Regulären Ausdrücken | AutoHotkey v2</title>
<meta name="description" content="RegEx-Callouts bieten die Möglichkeit, die Kontrolle vorübergehend an das Skript zu übergeben, während ein Suchmuster (regulärer Ausdruck) ausgewertet wird." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Callouts in Regulären Ausdrücken</h1>

<p>RegEx-Callouts bieten die Möglichkeit, die Kontrolle vorübergehend an das Skript zu übergeben, während ein Suchmuster (regulärer Ausdruck) ausgewertet wird. Detaillierte Informationen über das PCRE-Standard-Callout-Feature finden Sie unter <a href="http://www.pcre.org/pcre.txt">pcre.txt</a>.</p>

<p>RegEx-Callouts werden zurzeit nur von <a href="../lib/RegExMatch.htm">RegExMatch</a> und <a href="../lib/RegExReplace.htm">RegExReplace</a> unterstützt.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
    <li><a href="#syntax">Syntax</a></li>
    <li><a href="#callout-functions">RegEx-Callout-Funktionen</a></li>
    <li><a href="#EventInfo">EventInfo</a></li>
    <li><a href="#auto">Auto-Callout</a></li>
    <li><a href="#remarks">Bemerkungen</a></li>
</ul>

<h2 id="syntax">Syntax</h2>

<p>Die Syntax zum Definieren eines RegEx-Callouts ist <span class="regex">(?C<em>Nummer</em>:<em>Funktion</em>)</span> - hierbei ist <em>Nummer</em> und <em>Funktion</em> optional. Der Doppelpunkt (:) ist nur erlaubt, wenn <em>Funktion</em> angegeben ist, und optional, wenn <em>Nummer</em> weggelassen wird. Wenn <em>Funktion</em> angegeben ist, aber nicht der Name eines <a href="Functor.htm">Funktionsobjekts</a> ist, wird ein Kompilierungsfehler auftreten und die Suchmusterauswertung abgebrochen.</p>

<p>Lässt man <em>Funktion</em> weg, muss die Standard-RegEx-Callout-Funktion namens <b>pcre_callout</b> definiert werden. Wenn <em>pcre_callout</em> nicht definiert ist, werden RegEx-Callouts, die <em>Funktion</em> weglassen, ignoriert.</p>

<h2 id="callout-functions">RegEx-Callout-Funktionen</h2>

<pre class="Syntax"><i>MeineFunktion</i>(Match, CalloutNummer, FundPos, Heuhaufen, NadelRegEx)
{
    ...
}</pre>
<p>RegEx-Callout-Funktionen akzeptieren bis zu 5 Parameter:</p>
<ul>
  <li><b>Match</b>: Enthält ein <a href="../lib/RegExMatch.htm#MatchObject">RegExMatchInfo</a>-Objekt mit Informationen über die bisherige Übereinstimmung.</li>
  <li><b>CalloutNummer</b>: Enthält die <em>Nummer</em> des RegEx-Callouts.</li>
  <li><b>FundPos</b>: Enthält die Position der aktuellen potenziellen Übereinstimmung.</li>
  <li><b>Heuhaufen</b>: Enthält die <em>Heuhaufen</em>-Zeichenkette, die an RegExMatch oder RegExReplace übergeben wurde.</li>
  <li><b>NadelRegEx</b>: Enthält das <em>NadelRegEx</em>-Suchmuster, das an RegExMatch oder RegExReplace übergeben wurde.</li>
</ul>
<p>Diese Namen dienen nur als Beispiel. Es können beliebige Namen verwendet werden.</p>

<p class="warning"><strong>Warnung:</strong> Das Ändern der Eingabeparameter von <a href="../lib/RegExReplace.htm">RegExReplace</a> oder <a href="../lib/RegExMatch.htm">RegExMatch</a> während eines Aufrufs wird nicht unterstützt und kann zu unvorhersehbarem Verhalten führen.</p>

<p>Die Suchmusterauswertung kann je nach Rückgabewert der RegEx-Callout-Funktion fortgesetzt werden oder fehlschlagen:</p>
<ul>
  <li>Wenn die Funktion <b>0</b> oder einen nicht-numerischen Wert zurückgibt, wird die Auswertung normal fortgesetzt.</li>
  <li>Wenn die Funktion <b>1</b> oder höher zurückgibt, wird die Auswertung an aktueller Stelle fehlschlagen, aber das Testen von anderen Auswertungsmöglichkeiten fortgesetzt.</li>
  <li>Wenn die Funktion <b>-1</b> zurückgibt, wird die Auswertung abgebrochen.</li>
  <li>Wenn die Funktion einen Wert kleiner als -1 zurückgibt, wird dieser Wert als PCRE-Fehlercode behandelt und die Auswertung abgebrochen. Dies bewirkt, dass RegExMatch und RegExReplace eine Ausnahme auslöst; die <em>Extra</em>-Eigenschaft des Exception-Objekts enthält die PCRE-Fehlernummer.</li>
</ul>

<p>Zum Beispiel:</p>
<pre>Heuhaufen := "The quick brown fox jumps over the lazy dog."
RegExMatch(Heuhaufen, "i)(The) (\w+)\b(?CCallout)")
Callout(m, *) {
    MsgBox "m[0]=" m[0] "`nm[1]=" m[1] "`nm[2]=" m[2]
    return 1
}</pre>
<p>Das Beispiel oben bewirkt, dass <em>Callout</em> einmal für jede Teilzeichenkette, die mit dem Teil des Suchmusters vor dem RegEx-Callout übereinstimmt, aufgerufen wird. Das <span class="regex">\b</span> dient dazu, unvollständige Wörter in Übereinstimmungen wie <em>The quic</em>, <em>The qui</em>, <em>The qu</em>, etc. auszuschließen.</p>
<p>Wenn einer der Eingabeparameter einer <em>RegEx</em>-Funktion während eines Callouts geändert wird, ist das Verhalten undefiniert.</p>
    
<h2 id="EventInfo">EventInfo</h2>

<p>Zusätzliche Informationen erhalten Sie durch Zugriff auf die pcre_callout_block-Struktur via <b>A_EventInfo</b>.</p>
<pre>version           := NumGet(A_EventInfo,  0, "Int")
callout_number    := NumGet(A_EventInfo,  4, "Int")
offset_vector     := NumGet(A_EventInfo,  8, "Ptr")
subject           := NumGet(A_EventInfo,  8 + A_PtrSize, "Ptr")
subject_length    := NumGet(A_EventInfo,  8 + A_PtrSize*2, "Int")
start_match       := NumGet(A_EventInfo, 12 + A_PtrSize*2, "Int")
current_position  := NumGet(A_EventInfo, 16 + A_PtrSize*2, "Int")
capture_top       := NumGet(A_EventInfo, 20 + A_PtrSize*2, "Int")
capture_last      := NumGet(A_EventInfo, 24 + A_PtrSize*2, "Int")
pad := A_PtrSize=8 ? 4 : 0  <em>; Ausgleich für die 64-Bit-Datenausrichtung.</em>
callout_data      := NumGet(A_EventInfo, 28 + pad + A_PtrSize*2, "Ptr")
pattern_position  := NumGet(A_EventInfo, 28 + pad + A_PtrSize*3, "Int")
next_item_length  := NumGet(A_EventInfo, 32 + pad + A_PtrSize*3, "Int")
if (version &gt;= 2)
    mark   := StrGet(NumGet(A_EventInfo, 36 + pad + A_PtrSize*3, "Int"), "UTF-8")
</pre>
<p>Weitere Informationen finden Sie unter <a href="http://www.pcre.org/pcre.txt">pcre.txt</a>, <a href="../lib/NumGet.htm">NumGet</a> und <a href="../Variables.htm#PtrSize">A_PtrSize</a>.</p>

<h2 id="auto">Auto-Callout</h2>

<p>Fügen Sie <strong>C</strong> in den Optionen des Suchmusters ein, um den Auto-Callout-Modus zu aktivieren. In diesem Modus werden RegEx-Callouts in Form von <span class="regex">(?C255)</span> vor jedem Element im Suchmuster eingefügt. Das folgende Beispiel kann genutzt werden, um reguläre Ausdrücke zu debuggen:</p>
<pre><em>; RegExMatch mit der Auto-Callout-Option C aufrufen.</em>
RegExMatch("xxxabc123xyz", "C)abc.*xyz")

<em>; Standard-RegEx-Callout-Funktion definieren.</em>
pcre_callout(Match, CalloutNumber, FoundPos, Haystack, NeedleRegEx)
{
    <em>; Beschreibungen dieser Felder finden Sie unter pcre.txt.</em>
    start_match       := NumGet(A_EventInfo, 12 + A_PtrSize*2, "Int")
    current_position  := NumGet(A_EventInfo, 16 + A_PtrSize*2, "Int")
    pad := A_PtrSize=8 ? 4 : 0
    pattern_position  := NumGet(A_EventInfo, 28 + pad + A_PtrSize*3, "Int")
    next_item_length  := NumGet(A_EventInfo, 32 + pad + A_PtrSize*3, "Int")

    <em>; Aktuelle Übereinstimmung &gt;&gt;hervorheben&lt;&lt;.</em>
    _HAYSTACK:=SubStr(Haystack, 1, start_match)
        . "&gt;&gt;" SubStr(Haystack, start_match + 1, current_position - start_match)
        . "&lt;&lt;" SubStr(Haystack, current_position + 1)
    
    <em>; Nächstes auszuwertende Element &gt;&gt;hervorheben&lt;&lt;.</em>
    _NEEDLE:=  SubStr(NeedleRegEx, 1, pattern_position)
        . "&gt;&gt;" SubStr(NeedleRegEx, pattern_position + 1, next_item_length)
        . "&lt;&lt;" SubStr(NeedleRegEx, pattern_position + 1 + next_item_length)
    
    ListVars
    <em>; Drücken Sie PAUSE, um fortzufahren.</em>
    Pause
}</pre>

<h2 id="remarks">Bemerkungen</h2>

<p>RegEx-Callouts werden auf dem aktuellen Pseudo-Thread ausgeführt, allerdings wird der vorherige Wert von A_EventInfo wiederhergestellt, wenn die RegEx-Callout-Funktion zurückkehrt.</p>
<p>PCRE ist so optimiert, dass es in einigen Fällen vorzeitig abbricht, wenn es feststellt, dass eine Übereinstimmung nicht möglich ist. Damit RegEx-Callouts in solchen Fällen aufgerufen werden können, müssen diese Optimierungen durch Angabe von <span class="regex">(*NO_START_OPT)</span> am Anfang des Suchmusters deaktiviert werden.</p>

</body>
</html>
