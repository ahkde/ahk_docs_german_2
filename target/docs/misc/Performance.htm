<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Skriptperformanz | AutoHotkey v2</title>
<meta name="description" content="Erfahren Sie, wie die Performanz eines Skripts maximiert werden kann und welche internen Optimierungen zugunsten der Performanz vorgenommen werden." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Skriptperformanz</h1>

<p>Die folgenden Funktionen können je nach Art des Skripts die Performanz beeinträchtigen: <a href="../lib/SendMode.htm">SendMode</a>, <a href="../lib/SetKeyDelay.htm">SetKeyDelay</a>, <a href="../lib/SetMouseDelay.htm">SetMouseDelay</a>, <a href="../lib/SetWinDelay.htm">SetWinDelay</a>, <a href="../lib/SetControlDelay.htm">SetControlDelay</a> und <a href="../lib/SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>.</p>
<h2 id="Built-in_Performance_Features">Interne Performanzoptimierungen</h2>
<p>Jedes Skript wird beim Laden semikompiliert und auf seine Syntax überprüft. Dies hilft dem Programm, einige Fehler frühzeitig zu erkennen, und sorgt für eine deutliche Verbesserung der Laufzeitperformanz.</p>
<p>Hier einige technische Details des Optimierungsprozesses (Semikompilierung):</p>
<ul>
  <li><a href="../lib/Loop.htm">Schleifen</a>, <a href="../lib/Block.htm">Blöcke</a>, <a href="../lib/If.htm">IFs</a>, <a href="../lib/Else.htm">ELSEs</a> und andere <a href="../Language.htm#control-flow">Kontrollanweisungen</a> bekommen die Speicheradressen von ihren Sprungpunkten im Skript zugewiesen.</li>
  <li>Jeder Anweisungsname wird mit einer Adresse aus der Sprungtabelle ersetzt.</li>
  <li>Jeder <a href="../Variables.htm#Expressions">Ausdruck</a> wird tokenisiert und von Infix in Postfix konvertiert.</li>
  <li>Jede Referenz zu einer <a href="../Variables.htm">Variable</a> oder <a href="../Functions.htm">Funktion</a> wird in eine Speicheradresse aufgelöst, sofern sie nicht <a href="../Variables.htm#deref">dynamisch</a> ist.</li>
  <li>Direkt geschriebene Integer in Ausdrücken werden mit binären Integern ersetzt.</li>
  <li>Das Ziel von <a href="../lib/Goto.htm">Goto</a> wird in eine Speicheradresse aufgelöst, es sei denn, es handelt sich um eine Variable.</li>
</ul>
<p>Während der Skriptausführung werden Binärzahlen in Variablen zwischengespeichert, um Konvertierungen von/zu Zeichenketten zu vermeiden.</p>
</body>
</html>
