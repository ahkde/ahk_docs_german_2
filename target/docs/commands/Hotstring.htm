<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Hotstring - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Hotstring-Funktion erstellt, bearbeitet, aktiviert oder deaktiviert einen Hotstring, während das Skript läuft." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Hotstring</h1>

<p>Erstellt, bearbeitet, aktiviert oder deaktiviert einen <a href="../Hotstrings.htm">Hotstring</a>, während das Skript läuft.</p>

<pre class="Syntax"><span class="func">Hotstring</span> Zkette <span class="optional">, Ersatz, OnOffToggle</span>
<span class="func">Hotstring</span> <a href="#NewOptions">NeueOptionen</a>
AlterWert := <span class="func">Hotstring</span>("<a href="#EndChars">EndChars</a>" <span class="optional">, NeuerWert</span>)
AlterWert := <span class="func">Hotstring</span>("<a href="#MouseReset">MouseReset</a>" <span class="optional">, NeuerWert</span>)
<span class="func">Hotstring</span> "Reset"
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Zkette</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Eine Zeichenkette, mit der der Hotstring ausgelöst werden soll, inklusive der davor befindlichen <a href="../Hotstrings.htm">üblichen Doppelpunkte</a> und <a href="../Hotstrings.htm#Options">Optionszeichen</a>. Zum Beispiel <code>"::bzw"</code> oder <code>":*:]d"</code>.</p>
    <p><em>Zkette</em> kann einem vorhandenen Hotstring entsprechen, unter Berücksichtigung der <a href="../Hotstrings.htm#C">Groß-/Kleinschreibung-Sensitivität (C)</a>, <a href="../Hotstrings.htm#Question">Wort-Sensitivität (?)</a>, Aktivierungskriterien (die durch <a href="_HotIf.htm">#HotIf</a> oder <a href="HotIf.htm">HotIf</a> gesetzt sind) und der auslösenden Zeichenkette. Sofern der Groß-/Kleinschreibung-Sensitivitätsmodus nicht als Standardoption bestimmt ist, würde <code>"::bzw"</code> beispielsweise mit <code>"::BZW"</code> übereinstimmen, während <code>":C:bzw"</code> nie mit <code>":C:BZW"</code> übereinstimmen würde. Die <code>C</code>- und <code>?</code>-Optionen können in <em>Zkette</em> enthalten sein oder mit der <a href="_Hotstring.htm">#Hotstring</a>-Direktive oder durch einen vorherigen Aufruf <a href="#NewOptions">dieser Funktion</a> als Standardoptionen bestimmt werden.</p>
    <p>Wenn der Hotstring bereits existiert, werden alle Optionen, die in <em>Zkette</em> angegeben sind, in Kraft gesetzt, während alle anderen Optionen unverändert bleiben. Da Hotstrings mit <code>C</code> oder <code>?</code> von anderen Hotstrings gesondert behandelt werden, ist es nicht möglich, diese Optionen hinzuzufügen oder zu entfernen. Schalten Sie stattdessen den vorhandenen Hotstring aus und erstellen Sie einen neuen Hotstring.</p>
    <p>Jeder neu erstellte Hotstring -- entweder via Hotstring-Funktion oder <a href="../Hotstrings.htm">Zweifach-Doppelpunkt-Syntax</a> -- erhält einen fest zugewiesenen Namen bestehend aus seinem Auslöser und der Sequenz der Optionszeichen ist, wie von <a href="../Hotkeys.htm#ThisHotkey">ThisHotkey</a> widergespiegelt. Dieser Name ändert sich auch dann nicht, wenn die Hotstring-Funktion später mit anderen Optionszeichen auf den Hotstring zugreift.</p>
  </dd>

  <dt>Ersatz</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../objects/Functor.htm">Funktionsobjekt</a></p>
    <p>Der Ersatztext, oder eine <a href="../Functions.htm">Funktion</a> oder ein <a href="../objects/Functor.htm">Funktionsobjekt</a>, das (als neuer <a href="../misc/Threads.htm">Thread</a>) aufgerufen werden soll, wenn der Hotstring ausgelöst wird.</p>
    <p>Alle Zeichenketten werden als Ersatztext behandelt. Damit ein Hotstring beim Auslösen eine Funktion aufruft, übergeben Sie die Funktion per Referenz. Beachten Sie, dass nach der Neuzuweisung der Funktion eines Hotstrings seine ursprüngliche Funktion nur dann wiederhergestellt werden kann, wenn ihm <a href="../Hotstrings.htm#Function">ein Name gegeben wurde</a>.</p>
    <p>Dieser Parameter kann weggelassen werden, wenn der Hotstring bereits existiert, um zu bewirken, dass der Ersatz des Hotstrings nicht geändert wird. Diese Vorgehensweise ist sinnvoll, wenn nur die Optionen des Hotstrings geändert werden soll oder wenn der Hotstring ein- oder ausgeschaltet werden soll.</p>
    <p class="note"><strong>Hinweis</strong>: Wenn dieser Parameter angegeben ist, und wurde der Hotstring durch diese Funktion zuvor deaktiviert, bleibt der Hotstring deaktiviert. Um das zu verhindern, fügen Sie das Wort <code>"On"</code> in <em>OnOffToggle</em> ein.</p>
  </dd>

  <dt>OnOffToggle</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Geben Sie einen der folgenden Werte an:</p>
    <p><strong>On</strong> oder <strong>1</strong> (true): Aktiviert den Hotstring.</p>
    <p><strong>Off</strong> oder <strong>0</strong> (false): Deaktiviert den Hotstring.</p>
    <p><strong>Toggle</strong> oder <strong>-1</strong>: Schaltet den Hotstring auf den entgegengesetzten Zustand (aktiviert oder deaktiviert).</p>
  </dd>

</dl>

<h2 id="Errors">Fehlerbehandlung</h2>
<p>Diese Funktion löst eine Ausnahme aus, wenn die Parameter ungültig sind oder eine Speicherreservierung fehlschlägt.</p>
<p>Es wird ein <a href="../objects/Error.htm#TargetError">TargetError</a> ausgelöst, wenn <em>Ersatz</em> weggelassen wird und <em>Zkette</em> gültig ist, aber nicht mit einem existierenden Hotstring übereinstimmt. Dieser Sachverhalt kann genutzt werden, um die Existenz eines Hotstrings zu testen. Zum Beispiel:</p>
<pre>try
    Hotstring "::bzw"
catch TargetError
    MsgBox "Der Hotstring ist nicht vorhanden oder hat keine Varianten für die aktuellen IfWin-Kriterien."</pre>

<h2 id="Remarks">Bemerkungen</h2>
<p>Die <a href="HotIf.htm">aktuelle Einstellung von HotIf</a> bestimmt die <a href="#variant">Variante</a> eines Hotstrings, auf die sich die Hotstring-Funktion beziehen wird.</p>
<p>Wenn das Skript <a href="Suspend.htm">suspendiert</a> ist, werden neu hinzugefügte/aktivierte Hotstrings ebenfalls suspendiert, bis die Suspension wieder aufgehoben wird (es sei denn, sie sind davor geschützt, wie im <a href="Suspend.htm">Suspend</a>-Abschnitt beschrieben).</p>
<p>Die <a href="InstallKeybdHook.htm">Tastatur</a>- und/oder <a href="InstallMouseHook.htm">Maus</a>-Hooks werden bei dieser Funktion je nach Bedarf automatisch installiert oder entfernt.</p>
<p>Diese Funktion kann Hotstrings von anderen Skripten nicht direkt aktivieren oder deaktivieren.</p>
<p>Sobald ein Skript mindestens einen Hotstring hat, wird es persistent; das heißt, dass <a href="ExitApp.htm">ExitApp</a> anstelle von Exit verwendet werden muss, um dieses Skript terminieren zu können. Hotstring-Skripte sind zudem automatisch <a href="_SingleInstance.htm">#SingleInstance</a> (einzeln vorkommend), sofern nicht <code>#SingleInstance, Off</code> verwendet wurde.</p>

<h2 id="variant">Hotstring-Varianten (-Duplikate)</h2>
<p>Ein bestimmter Hotstring kann mehr als einmal erstellt werden, wenn für jede Definition ein anderes <a href="HotIf.htm">HotIf</a>-Kriterium, eine andere <a href="../Hotstrings.htm#C">Groß-/Kleinschreibung-Sensitivität</a> (<code>C</code> vs. <code>C0</code>/<code>C1</code>) oder <a href="../Hotstrings.htm#Question">Wort-Sensitivität</a> (<code>?</code>) angegeben wird. Auch bekannt als <em>Hotstring-Varianten</em>. Zum Beispiel:</p>
<pre>HotIfWinActive "ahk_group CarForums"
Hotstring "::btw", "behind the wheel"
HotIfWinActive "Inter-Office Chat"
Hotstring "::btw", "back to work"
HotIfWinActive
Hotstring "::btw", "by the way"</pre>
<p>Bei mehreren gleichzeitig aktiven Varianten eines Hotstrings wird nur die zuerst erstellte Variante ausgelöst.</p>
<p>Siehe <a href="_HotIf.htm#general-remarks">Bemerkungen zu #HotIf</a>, um mehr über IfWin zu erfahren.</p>

<h2 id="EndChars">EndChars</h2>
<pre class="Syntax">AlterWert := <span class="func">Hotstring</span>("EndChars" <span class="optional">, NeuerWert</span>)</pre>
<p>Ermittelt oder modifiziert einen Satz von Zeichen, die vom Hotstring-Erkenner als <a href="../Hotstrings.htm#EndChars">Endungszeichen</a> verwendet werden. Zum Beispiel:</p>
<pre>vorher_zeichen := Hotstring("EndChars", "-()[]{}':;`"/\,.?!`n `t")
MsgBox "Der vorherige Wert war: " vorher_zeichen</pre>
<p><a href="Hotstring.htm#EndChars">#Hotstring EndChars</a> wirkt sich auch auf diese Einstellung aus.</p>
<p>Es ist derzeit nicht möglich, für jeden Hotstring einen anderen Satz von Endungszeichen anzugeben.</p>

<h2 id="MouseReset">MouseReset</h2>
<pre class="Syntax">AlterWert := <span class="func">Hotstring</span>("MouseReset" <span class="optional">, NeuerWert</span>)</pre>
<p>Ermittelt oder modifiziert die globale Einstellung, die bestimmt, ob Mausklicks den Hotstring-Erkenner zurücksetzen dürfen, wie <a href="../Hotstrings.htm#NoMouse">hier</a> beschrieben. <em>NeuerWert</em> sollte 1 (True) sein, um die Erkennung von Mausklicks und das Zurücksetzen des Hotstring-Erkenners zu aktivieren, oder 0 (False), um es zu deaktivieren. Der Rückgabewert ist die Einstellung, die vor dem Aufruf der Funktion wirksam war.</p>
<p>Der <a href="InstallMouseHook.htm">Maus</a>-Hooks wird bei dieser Funktion je nach Bedarf automatisch installiert oder entfernt.</p>
<p><a href="_Hotstring.htm">#Hotstring NoMouse</a> wirkt sich auch auf diese Einstellung aus, und ist das gleiche wie, als würde man <code>False</code> für <em>NeuerWert</em> angeben.</p>

<h2 id="Reset">Reset</h2>
<pre class="Syntax"><span class="func">Hotstring</span> "Reset"</pre>
<p>Setzt sofort den Hotstring-Erkenner zurück. Das heißt, dass das Skript auf einen völlig neuen Hotstring wartet und dass alles, was Sie zuvor eingegeben haben, verworfen wird.</p>

<h2 id="NewOptions">Standardoptionen setzen</h2>
<pre class="Syntax"><span class="func">Hotstring</span> NeueOptionen</pre>
<p>Um neue Standardoptionen für danach erstellte Hotstrings zu bestimmen, übergeben Sie die Optionen ohne Doppelpunkte am Anfang oder Ende an die Hotstring-Funktion. Zum Beispiel: <code>Hotstring "T"</code>.</p>
<p>Das Einschalten der <a href="../Hotstrings.htm#C">Groß-/Kleinschreibung-Sensitivität (C)</a> oder der <a href="../Hotstrings.htm#Question">Wort-Sensitivität (?)</a> wirkt sich auch darauf aus, welche vorhandenen Hotstrings gefunden werden, wenn man die Hotstring-Funktion aufruft. Zum Beispiel wird <code>Hotstring ":T:btw"</code> standardmäßig <code>::BTW</code> finden, aber nicht, wenn <code>Hotstring "C"</code> oder <code><a href="_Hotstring.htm">#Hotstring</a> C</code> wirksam ist. Um das rückgängig zu machen oder zu überschreiben, übergeben Sie eine Option, die die andere Option automatisch ausschließt; <code>C0</code> und <code>C1</code> beispielsweise würde <code>C</code> überschreiben.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Hotstrings.htm">Hotstrings</a>, <a href="_HotIf.htm">#HotIf</a>, <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Suspend.htm">Suspend</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExHelper">
<p><a class="ex_number" href="#ExHelper"></a> Hotstring Helper. Das folgende Skript könnte nützlich sein, wenn Sie Hotstrings intensiv nutzen. Es basiert auf das v1-Skript von Andreas Borutta. Drücken Sie <kbd>Win</kbd>+<kbd>H</kbd> (oder einen anderen Hotkey Ihrer Wahl), um den aktuell markierten Text in einen Hotstring umzuwandeln. Wenn Sie in einem Textverarbeitungsprogramm zum Beispiel "beziehungsweise" markieren und <kbd>Win</kbd>+<kbd>H</kbd> drücken, wird das Skript Sie auffordern, eine Abkürzung für diesen Text zu bestimmen (z. B. bzw), dann den neuen Hotstring in das Skript einfügen und ihn anschließend aktivieren.</p>
<pre>#h::  <em>; Hotkey: WIN+H</em>
{
    <em>; Ermittelt den aktuell markierten Text. Es wird die Zwischenablage statt
    ; EditGetSelectedText benutzt, um das Skript für mehr Texteditoren
    ; funktionsfähig zu machen.  Speichert die aktuelle Zwischenablage und
    ; stellt sie später wieder her (allerdings funktioniert das nur mit
    ; reinem Text):</em>
    ClipboardAlt := A_Clipboard
    A_Clipboard := "" <em>; Muss vorerst leer sein, damit die Erkennung funktioniert.</em>
    Send "^c"
    if !ClipWait(1)  <em>; ClipWait hat die Zeit überschritten.</em>
    {
        A_Clipboard := ClipboardAlt <em>; Frühere Zwischenablage vor dem Return wiederherstellen.</em>
        return
    }
    <em>; Ersetze CRLF und/oder LF mit `n für einen Hotstring im Raw-Modus:
    ; Das gleiche wird für jedes andere Zeichen getan,
    ; das ein Problem im Raw-Modus sein könnte:</em>
    ClipInhalt := StrReplace(A_Clipboard, "``", "````")  <em>; Zuerst diese Ersetzung, um die darunter nicht zu stören.</em>
    ClipInhalt := StrReplace(ClipInhalt, "`r`n", "``n")
    ClipInhalt := StrReplace(ClipInhalt, "`n", "``n")
    ClipInhalt := StrReplace(ClipInhalt, "`t", "``t")
    ClipInhalt := StrReplace(ClipInhalt, "`;", "```;")
    A_Clipboard := ClipboardAlt  <em>; Den vorherigen Inhalt der Zwischenablage wiederherstellen.</em>
    ZeigeInputBox(":T:`::" ClipInhalt)
}

ZeigeInputBox(Standardwert)
{
    <em>; Den Textcursor des Eingabefensters auf eine benutzerfreundliche Position verschieben:</em>
    SetTimer VerschiebeTextcursor, 10
    <em>; Das Eingabefenster mit dem vordefinierten Hotstring anzeigen:</em>
    IB := InputBox("
    (
    Fügen Sie Ihre Abkürzung an die Position des Textcursors ein. Bei Bedarf können Sie den Ersatztext noch ändern.

    Beispieleintrag: :T:bzw`::beziehungsweise
    )", "Neuer Hotstring",, Standardwert)
    if IB.Result = "Cancel"  <em>; Der Benutzer hat Abbrechen gedrückt.</em>
        return

    if RegExMatch(IB.Value, "(?P&lt;Label&gt;:.*?:(?P&lt;Abkuerzung&gt;.*?))::(?P&lt;Ersatztext&gt;.*)", &amp;Eingabe)
    {
        if !Eingabe.Abkuerzung
            Mitteilung := "Sie haben keine Abkürzung angegeben"
        else if !Eingabe.Ersatztext
            Mitteilung := "Sie haben keinen Ersatztext angegeben"
        else
        {
            Hotstring Eingabe.Label, Eingabe.Ersatztext  <em>; Aktiviert jetzt den Hotstring.</em>
            FileAppend "`n" IB.Value, A_ScriptFullPath  <em>; Speichert den Hotstring für den späteren Gebrauch.</em>
        }
    }
    else
        Mitteilung := "Der Hotstring scheint falsch strukturiert zu sein"

    if IsSet(Mitteilung)
    {
        Ergebnis := MsgBox(Mitteilung ". Möchten Sie es noch einmal versuchen?",, 4)
        if Ergebnis = "Yes"
            ZeigeInputBox(Standardwert)
    }
    
    VerschiebeTextcursor()
    {
        WinWait "Neuer Hotstring"
        <em>; Den Textcursor des Eingabefensters auf eine Position verschieben, wo der Benutzer die Abkürzung eintragen kann.</em>
        Send "{Home}{Right 3}"
        SetTimer , 0
    }
}</pre>
</div>

</body>
</html>
