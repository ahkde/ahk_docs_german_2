<!DOCTYPE HTML>
<html lang="de">
<head>
<title>#InputLevel - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die #InputLevel-Direktive bestimmt, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden sollen." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>#InputLevel</h1>
<p>Kontrolliert, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden sollen.</p>
<pre class="Syntax"><span class="func">#InputLevel</span> <span class="optional">Level</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Level</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein Integer zwischen 0 und 100. Lässt man diesen Parameter weg, wird standardmäßig 0 verwendet.</p>
  </dd>

</dl>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Die Gebrauchsanweisung zu SendLevel und #InputLevel finden Sie unter <a href="SendLevel.htm">SendLevel</a>.</p>
<p>Diese Direktive ist von der Position abhängig: sie beeinflusst nur Hotkeys und Hotstrings, die zwischen dieser und der nächsten #InputLevel-Direktive liegen. Hotkeys und Hotstrings ohne #InputLevel-Direktive werden standardmäßig auf Level 0 gesetzt.</p>
<p>Der Eingabelevel eines Hotkeys kann auch mit der Hotkey-Funktion gesetzt werden. Zum Beispiel: <code>Hotkey "#z", meine_hotkey_sub, "<strong>I1</strong>"</code></p>
<p>Der Eingabelevel eines Hotkeys oder nicht-automatisch-ersetzenden Hotstrings wird auch genutzt, um den standardmäßig zu verwendeten <a href="SendLevel.htm">Sendelevel</a> für Tastendrücke oder Mausklicks zu bestimmen, die von diesem Hotkey oder Hotstring erzeugt wurden. Da eine Tastatur- oder Maus-<a href="../misc/Remap.htm">Neubelegung</a> eigentlich ein Hotkey-Paar ist, kann #InputLevel genutzt werden, um solche Neubelegungen andere Hotkeys auslösen zu lassen.</p>
<p>AutoHotkey-Versionen älter als v1.1.06 verhalten sich so, als wären <code>#InputLevel 0</code> und <code>SendLevel 0</code> wirksam.</p>
<p>#InputLevel kann wie alle anderen Direktiven nicht bedingt ausgeführt werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="SendLevel.htm">SendLevel</a>, <a href="../Hotkeys.htm">Hotkeys</a>, <a href="../Hotstrings.htm">Hotstrings</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Bewirkt, dass der erste Hotkey <code>Numpad0::</code> den zweiten Hotkey <code>~LButton::</code> auslöst. Dies wäre nicht der Fall, wenn die #InputLevel-Direktiven weggelassen oder auskommentiert werden.</p>
<pre>
#InputLevel 1
Numpad0::LButton
#InputLevel 0
<em>; Dieser Hotkey kann sowohl durch Numpad0 als auch durch LButton ausgelöst werden:</em>
~LButton::MsgBox "Geklickt"
</pre>
</div>

</body>
</html>
