<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Verwendung des Programms | AutoHotkey v2</title>
<meta name="description" content="Erfahren Sie mehr über das Erstellen, Bearbeiten und Ausführen eines Skripts, das Tray-Symbol, das Hauptfenster, die Verwendung der Befehlszeile, die Portabilität und die Installer-Optionen." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
<script src="static/ga.js" type="text/javascript"></script>
</head>
<body>
<h1>Verwendung des Programms</h1>
<p>AutoHotkey macht nichts von alleine; es braucht ein Skript, das ihm sagt, was es tun soll. Ein Skript ist lediglich eine reine Textdatei mit der Dateiendung <code>.ahk</code>, die Instruktionen für das Programm enthält - so ähnlich wie eine Konfigurationsdatei, nur viel mächtiger. Das Wenigste, was ein Skript tun kann, ist eine einzelne Aktion ausführen und sich dann beenden. Die meisten Skripte jedoch definieren eine Reihe von <a href="Hotkeys.htm">Hotkeys</a>, von denen jeder eine oder mehrere Aktionen ausführt, sobald er gedrückt wird.</p>
<pre>#z::Run "https://www.autohotkey.com"  <em>; WIN+Z</em>

^!n::  <em>; STRG+ALT+N</em>
{
    if WinExist("Unbenannt - Editor")
        WinActivate
    else
        Run "Notepad"
}</pre>
<p><strong>Tipp:</strong> Sofern es Ihr Browser unterstützt, können Sie jeden Codeblock (wie der oben) als Skriptdatei herunterladen, indem Sie den Mauszeiger über den Codeblock bewegen und oben rechts auf die Schaltfläche klicken.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#create">Ein Skript erstellen</a></li>
  <li><a href="#edit">Ein Skript editieren (bearbeiten)</a></li>
  <li><a href="#run">Ein Skript starten</a></li>
  <li><a href="#tray-icon">Tray-Symbol</a></li>
  <li><a href="#main-window">Hauptfenster</a></li>
  <li><a href="#cmd">Verwendung der Befehlszeile</a></li>
  <li><a href="#portability">Portabilität von AutoHotkey.exe</a></li>
  <li><a href="#install">Installer-Optionen</a>
  <ul>
    <li><a href="#Installer_uiAccess">Mit UI-Access starten</a></li>
  </ul></li>
</ul>

<h2 id="create">Ein Skript erstellen</h2>
<p>Es gibt mehrere Möglichkeiten, wie man eine Skriptdatei erstellen kann:</p>
<ul>
  <li>Speichern Sie in Notepad (oder in einem anderen <a href="commands/Edit.htm#Editors">Texteditor</a>) eine Datei mit der Dateiendung <code>.ahk</code>. Auf manchen Systemen müssen Sie eventuell den Namen in Anführungszeichen setzen, um sicherzustellen, dass der Editor keine weitere Dateiendung (wie z. B. .txt) hinzufügt.
  <p class="note">Achten Sie darauf, die Datei als UTF-8 mit BOM zu speichern, wenn Sie vorhaben, ASCII-fremde Zeichen zu verwenden. Weitere Informationen finden Sie in der <a href="FAQ.htm#nonascii">FAQ</a>.</p></li>
  <li>Klicken Sie im Explorer mit der rechten Maustaste in den leeren Bereich des Ordners, wo Sie das Skript erstellen möchten, und wählen Sie dann <strong>Neu</strong> und <strong>AutoHotkey Script</strong> aus. Sie können dann einen Namen für das Skript eingeben (achten Sie darauf, die Dateiendung <code>.ahk</code> nicht zu löschen, falls sie sichtbar ist).</li>
</ul>
<p class="note">Weitere Informationen zum Schreiben eines Skripts finden Sie unter <a href="Language.htm">Skriptsprache</a>.</p>

<h2 id="edit">Ein Skript editieren (bearbeiten)</h2>
<p>Klicken Sie mit der rechten Maustaste auf die Skriptdatei und wählen Sie <strong>Edit Script</strong> aus, um ein Skript zum Editieren zu öffnen. Wenn das Skript bereits läuft, können Sie die <a href="commands/Edit.htm">Edit</a>-Funktion verwenden oder mit der rechten Maustaste auf das <a href="#tray-icon">Tray-Symbol</a> des Skripts klicken und <strong>Edit Script</strong> auswählen. Standardmäßig wird dadurch Notepad geöffnet, allerdings können Sie das durch Ändern eines Registry-Eintrags ändern, wie <a href="commands/Edit.htm#ExDefaultEditor">hier</a> gezeigt. Natürlich können Sie jederzeit Ihren Texteditor starten und dann das Skript wie jede andere Textdatei öffnen.</p>
<p>Nachdem Sie ein Skript editiert haben, müssen Sie das Skript starten oder <a href="commands/Reload.htm">neu laden</a>, damit die Änderungen wirksam werden. Ein laufendes Skript kann in der Regel über das <a href="#tray-icon">Tray-Menü</a> neu geladen werden.</p>

<h2 id="run">Ein Skript starten</h2>
<p>Sofern AutoHotkey installiert ist, gibt es mehrere Möglichkeiten, ein Skript zu starten:</p>
<ul>
<li>Machen Sie einen Doppelklick auf eine Skriptdatei (oder Verknüpfung einer Skriptdatei) im Explorer.</li>
<li>Rufen Sie AutoHotkey.exe in der Befehlszeile auf und übergeben Sie den Dateinamen des Skripts als <a href="Scripts.htm#cmd">Befehlszeilenparameter</a>.</li>
<li>Nachdem Sie <a href="Scripts.htm#defaultfile">das Standardskript</a> erstellt haben, können Sie AutoHotkey über die Verknüpfung im Startmenü ausführen, um es zu starten.</li>
<li>Wenn AutoHotkey an die Taskleiste oder das Startmenü unter Windows 7 oder höher angeheftet ist, können aktuelle oder angeheftete Skripte über die Sprungliste des Programms gestartet werden.</li>
</ul>
<p>Die meisten Skripte haben nur einen Effekt, während sie laufen. Verwenden Sie das <a href="#tray-icon">Tray-Menü</a> oder die <a href="commands/ExitApp.htm">ExitApp</a>-Funktion, um ein Skript zu beenden. Skripte sind auch gezwungen, sich zu beenden, wenn Windows heruntergefahren wird. Um ein Skript nach der Anmeldung des Benutzers automatisch starten zu lassen, ist es am einfachsten, eine Verknüpfung der Skriptdatei im <a href="Variables.htm#Startup">Autostart</a>-Ordner zu platzieren.</p>
<p>Skripte können auch <a href="Scripts.htm#ahk2exe">kompiliert</a> werden; das heißt, dass ein Skript zusammen mit einer AutoHotkey-Binärdatei zu einer eigenständigen ausführbaren Datei (.exe) kombiniert werden kann.</p>

<h2 id="tray-icon">Tray-Symbol</h2>
<p>Standardmäßig fügt jedes Skript ein eigenes Symbol in den Infobereich der Taskleiste (auch bekannt als Tray) ein.</p>
<p>Das Tray-Symbol sieht normalerweise wie folgt aus (aber die Farbe oder der Buchstabe ändert sich, wenn das Skript <a href="commands/Pause.htm">pausiert</a> oder <a href="commands/Suspend.htm">suspendiert</a> wird): <img src="static/ahk16.png" alt="H"></p>
<p>Klicken Sie mit der rechten Maustaste auf das Tray-Symbol, um das Tray-Menü anzuzeigen, das standardmäßig die folgenden Optionen enthält:</p>
<ul>
<li>Open - Öffnet das <a href="#main-window">Hauptfenster</a> des Skripts.</li>
<li>Help - Öffnet die Offline-Hilfe von AutoHotkey.</li>
<li>Window Spy - Zeigt verschiedene Informationen über ein Fenster an.</li>
<li>Reload Script - Lädt das Skript neu. Siehe <a href="commands/Reload.htm">Reload</a>.</li>
<li>Edit Script - Öffnet das Skript im Texteditor. Siehe <a href="commands/Edit.htm">Edit</a>.</li>
<li>Suspend Hotkeys - Deaktiviert oder aktiviert Hotkeys via <a href="commands/Suspend.htm">Suspend</a>.</li>
<li>Pause Script - Pausiert das Skript oder setzt es fort. Siehe <a href="commands/Pause.htm">Pause</a>.</li>
<li>Exit - Beendet das Skript.</li>
</ul>
<p>Standardmäßig bewirkt ein Doppelklick auf das Tray-Symbol, dass das <a href="#main-window">Hauptfenster</a> des Skripts angezeigt wird.</p>
<p>Das Verhalten und Aussehen des Tray-Symbols und -Menüs können angepasst werden:</p>
<ul>
  <li><a href="Variables.htm#TrayMenu">A_TrayMenu</a> gibt ein <a href="objects/Menu.htm">Menu-Objekt</a> zurück, das genutzt werden kann, um das Tray-Menü anzupassen.</li>
  <li><a href="Variables.htm#IconHidden">A_IconHidden</a> oder die <a href="commands/_NoTrayIcon.htm">#NoTrayIcon</a>-Direktive kann genutzt werden, um das Tray-Symbol zu verstecken (oder sichtbar zu machen).</li>
  <li><a href="Variables.htm#IconTip">A_IconTip</a> kann genutzt werden, um den ToolTip-Text des Tray-Symbols zu ändern.</li>
  <li><a href="commands/TraySetIcon.htm">TraySetIcon</a> kann genutzt werden, um das Symbol zu ändern.</li>
</ul>

<h2 id="main-window">Hauptfenster</h2>
<p>Das Hauptfenster des Skripts ist normalerweise versteckt, aber es kann über das <a href="#tray-icon">Tray-Symbol</a> oder eine der unten aufgeführten Funktionen sichtbar gemacht werden, um Zugang zu Informationen zu erhalten, die für das Debuggen des Skripts nützlich sind. Folgende Elemente, die im <strong>View</strong>-Menüelement zu finden sind, werden im Hauptfenster angezeigt:</p>
<ul>
<li>Lines most recently executed - Die aktuell ausgeführten Zeilen. Siehe <a href="commands/ListLines.htm">ListLines</a>.</li>
<li>Variables and their contents - Variablen und ihre Inhalte. Siehe <a href="commands/ListVars.htm">ListVars</a>.</li>
<li>Hotkeys and their methods - Hotkeys und ihre Methoden. Siehe <a href="commands/ListHotkeys.htm">ListHotkeys</a>.</li>
<li>Key history and script info - Tastenverlauf und Skript-Infos. Siehe <a href="commands/KeyHistory.htm">KeyHistory</a>.</li>
</ul>
<p><strong>Bekanntes Problem:</strong> Die Tastaturkurzbefehle der Menüpunkte funktionieren nicht, wenn das Skript ein <a href="commands/MsgBox.htm">Mitteilungsfenster</a> oder ein anderes Dialogfenster anzeigt.</p>
<p>Die interne Variable <a href="Variables.htm#ScriptHwnd">A_ScriptHwnd</a> enthält die HWND-Nummer (eindeutige ID) des Skript-Hauptfensters.</p>
<p>Schließt man dieses Fenster mit <a href="commands/WinClose.htm">WinClose</a> (auch von einem anderen Skript aus), wird das Skript beendet, aber die meisten anderen Methoden verstecken das Fenster und lassen das Skript laufen.</p>
<p>Wenn das Hauptfenster minimiert wird, wird es automatisch versteckt. Dieses Verhalten ist notwendig, um zu verhindern, dass untergeordnete Fenster (z. B. GUI-Fenster oder einige Dialogfenster) automatisch minimiert werden, und um zu bewirken, dass die Schaltfläche in der Taskleiste des Hauptfensters versteckt wird. Um das Hauptfenster stattdessen normal minimieren zu lassen, überschreiben Sie das Standardverhalten mit <a href="commands/OnMessage.htm">OnMessage</a>. Zum Beispiel:</p>
<pre>; Dies verhindert, dass das Hauptfenster beim Minimieren versteckt wird:
OnMessage 0x0112, AutoMinimierungVerhindern <em>; WM_SYSCOMMAND = 0x0112</em>
OnMessage 0x0005, AutoMinimierungVerhindern <em>; WM_SIZE = 0x0005
; Dies verhindert, dass untergeordnete GUI-Fenster (außer Dialogfenster) automatisch minimiert werden:</em>
OnMessage 0x0018, AutoMinimierungVerhindern
Persistent

AutoMinimierungVerhindern(wParam, lParam, uMsg, hwnd) {
    if (uMsg = 0x0112 &amp;&amp; wParam = 0xF020 &amp;&amp; hwnd = A_ScriptHwnd) { <em>; SC_MINIMIZE = 0xF020</em>
        WinMinimize
        return 0 <em>; Verhindern, dass das Hauptfenster versteckt wird.</em>
    }
    if (uMsg = 0x0005 &amp;&amp; wParam = 1 &amp;&amp; hwnd = A_ScriptHwnd) <em>; SIZE_MINIMIZED = 1</em>
        return 0 <em>; Verhindern, dass das Hauptfenster versteckt wird.</em>
    if (uMsg = 0x0018 &amp;&amp; lParam = 1) <em>; SW_PARENTCLOSING = 1</em>
        return 0 <em>; Verhindern, dass untergeordnete Fenster versteckt werden.</em>
}</pre>

<h3 id="title">Titel des Hauptfensters</h3>
<p>Der Titel des Skript-Hauptfensters wird von Mechanismen wie <a href="commands/_SingleInstance.htm">#SingleInstance</a> und <a href="commands/Reload.htm">Reload</a> verwendet, um andere Instanzen desselben Skripts zu identifizieren. Das <a href="commands/WinSetTitle.htm">Ändern des Titels</a> verhindert, dass das Skript als solches identifiziert wird. Welcher Titel standardmäßig verwendet wird, hängt davon ab, wie das Skript geladen wurde:
<table class="info">
  <tr><th>Geladen aus</th><th>Titelausdruck</th><th>Beispiel</th></tr>
  <tr><td>.ahk-Datei</td><td><code>A_ScriptFullPath " - AutoHotkey v" A_AhkVersion</code></td><td>E:\Mein Skript.ahk - AutoHotkey v1.1.33.09</td></tr>
  <tr><td>Hauptressource (kompiliertes Skript)</td><td><code>A_ScriptFullPath</code></td><td>E:\Mein Skript.exe</td></tr>
  <tr><td>Jede andere Ressource</td><td><code>A_ScriptFullPath " - " A_LineFile</code></td><td>E:\Mein AutoHotkey.exe - *INTERNES-TOOL.AHK</td></tr>
</table>
<p>Der folgende Code veranschaulicht, wie der Standardtitel mit dem Skript selbst ermittelt werden kann (wobei der tatsächliche Titel mit <a href="commands/WinGetTitle.htm">WinGetTitle</a> abgerufen werden kann):</p>
<pre>
Titel := A_ScriptFullPath
if !A_IsCompiled
    Titel .= " - AutoHotkey v" A_AhkVersion
<em>; Für ein korrektes Ergebnis muss dies von der auszuführenden Ressource ausgewertet werden,
; nicht von einem #Include (es sei denn, das #Include wurde von Ahk2Exe in das Skript eingebunden):</em>
else if SubStr(A_LineFile, 1, 1) = "*" &amp;&amp; A_LineFile != "*#1"
    Titel .= " - " A_LineFile
</pre>

<h2 id="embedded-scripts">Eingebettete Skripte</h2>
<p>Um Skripte in eine Standard-AutoHotkey-EXE-Datei einzubetten, fügen Sie die Skripte als Win32-Ressourcen (RCDATA) hinzu. Ein eingebettetes Skript kann in der Befehlszeile angegeben werden, oder mit <a href="commands/_Include.htm">#Include</a> durch Angabe eines Sternchens (*) gefolgt vom Ressourcennamen. Handelt es sich um eine Integer-ID, muss der Ressourcenname ein Rautezeichen (#) gefolgt von einer Dezimalzahl sein.</p>
<p>Das Programm kann automatisch Skriptcode aus den folgenden Ressourcen laden, wenn diese in der Datei vorhanden sind:</p>
<table class="info">
  <tr><th>ID</th><th>Angabe</th><th>Verwendung</th></tr>
  <tr>
    <td>1</td><td>*#1</td>
    <td>Dies ist das Mittel, mit dem ein <a href="Scripts.htm#ahk2exe">kompiliertes Skript</a> aus einer EXE-Datei erstellt wird. Dieses Skript wird automatisch ausgeführt, und die meisten Befehlszeilenoptionen werden an das Skript übergeben, anstatt vom Programm interpretiert zu werden. Externe Skripte und alternative eingebettete Skripte können mit der Befehlszeilenoption <a href="Scripts.htm#SlashScript">/script</a> ausgeführt werden.</td>
  </tr>
  <tr>
    <td>2</td><td>*#2</td>
    <td>Wenn vorhanden, wird dieses Skript automatisch vor jedem Skript, das das Programm lädt, und vor jeder mit <a href="Scripts.htm#SlashInclude">/include</a> angegebenen Datei "eingebunden".</td>
  </tr>
</table>
<p>Wenn die Quelle des Hauptskripts eine eingebettete Ressource ist, verhält sich das Programm im Modus "kompiliertes Skript", mit der Ausnahme, dass <a href="Variables.htm#AhkPath">A_AhkPath</a> immer den Pfad der aktuellen EXE-Datei enthält (derselbe wie <a href="Variables.htm#ScriptFullPath">A_ScriptFullPath</a>). Bei anderen Ressourcen außer *#1 wird der Ressourcenbezeichner in den <a href="#title">Titel des Hauptfensters</a> eingefügt, um <a href="commands/_SingleInstance.htm">#SingleInstance</a> und <a href="commands/Reload.htm">Reload</a> zu unterstützen.</p>
<p>Wenn <a href="Variables.htm#LineFile">A_LineFile</a> von einem Code referenziert wird, der aus einer eingebetteten Ressource stammt, enthält es ein Sternchen (*), gefolgt von dem Ressourcennamen.</p>

<h2 id="cmd">Verwendung der Befehlszeile</h2>
<p>Weitere Informationen zur Verwendung der Befehlszeile finden Sie unter <a href="Scripts.htm#cmd">Befehlszeilenparameter an ein Skript übergeben</a>, einschließlich einer Liste von Befehlszeilenoptionen, die das Verhalten des Programms beeinflussen.</p>

<h2 id="portability">Portabilität von AutoHotkey.exe</h2>
<p>Die Datei AutoHotkey.exe ist alles, was man braucht, um ein beliebiges .ahk-Skript zu starten.</p>
<p>Das Umbenennen von AutoHotkey.exe ändert auch die Tatsache, welches Skript <a href="Scripts.htm#defaultfile">standardmäßig</a> ausgeführt wird. Diese Methode kann als Alternative dienen, um ein Skript zu kompilieren, das auf einem Computer ohne installiertem AutoHotkey verwendet werden kann. Zum Beispiel führt <i>MeinSkript</i>.exe automatisch <i>MeinSkript</i>.ahk aus, wenn kein Dateiname angegeben ist.</p>

<h2 id="install">Installer-Optionen</h2>
<p class="warning"><strong>Hinweis:</strong> Es gibt derzeit keinen Standard-Installer für v2.0-alpha.</p>
<p>Um AutoHotkey automatisch in das Standardverzeichnis zu installieren (das gleiche Verzeichnis, das im Nicht-Silent-Modus angezeigt wird), starten Sie den Installer mit dem /S-Parameter. Zum Beispiel:</p>
<pre>AutoHotkey110800_Install.exe /S</pre>
<p>Mit dem /D-Parameter kann ein benutzerdefiniertes Standardverzeichnis angegeben werden (lässt man /S weg, würde /D das im Installer angezeigte Standardverzeichnis ändern). Zum Beispiel:</p>
<pre>AutoHotkey110800_Install.exe /S /D=C:\Programme\AutoHotkey</pre>
<p><strong>Version</strong>: Falls AutoHotkey bereits installiert wurde, erkennt der Installer automatisch, welche Version von AutoHotkey.exe standardmäßig gesetzt werden soll. Ansonsten wird standardmäßig Unicode 32-Bit verwendet, oder Unicode 64-Bit, wenn das Betriebssystem im 64-Bit-Format ist. Um die standardmäßig gesetzte Version von AutoHotkey.exe zu überschreiben, übergeben Sie einen der folgenden Parameter:</p>
<ul>
  <li><code>/A32</code> oder <code>/ANSI</code>: ANSI 32-Bit.</li>
  <li><code>/U64</code> oder <code>/x64</code>: Unicode 64-Bit (nur auf 64-Bit-Systemen gültig).</li>
  <li><code>/U32</code>: Unicode 32-Bit.</li>
</ul>
<p>Das folgende Beispiel installiert AutoHotkey automatisch und setzt ANSI 32-Bit als Standardversion:</p>
<pre>AutoHotkey110800_Install.exe /S /A32</pre>
<p><strong>Deinstallieren</strong>: Um AutoHotkey automatisch zu deinstallieren, starten Sie Installer.ahk mit dem Parameter <code>/Uninstall</code>. Zum Beispiel:</p>
<pre class="no-highlight">"C:\Programme\AutoHotkey\AutoHotkey.exe" "C:\Programme\AutoHotkey\Installer.ahk" /Uninstall</pre>
<p><strong>Hinweis</strong>: Installer.ahk muss mit Administratorrechten ausgeführt werden, um korrekt zu funktionieren.</p>
<p><strong>Extrahieren</strong>: Spätere Versionen des Installers enthalten einen Link in der rechten unteren Ecke, um die Setup-Dateien ohne Installation zu extrahieren. Wenn diese Funktion vorhanden ist, kann sie mit der Befehlszeilenoption <code>/E</code> aufgerufen werden. Zum Beispiel:</p>
<pre>AutoHotkey110903_Install.exe /D=F:\AutoHotkey /E</pre>
<p><strong>Skripte neustarten</strong>: Im automatischen Install/Uninstall-Modus werden laufende Skripte automatisch geschlossen, wo immer es notwendig ist. Übergeben Sie die <code>/R</code>-Option <strong>ohne</strong> zusätzliche Befehlszeilenparameter, um diese Skripte automatisch neu zu laden, egal mit welcher EXE-Datei sie gerade ausgeführt werden. Das Setup wird versuchen, die Skripte über den Explorer zu starten, damit sie ohne Administratorrechte laufen, wenn UAC aktiv ist.</p>

<p id="Installer_IsHostApp"><strong>Taskleistenschaltflächen</strong>: Ab Windows 7 werden Taskleistenschaltflächen von mehreren Skripten automatisch gruppiert oder standardmäßig zu einer Schaltfläche zusammengefasst. Die Option <em>Separate taskbar buttons</em> (Separate Taskleistenschaltflächen) deaktiviert dieses Verhalten, indem sie jede ausführbare AutoHotkey-Datei als <a href="https://msdn.microsoft.com/de-de/library/ee872121#APPLICATIONS">Host-App (IsHostApp)</a> registriert.</p>
<p>Installationen via Befehlszeile können <code>/IsHostApp</code> oder <code>/IsHostApp=1</code> benutzen, um die Option zu aktivieren, und <code>/IsHostApp=0</code>, um sie zu deaktivieren.</p>

<h3 id="Installer_uiAccess">Mit UI-Access starten</h3>
<p>Die Installer-GUI verfügt über die Option "Add 'Run with UI Access' to context menus" ('Mit UI-Access ausführen' in das Kontextmenü einfügen). Diese Kontextmenü-Option kann häufig auftretende <a href="FAQ.htm#uac">UAC-bezogene Probleme</a> umgehen, damit das Skript administrative Programme automatisieren kann - ohne dass das Skript mit Administratorrechten laufen muss. Um das zu erreichen, wird der Installer Folgendes tun:</p>
<ul>
  <li>AutoHotkeyA32.exe, AutoHotkeyU32.exe und (sofern vorhanden) AutoHotkeyU64.exe in AutoHotkey*_UIA.exe umbenennen.</li>
  <li><a href="https://msdn.microsoft.com/de-de/library/ee671610">uiAccess-Attribut</a> im integrierten Manifest jeder UIA-Datei setzen.</li>
  <li>Ein selbst-signiertes digitales Zertifikat namens "AutoHotkey" erstellen und jede UIA-Datei signieren.</li>
  <li>Die Kontextmenü-Option registrieren, um die entsprechende EXE-Datei ausführen zu können.</li>
</ul>
<p>Wenn irgendeine dieser UIA-Dateien vor der Installation vorhanden sein sollte, wird der Installer sie automatisch aktualisieren, selbst wenn die uiAccess-Option inaktiv ist.</p>
<p>Installationen via Befehlszeile können <code>/uiAccess</code> oder <code>/uiAccess=1</code> benutzen, um die Option zu aktivieren, und <code>/uiAccess=0</code>, um sie zu deaktivieren. Standardmäßig wird der Installer die Option aktivieren, wenn UAC aktiv ist und wenn die UI-Access-Kontextmenü-Option vor der Installation vorhanden war.</p>
<p>Skripte, die andere Skripte mit UI-Access ausführen müssen, können einfach <a href="commands/Run.htm">Run</a> benutzen, um die entsprechende UIA.EXE-Datei mit den normalen <a href="#cmd">Befehlszeilenparametern</a> auszuführen.</p>
<p><strong>Bekannte Einschränkungen</strong>:</p>
<ul>
  <li>UIA ist nur wirksam, wenn der Speicherort der Datei vertrauenswürdig ist; zum Beispiel ein Unterverzeichnis im Programme-Ordner.</li>
  <li>UIA.EXE-Dateien funktionieren nur auf anderen Computern, wenn das digitale Zertifikat, welches zum Erstellen dieser Dateien benutzt wurde, auch auf diesen Computern installiert ist.</li>
  <li>UIA.EXE-Dateien können aus Sicherheitsgründen nicht via CreateProcess gestartet werden. Stattdessen kann ShellExecute benutzt werden. <a href="commands/Run.htm">Run</a> versucht beides.</li>
  <li>UIA.EXE-Dateien können nicht modifiziert werden, weil das ansonsten deren digitale Signatur ungültig machen würde.</li>
  <li>Da die "Integritätsstufe" von UIA-Programmen sich von anderen Programmen unterscheidet, haben sie nur Zugriff auf Objekte, die von anderen UIA-Programmen registriert wurden. Zum Beispiel würde <code><a href="commands/ComObjActive.htm">ComObjActive</a>("Word.Application")</code> fehlschlagen, weil Word nicht für UI-Access markiert wurde.</li>
  <li>Die eigenen Fenster des Skripts können aus Sicherheitsgründen nur von UIA-Programmen/Skripten automatisiert werden.</li>
  <li>Das Ausführen eines UIA-losen Skripts, das einen Maus-Hook benutzt (selbst ein einfaches <code>InstallMouseHook</code>), kann eventuell alle Maus-Hotkeys blockieren, wenn der Mauszeiger auf ein Fenster eines UIA-Skripts zeigt, oder sogar Hotkeys, die vom UIA-Skript selbst implementiert wurden. Eine Möglichkeit zur Umgehung des Problems ist es, UIA-Skripte als Letztes zu laden.</li>
</ul>
<p>Schauen Sie sich <a href="https://www.autohotkey.com/board/topic/70449-enable-interaction-with-administrative-programs/">Enable interaction with administrative programs</a> (Interaktion mit administrativen Programmen ermöglichen) im Archiv-Forum an, um mehr zu erfahren.</p>

</body>
</html>